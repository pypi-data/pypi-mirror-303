[build-system]
build-backend = "poetry.core.masonry.api"
requires = [ "poetry-core",]

[tool.poetry]
authors = [ "mmocchi <akihiro.matsumoto.exe@gmail.com>",]
description = "Python code metrics tool"
name = "pycodemetrics"
homepage = "https://github.com/mmocchi"
repository = "https://github.com/mmocchi/pycodemetrics"
readme = "README.md"
version = "0.0.11"
license = "MIT"
[[tool.poetry.packages]]
include = "pycodemetrics"
from = "src"

[tool.mypy]
plugins = [ "pydantic.mypy",]
ignore_missing_imports = true

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true

[tool.poetry.dependencies]
click = "^8.1.7"
cognitive-complexity = "^1.3.0"
pandas = "^2.2.2"
pandas-stubs = "^2.2.2.240603"
pydantic = "^2.8.2"
python = "^3.12"
radon = "^6.0.1"
tabulate = "^0.9.0"
tqdm = "^4.66.4"
types-tabulate = "^0.9.0.20240106"
types-tqdm = "^4.66.0.20240417"
toml = "^0.10.2"
types-toml = "^0.10.8.20240310"

[tool.poetry.scripts]
pycodemetrics = "pycodemetrics.__main__:main"

[tool.pytest.ini_options]
addopts = "--cov=src/pycodemetrics --cov-report=term-missing --cov-report=xml"
pythonpath = [ "src",]
testpaths = [ "tests",]

[tool.coverage.run]
source = [ "src/pycodemetrics",]

[tool.coverage.report]
exclude_lines = [ "pragma: no cover", "def __repr__", "if self.debug:", "if __name__ == .__main__.:", "raise NotImplementedError", "pass", "except ImportError:",]

[tool.taskipy.tasks]
lint = "ruff check ."
format = "ruff format ."
mypy = "mypy src"
summary = "python generate_project_summary.py"
test = "pytest tests"

[tool.ruff.lint]
ignore = [ "E501",]
select = [ "E", "F", "W", "C90", "I",]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = [ "F401",]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.pylint]
max-args = 10

[tool.poetry.group.dev.dependencies]
chardet = "^5.2.0"
mypy = "^1.11.0"
pytest = "^8.3.2"
pytest-cov = "^5.0.0"
pytest-mock = "^3.14.0"
ruff = "0.7.0"
taskipy = "^1.13.0"
pre-commit = "^4.0.0"
toml = "^0.10.2"
