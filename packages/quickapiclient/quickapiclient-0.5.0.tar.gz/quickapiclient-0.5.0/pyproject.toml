[tool.poetry]
name = "quickapiclient"
version = "v0.5.0"
description = "A library for creating fully typed declarative API clients quickly and easily."
authors = ["Martin N. <martinn@users.noreply.github.com>"]
repository = "https://github.com/martinn/quickapiclient"
documentation = "https://martinn.github.io/quickapiclient/"
readme = "README.md"
packages = [{ include = "quickapi" }]

[tool.poetry.dependencies]
python = ">=3.10,<4.0"
httpx = "^0.27.0"
chili = "^2.8.4"
requests = { version = "^2.31.0", optional = true }
attrs = { version = "^23.2.0", optional = true }
cattrs = { version = "^23.2.3", optional = true }
pydantic = { version = "^2.6.4", optional = true }
msgspec = { version = "^0.18.6", optional = true }
typing-extensions = { version = "^4", python = "<3.11" }

[tool.poetry.group.dev.dependencies]
pytest = "^7.2.0"
pytest-cov = "^4.0.0"
pytest-httpx = "^0.30.0"
deptry = "^0.12.0"
mypy = "^1.5.1"
pre-commit = "^3.4.0"
tox = "^4.11.1"
httpx-auth = "^0.22.0"
responses = "^0.25.0"
types-requests = "^2.31.0.20240311"
pydantic = "^2.6.4"
attrs = "^23.2.0"
cattrs = "^23.2.3"
msgspec = "^0.18.6"

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.6.1"
mkdocs-material = "^9.5.21"
mkdocstrings = { extras = ["python"], version = "^0.26.2" }
markdown-checklist = "^0.4.4"
mdx-truly-sane-lists = "^1.3"

[tool.poetry.extras]
requests = ["requests"]
attrs = ["attrs", "cattrs"]
pydantic = ["pydantic"]
msgspec = ["msgspec"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
files = ["quickapi"]
disallow_untyped_defs = "True"
disallow_any_unimported = "True"
no_implicit_optional = "True"
check_untyped_defs = "True"
warn_return_any = "True"
warn_unused_ignores = "True"
show_error_codes = "True"

[tool.pytest.ini_options]
pythonpath = "../quickapi"
testpaths = ["tests"]

[tool.ruff]
target-version = "py310"
line-length = 88
fix = true
select = [
  # flake8-2020
  "YTT",
  # flake8-bandit
  "S",
  # flake8-bugbear
  "B",
  # flake8-builtins
  "A",
  # flake8-comprehensions
  "C4",
  # flake8-debugger
  "T10",
  # flake8-simplify
  "SIM",
  # isort
  "I",
  # mccabe
  "C90",
  # pycodestyle
  "E",
  "W",
  # pyflakes
  "F",
  # pygrep-hooks
  "PGH",
  # pyupgrade
  "UP",
  # ruff
  "RUF",
  # tryceratops
  "TRY",
]
ignore = [
  # LineTooLong
  "E501",
  # DoNotAssignLambda
  "E731",
]

[tool.ruff.format]
preview = true

[tool.coverage.report]
skip_empty = true
exclude_also = [
  "if TYPE_CHECKING:",
  "raise AssertionError",
  "raise NotImplementedError",
  "@(abc\\.)?abstractmethod",
  "case _:",
]

[tool.coverage.run]
branch = true
source = ["quickapi"]


[tool.ruff.per-file-ignores]
"tests/*" = ["S101"]

[tool.deptry]
known_first_party = ["_typeshed"]
