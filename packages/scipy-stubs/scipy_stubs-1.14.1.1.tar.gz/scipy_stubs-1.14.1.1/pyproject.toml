[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core"]

[tool.poetry]
name = "scipy-stubs"
description = "Typing Stubs for SciPy"
version = "1.14.1.1"
authors = ["Joren Hammudoglu <jhammudoglu@gmail.com>"]
license = "BSD-3-Clause"
readme = "README.md"
packages = [{include = "scipy-stubs"}]
classifiers = [
    "Development Status :: 4 - Beta",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Typing :: Stubs Only",
    "Typing :: Typed",
]
repository = "https://github.com/jorenham/scipy-stubs/"
documentation = "https://github.com/jorenham/scipy-stubs?tab=readme-ov-file#scipy-stubs"

[tool.poetry.urls]
Issues = "https://github.com/jorenham/scipy-stubs/issues"
Changelog = "https://github.com/jorenham/scipy-stubs/releases"
Funding = "https://github.com/sponsors/jorenham"

[tool.poetry.extras]
scipy = ["scipy"]

[tool.poetry.dependencies]
python = "^3.10.1"
optype = "^0.6.1"
scipy = {version = ">=1.10", optional = true}

[tool.poetry.group.dev.dependencies]
scipy = "1.14.1"
poethepoet = "^0.29.0"
pre-commit = "^4.0.1"
tox = "^4.23.0"

[tool.poetry.group.lint.dependencies]
basedmypy = "^2.6.0"
basedpyright = "^1.19.0"
ruff = "^0.7.0"

[tool.poetry.group.codegen]
optional = true
[tool.poetry.group.codegen.dependencies]
libcst = "^1.5.0"

[tool.poe.executor]
type = "poetry"

[tool.poe.tasks]
clean = """
rm -rf
    scipy-stubs/**/*.pyc
    scipy-stubs/**/__pycache__
    ./**/.mypy_cache
    ./**/.ruff_cache
"""
lint = "ruff check"
format = "ruff format"
pre-commit = "pre-commit run --all-files"
tox = "tox -p all"

_typetest_bpr = "basedpyright tests/typetests"
_typetest_mypy = "mypy --config-file=pyproject.toml tests/typetests"
typetest = ["_typetest_bpr", "_typetest_mypy"]

[tool.poe.tasks.pyright]
cmd = "basedpyright $path"
args = [{name = "path", positional = true, multiple = true, default = "scipy-stubs codegen"}]

[tool.poe.tasks.mypy]
cmd = "mypy --config-file=pyproject.toml $path"
args = [{name = "path", positional = true, multiple = true, default = "scipy-stubs codegen"}]

[tool.poe.tasks.stubtest]
cmd = """
stubtest
    --mypy-config-file=pyproject.toml
    --allowlist=tests/stubtest/allowlist.txt
    --ignore-unused-allowlist
    $modules
"""
args = [{name = "modules", positional = true, multiple = true, default = "scipy"}]

[tool.poe.tasks.codemod]
cmd = """
python -m libcst.tool codemod
    -x
    --hide-generated-warnings
    --hide-blacklisted-warnings
    --hide-progress
    --include-stubs
    codegen.mods.$name
    $path
"""
args = [
    {name = "name", positional = true, multiple = false, required = true},
    {name = "path", positional = true, multiple = false, default = "scipy-stubs"}
]

[tool.mypy]
python_version = "3.10"
strict = true
disable_bytearray_promotion = true
disable_memoryview_promotion = true
warn_unused_ignores = true
disallow_any_explicit = false  # no other way to type e.g. `float64 <: number[Any]`
enable_error_code = ["ignore-without-code", "redundant-expr", "truthy-bool"]

[tool.pyright]
include = ["scipy-stubs", "tests/typetests", "codegen"]
venv = ".venv"
venvPath = "."
stubPath = "."
pythonVersion = "3.10"
pythonPlatform = "All"
typeCheckingMode = "strict"

deprecateTypingAliases = true
enableTypeIgnoreComments = false
reportIgnoreCommentWithoutRule = true
reportImplicitRelativeImport = true
reportInvalidCast = true
reportUnnecessaryTypeIgnoreComment = true

executionEnvironments = [
  {root = "codegen", reportUnusedParameter = false},
  {root = "scipy-stubs", reportDeprecated = false, reportPrivateUsage = false},
  {root = "tests/typetests", reportPrivateUsage = false},
]

[tool.ruff]
builtins = ["reveal_locals", "reveal_type"]
exclude = [".venv"]
force-exclude = true
target-version = "py310"
# https://typing.readthedocs.io/en/latest/guides/writing_stubs.html#maximum-line-length
line-length = 130
src = ["scipy-stubs", "codemods.py"]

[tool.ruff.format]
line-ending = "lf"
skip-magic-trailing-comma = false

[tool.ruff.lint]
ignore = [
    "E741",
    "COM812", # ruff format compat
    "PYI054", # numeric-literal-too-long
]
preview = true
select = [
    "E",
    "W",
    "I",
    "UP",
    "ANN",
    "COM",
    "EXE",
    "ICN",
    "INP",
    "PYI",
    "Q",
    "TID",
    "TCH",
    "ERA",
    "PGH",
    "RUF",
    "PLC0105",
    "PLC0131",
    "PLC0132",
    "PLC0414",
    "PLE0303",
    "PLE0304",
    "PLE0305",
    "PLE0307",
    "PLE0308",
    "PLE0309",
    "PLE0604",
    "PLE0605",
    "PLE1132",
]

[tool.ruff.lint.flake8-import-conventions]
banned-from = [
    "numpy",
    "numpy.emath",
    "numpy.fft",
    "numpy.linalg",
    "numpy.ma",
    "numpy.polynomial",
    "numpy.random",
    "numpy.rec",
    "numpy.typing",
    "numpy.strings",
    "optype.numpy",
    "optype.typing",
]
[tool.ruff.lint.flake8-import-conventions.extend-aliases]
"ctypes" = "ct"
"datetime" = "dt"
"numpy" = "np"
"numpy.typing" = "npt"
"optype.numpy" = "onpt"

[tool.ruff.lint.isort]
combine-as-imports = true
known-first-party = ["scipy"]
no-lines-before = ["typing", "first-party", "local-folder"]
section-order = [
    "standard-library",
    "typing",
    "third-party",
    "first-party",
    "local-folder",
]
split-on-trailing-comma = true

[tool.ruff.lint.isort.sections]
typing = ["collections.abc", "types", "typing", "typing_extensions"]

[tool.ruff.lint.flake8-annotations]
allow-star-arg-any = true
mypy-init-return = true

[tool.tox]
isolated_build = true
env_list = ["3.10", "3.11", "3.12", "3.13", "precommit"]

[tool.tox.env_run_base]
description = "stubtest with {base_python}"
skip_install = true
allowlist_externals = ["poetry", "poe"]
commands_pre = [["poetry", "install"]]
commands = [["poe", "stubtest"]]

[tool.tox.env.precommit]
description = "pre-commit"
skip_install = true
allowlist_externals = ["poetry", "poe"]
commands_pre = [["poetry", "install"]]
commands = [["poe", "pre-commit"]]
