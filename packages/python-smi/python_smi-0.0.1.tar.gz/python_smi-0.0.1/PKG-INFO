Metadata-Version: 2.1
Name: python-smi
Version: 0.0.1
Summary: Convenient access to `pynvml` (the library behind `nvidia-smi`)
Home-page: https://github.com/AnswerDotAI/py-smi
Author: Jeremy Howard
Author-email: info@fast.ai
License: Apache Software License 2.0
Keywords: nbdev jupyter notebook python
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: Natural Language :: English
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: License :: OSI Approved :: Apache Software License
Requires-Python: >=3.9
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: fastcore
Requires-Dist: nvidia-ml-py
Requires-Dist: psutil
Provides-Extra: dev

# py-smi

<!-- WARNING: THIS FILE WAS AUTOGENERATED! DO NOT EDIT! -->

This file will become your README and also the index of your
documentation.

## Developer Guide

If you are new to using `nbdev` here are some useful pointers to get you
started.

### Install py_smi in Development mode

``` sh
# make sure py_smi package is installed in development mode
$ pip install -e .

# make changes under nbs/ directory
# ...

# compile to have changes apply to py_smi
$ nbdev_prepare
```

## Usage

### Installation

Install latest from the GitHub
[repository](https://github.com/AnswerDotAI/py-smi):

``` sh
$ pip install git+https://github.com/AnswerDotAI/py-smi.git
```

or from [conda](https://anaconda.org/AnswerDotAI/py-smi)

``` sh
$ conda install -c AnswerDotAI py_smi
```

or from [pypi](https://pypi.org/project/py-smi/)

``` sh
$ pip install py_smi
```

### Documentation

Documentation can be found hosted on this GitHub
[repository](https://github.com/AnswerDotAI/py-smi)’s
[pages](https://AnswerDotAI.github.io/py-smi/). Additionally you can
find package manager specific guidelines on
[conda](https://anaconda.org/AnswerDotAI/py-smi) and
[pypi](https://pypi.org/project/py-smi/) respectively.

## How to use

Fill me in please! Don’t forget code examples:

``` python
1+1
```

    2
