[tool.poetry]
name = "exasol-notebook-connector"
version = "0.4.0"
description = "Components, tools, APIs, and configurations in order to connect Jupyter notebooks to Exasol and various other systems."
packages = [ {include = "exasol"}, ]
authors = [ "Christoph Kuhnke <christoph.kuhnke@exasol.com>" ]
maintainers = [ "Christoph Kuhnke <christoph.kuhnke@exasol.com>" ]
classifiers = [
   "Programming Language :: Python :: 3",
   "Development Status :: 3 - Alpha",
   "Framework :: Jupyter :: JupyterLab :: 3",
   "License :: OSI Approved :: MIT License",
   "Topic :: Security :: Cryptography",
]
readme = "README.md"
license = "MIT"

[tool.poetry.urls]
"Homepage" = "https://github.io/exasol/notebook-connector"
"Documentation" = "https://github.io/exasol/notebook-connector"
"Source" = "https://github.io/exasol/notebook-connector"
"Issues" = "https://github.io/exasol/notebook-connector/issues"


[tool.poetry.dependencies]
python = ">=3.10,<4.0"
sqlcipher3-binary = {version = ">=0.5.0", platform = "linux"}
sqlcipher3 = {version = ">=0.5.0", platform = "darwin"}
sqlalchemy-exasol  = ">=4.6.0"
pyexasol = ">=0.24.0"
exasol-bucketfs = ">=0.9.0,<1.0.0"
exasol-transformers-extension = "^2.0.0"
transformers = {extras = ["torch"], version = "^4.36.2"}
exasol-sagemaker-extension = ">=0.10.0,<1.0.0"

exasol-integration-test-docker-environment = ">=2.0.0"
requests = ">=2.31.0,<2.32.0"
types-requests = "^2.31.0.6"
ifaddr = "^0.2.0"
exasol-saas-api = ">=0.9.0,<1.0.0"
ibis-framework = {extras = ["exasol"], version = "^9.1.0"}
exasol-script-languages-container-tool = ">=0.19.0"
GitPython = ">=2.1.0"


[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"


[tool.poetry.dev-dependencies]
pytest = "^7.1.1"
pytest-mock = "^3.7.0"
pytest_dependency = ">=0.6.0"
exasol-toolbox = "^0.14.0"


[tool.pytest.ini_options]
minversion = "6.0"

testpaths = [
    "test"
]

[tool.coverage.run]
relative_files = true
source = [
    "exasol",
]

[tool.coverage.report]
fail_under = 15


[tool.black]
line-length = 88
verbose = false
include = "\\.pyi?$"


[tool.isort]
profile = "black"
force_grid_wrap = 2


[tool.pylint.master]
errors-only = true
output-format = "colorized,json:.lint.json,text:.lint.txt"

[[tool.mypy.overrides]]
module = [
    "exasol.toolbox.nox.tasks",
    "test.conftest.*",
    "test.*",
    ]
ignore_errors = true
ignore_missing_imports = true

[tool.pylint.format]
max-line-length = 88
max-module-lines = 800