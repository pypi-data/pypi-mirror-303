"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .linkedincompany import LinkedInCompany, LinkedInCompanyTypedDict
from exfunc_sdk import utils
from exfunc_sdk.types import BaseModel
from typing import Optional
from typing_extensions import NotRequired, TypedDict


class EnrichCompanyRequestBodyTypedDict(TypedDict):
    company_url: str
    r"""The LinkedIn URL of the company to enrich"""


class EnrichCompanyRequestBody(BaseModel):
    company_url: str
    r"""The LinkedIn URL of the company to enrich"""


class EnrichCompanyLinkedinResponseResponseBodyData(BaseModel):
    message: Optional[str] = None
    r"""Error message string"""


class EnrichCompanyLinkedinResponseResponseBody(Exception):
    r"""EnrichCompany API server error response"""

    data: EnrichCompanyLinkedinResponseResponseBodyData

    def __init__(self, data: EnrichCompanyLinkedinResponseResponseBodyData):
        self.data = data

    def __str__(self) -> str:
        return utils.marshal_json(
            self.data, EnrichCompanyLinkedinResponseResponseBodyData
        )


class EnrichCompanyLinkedinResponseBodyData(BaseModel):
    message: Optional[str] = None
    r"""Error message string"""


class EnrichCompanyLinkedinResponseBody(Exception):
    r"""EnrichCompany API user error response"""

    data: EnrichCompanyLinkedinResponseBodyData

    def __init__(self, data: EnrichCompanyLinkedinResponseBodyData):
        self.data = data

    def __str__(self) -> str:
        return utils.marshal_json(self.data, EnrichCompanyLinkedinResponseBodyData)


class EnrichCompanyResponseBodyTypedDict(TypedDict):
    r"""EnrichCompany API successful response"""

    company: NotRequired[LinkedInCompanyTypedDict]


class EnrichCompanyResponseBody(BaseModel):
    r"""EnrichCompany API successful response"""

    company: Optional[LinkedInCompany] = None
