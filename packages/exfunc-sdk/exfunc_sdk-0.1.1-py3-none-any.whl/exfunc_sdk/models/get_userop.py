"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .twitteruser import TwitterUser, TwitterUserTypedDict
from exfunc_sdk import utils
from exfunc_sdk.types import BaseModel
from typing import Optional
from typing_extensions import NotRequired, TypedDict


class GetUserRequestBodyTypedDict(TypedDict):
    username: str
    r"""The username of the Twitter user to retrieve"""


class GetUserRequestBody(BaseModel):
    username: str
    r"""The username of the Twitter user to retrieve"""


class GetUserTwitterResponseResponseBodyData(BaseModel):
    message: Optional[str] = None
    r"""Error message string"""


class GetUserTwitterResponseResponseBody(Exception):
    r"""GetUser API server error response"""

    data: GetUserTwitterResponseResponseBodyData

    def __init__(self, data: GetUserTwitterResponseResponseBodyData):
        self.data = data

    def __str__(self) -> str:
        return utils.marshal_json(self.data, GetUserTwitterResponseResponseBodyData)


class GetUserTwitterResponseBodyData(BaseModel):
    message: Optional[str] = None
    r"""Error message string"""


class GetUserTwitterResponseBody(Exception):
    r"""GetUser API user error response"""

    data: GetUserTwitterResponseBodyData

    def __init__(self, data: GetUserTwitterResponseBodyData):
        self.data = data

    def __str__(self) -> str:
        return utils.marshal_json(self.data, GetUserTwitterResponseBodyData)


class GetUserResponseBodyTypedDict(TypedDict):
    r"""GetUser API successful response"""

    user: NotRequired[TwitterUserTypedDict]


class GetUserResponseBody(BaseModel):
    r"""GetUser API successful response"""

    user: Optional[TwitterUser] = None
