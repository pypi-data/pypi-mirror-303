"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .yelpbusiness import YelpBusiness, YelpBusinessTypedDict
from enum import Enum
from exfunc_sdk import utils
from exfunc_sdk.types import BaseModel
from typing import List, Optional
from typing_extensions import NotRequired, TypedDict


class SearchBusinessesSortBy(str, Enum):
    r"""The criteria to sort the results (e.g., \"recommended\", \"highest_rated\", etc.)"""

    RECOMMENDED = "recommended"
    HIGHEST_RATED = "highest_rated"
    REVIEW_COUNT = "review_count"


class SearchBusinessesRequestBodyTypedDict(TypedDict):
    query: str
    r"""The search term to find businesses"""
    location: str
    r"""The location to search for businesses"""
    sort_by: NotRequired[SearchBusinessesSortBy]
    r"""The criteria to sort the results (e.g., \"recommended\", \"highest_rated\", etc.)"""
    start: NotRequired[int]
    r"""The starting index for pagination (default is 0)"""


class SearchBusinessesRequestBody(BaseModel):
    query: str
    r"""The search term to find businesses"""

    location: str
    r"""The location to search for businesses"""

    sort_by: Optional[SearchBusinessesSortBy] = None
    r"""The criteria to sort the results (e.g., \"recommended\", \"highest_rated\", etc.)"""

    start: Optional[int] = None
    r"""The starting index for pagination (default is 0)"""


class SearchBusinessesYelpResponseResponseBodyData(BaseModel):
    message: Optional[str] = None
    r"""Error message string"""


class SearchBusinessesYelpResponseResponseBody(Exception):
    r"""SearchBusinesses API server error response"""

    data: SearchBusinessesYelpResponseResponseBodyData

    def __init__(self, data: SearchBusinessesYelpResponseResponseBodyData):
        self.data = data

    def __str__(self) -> str:
        return utils.marshal_json(
            self.data, SearchBusinessesYelpResponseResponseBodyData
        )


class SearchBusinessesYelpResponseBodyData(BaseModel):
    message: Optional[str] = None
    r"""Error message string"""


class SearchBusinessesYelpResponseBody(Exception):
    r"""SearchBusinesses API user error response"""

    data: SearchBusinessesYelpResponseBodyData

    def __init__(self, data: SearchBusinessesYelpResponseBodyData):
        self.data = data

    def __str__(self) -> str:
        return utils.marshal_json(self.data, SearchBusinessesYelpResponseBodyData)


class SearchBusinessesResponseBodyTypedDict(TypedDict):
    r"""SearchBusinesses API successful response"""

    businesses: NotRequired[List[YelpBusinessTypedDict]]


class SearchBusinessesResponseBody(BaseModel):
    r"""SearchBusinesses API successful response"""

    businesses: Optional[List[YelpBusiness]] = None
