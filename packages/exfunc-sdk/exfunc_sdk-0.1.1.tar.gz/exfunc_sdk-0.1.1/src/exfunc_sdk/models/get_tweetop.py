"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .tweet import Tweet, TweetTypedDict
from exfunc_sdk import utils
from exfunc_sdk.types import BaseModel
from typing import Optional
from typing_extensions import NotRequired, TypedDict


class GetTweetRequestBodyTypedDict(TypedDict):
    tweet_id: str
    r"""The ID of the tweet to retrieve"""


class GetTweetRequestBody(BaseModel):
    tweet_id: str
    r"""The ID of the tweet to retrieve"""


class GetTweetTwitterResponseResponseBodyData(BaseModel):
    message: Optional[str] = None
    r"""Error message string"""


class GetTweetTwitterResponseResponseBody(Exception):
    r"""GetTweet API server error response"""

    data: GetTweetTwitterResponseResponseBodyData

    def __init__(self, data: GetTweetTwitterResponseResponseBodyData):
        self.data = data

    def __str__(self) -> str:
        return utils.marshal_json(self.data, GetTweetTwitterResponseResponseBodyData)


class GetTweetTwitterResponseBodyData(BaseModel):
    message: Optional[str] = None
    r"""Error message string"""


class GetTweetTwitterResponseBody(Exception):
    r"""GetTweet API user error response"""

    data: GetTweetTwitterResponseBodyData

    def __init__(self, data: GetTweetTwitterResponseBodyData):
        self.data = data

    def __str__(self) -> str:
        return utils.marshal_json(self.data, GetTweetTwitterResponseBodyData)


class GetTweetResponseBodyTypedDict(TypedDict):
    r"""GetTweet API successful response"""

    tweet: NotRequired[TweetTypedDict]


class GetTweetResponseBody(BaseModel):
    r"""GetTweet API successful response"""

    tweet: Optional[Tweet] = None
