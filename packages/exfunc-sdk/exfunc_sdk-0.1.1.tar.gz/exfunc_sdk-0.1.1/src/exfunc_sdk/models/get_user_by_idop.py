"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .twitteruser import TwitterUser, TwitterUserTypedDict
from exfunc_sdk import utils
from exfunc_sdk.types import BaseModel
from typing import Optional
from typing_extensions import NotRequired, TypedDict


class GetUserByIDRequestBodyTypedDict(TypedDict):
    user_id: str
    r"""The ID of the Twitter user to retrieve"""


class GetUserByIDRequestBody(BaseModel):
    user_id: str
    r"""The ID of the Twitter user to retrieve"""


class GetUserByIDTwitterResponseResponseBodyData(BaseModel):
    message: Optional[str] = None
    r"""Error message string"""


class GetUserByIDTwitterResponseResponseBody(Exception):
    r"""GetUserById API server error response"""

    data: GetUserByIDTwitterResponseResponseBodyData

    def __init__(self, data: GetUserByIDTwitterResponseResponseBodyData):
        self.data = data

    def __str__(self) -> str:
        return utils.marshal_json(self.data, GetUserByIDTwitterResponseResponseBodyData)


class GetUserByIDTwitterResponseBodyData(BaseModel):
    message: Optional[str] = None
    r"""Error message string"""


class GetUserByIDTwitterResponseBody(Exception):
    r"""GetUserById API user error response"""

    data: GetUserByIDTwitterResponseBodyData

    def __init__(self, data: GetUserByIDTwitterResponseBodyData):
        self.data = data

    def __str__(self) -> str:
        return utils.marshal_json(self.data, GetUserByIDTwitterResponseBodyData)


class GetUserByIDResponseBodyTypedDict(TypedDict):
    r"""GetUserById API successful response"""

    user: NotRequired[TwitterUserTypedDict]


class GetUserByIDResponseBody(BaseModel):
    r"""GetUserById API successful response"""

    user: Optional[TwitterUser] = None
