"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .tweet import Tweet, TweetTypedDict
from exfunc_sdk import utils
from exfunc_sdk.types import BaseModel
from typing import List, Optional
from typing_extensions import NotRequired, TypedDict


class GetUserTweetsRequestBodyTypedDict(TypedDict):
    username: str
    r"""The username of the Twitter user whose tweets to retrieve"""
    count: NotRequired[int]
    r"""The number of tweets to retrieve"""


class GetUserTweetsRequestBody(BaseModel):
    username: str
    r"""The username of the Twitter user whose tweets to retrieve"""

    count: Optional[int] = None
    r"""The number of tweets to retrieve"""


class GetUserTweetsTwitterResponseResponseBodyData(BaseModel):
    message: Optional[str] = None
    r"""Error message string"""


class GetUserTweetsTwitterResponseResponseBody(Exception):
    r"""GetUserTweets API server error response"""

    data: GetUserTweetsTwitterResponseResponseBodyData

    def __init__(self, data: GetUserTweetsTwitterResponseResponseBodyData):
        self.data = data

    def __str__(self) -> str:
        return utils.marshal_json(
            self.data, GetUserTweetsTwitterResponseResponseBodyData
        )


class GetUserTweetsTwitterResponseBodyData(BaseModel):
    message: Optional[str] = None
    r"""Error message string"""


class GetUserTweetsTwitterResponseBody(Exception):
    r"""GetUserTweets API user error response"""

    data: GetUserTweetsTwitterResponseBodyData

    def __init__(self, data: GetUserTweetsTwitterResponseBodyData):
        self.data = data

    def __str__(self) -> str:
        return utils.marshal_json(self.data, GetUserTweetsTwitterResponseBodyData)


class GetUserTweetsResponseBodyTypedDict(TypedDict):
    r"""GetUserTweets API successful response"""

    tweets: NotRequired[List[TweetTypedDict]]


class GetUserTweetsResponseBody(BaseModel):
    r"""GetUserTweets API successful response"""

    tweets: Optional[List[Tweet]] = None
