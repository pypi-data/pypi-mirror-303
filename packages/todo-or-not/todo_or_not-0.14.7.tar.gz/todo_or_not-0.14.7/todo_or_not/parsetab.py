# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = "3.10"

_lr_method = "LALR"

_lr_signature = "CODE_BEFORE_COMMENT COMMENT_UP_TO_KEY REST_OF_COMMENTtodo_line : pre_todo_comment todo_line_comment_bodypre_todo_comment : CODE_BEFORE_COMMENTpre_todo_comment :todo_line_comment_body   : COMMENT_UP_TO_KEY REST_OF_COMMENT\n        | COMMENT_UP_TO_KEY"

_lr_action_items = {
    "CODE_BEFORE_COMMENT": (
        [
            0,
        ],
        [
            3,
        ],
    ),
    "COMMENT_UP_TO_KEY": (
        [
            0,
            2,
            3,
        ],
        [
            -3,
            5,
            -2,
        ],
    ),
    "$end": (
        [
            1,
            4,
            5,
            6,
        ],
        [
            0,
            -1,
            -5,
            -4,
        ],
    ),
    "REST_OF_COMMENT": (
        [
            5,
        ],
        [
            6,
        ],
    ),
}

_lr_action = {}
for _k, _v in _lr_action_items.items():
    for _x, _y in zip(_v[0], _v[1]):
        if not _x in _lr_action:
            _lr_action[_x] = {}
        _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {
    "todo_line": (
        [
            0,
        ],
        [
            1,
        ],
    ),
    "pre_todo_comment": (
        [
            0,
        ],
        [
            2,
        ],
    ),
    "todo_line_comment_body": (
        [
            2,
        ],
        [
            4,
        ],
    ),
}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
    for _x, _y in zip(_v[0], _v[1]):
        if not _x in _lr_goto:
            _lr_goto[_x] = {}
        _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
    ("S' -> todo_line", "S'", 1, None, None, None),
    (
        "todo_line -> pre_todo_comment todo_line_comment_body",
        "todo_line",
        2,
        "p_todo_line_with_code",
        "todo_grammar.py",
        99,
    ),
    (
        "pre_todo_comment -> CODE_BEFORE_COMMENT",
        "pre_todo_comment",
        1,
        "p_pre_todo_comment",
        "todo_grammar.py",
        111,
    ),
    (
        "pre_todo_comment -> <empty>",
        "pre_todo_comment",
        0,
        "p_empty_pre_todo_comment",
        "todo_grammar.py",
        115,
    ),
    (
        "todo_line_comment_body -> COMMENT_UP_TO_KEY REST_OF_COMMENT",
        "todo_line_comment_body",
        2,
        "p_todo_line_comment_body",
        "todo_grammar.py",
        119,
    ),
    (
        "todo_line_comment_body -> COMMENT_UP_TO_KEY",
        "todo_line_comment_body",
        1,
        "p_todo_line_comment_body",
        "todo_grammar.py",
        120,
    ),
]
