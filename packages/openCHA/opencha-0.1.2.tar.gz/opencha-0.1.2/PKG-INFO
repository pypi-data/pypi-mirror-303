Metadata-Version: 2.1
Name: openCHA
Version: 0.1.2
Summary: Conversational Health Agents (CHAs) are interactive systems designed to enhance personalhealthcare services by engaging in empathetic conversations and processing multimodal data. 
Home-page: https://github.com/Institute4FutureHealth/CHA.git
Author: Mahyar Abbasian
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Operating System :: OS Independent
Requires-Python: >=3.9, <3.12
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: httpcore==1.0.2
Requires-Dist: requests
Requires-Dist: gradio
Requires-Dist: pydantic
Requires-Dist: scipy
Provides-Extra: all
Requires-Dist: anthropic; extra == "all"
Requires-Dist: aiohttp; extra == "all"
Requires-Dist: google-search-results; extra == "all"
Requires-Dist: pdfminer.six; extra == "all"
Requires-Dist: googletrans-py; extra == "all"
Requires-Dist: playwright; extra == "all"
Requires-Dist: beautifulsoup4; extra == "all"
Requires-Dist: lxml; extra == "all"
Requires-Dist: tiktoken; extra == "all"
Requires-Dist: openai~=1.2; extra == "all"
Requires-Dist: pandas; extra == "all"
Requires-Dist: scipy; extra == "all"
Requires-Dist: seaborn; extra == "all"
Requires-Dist: neurokit2; extra == "all"
Requires-Dist: torch; extra == "all"
Requires-Dist: torchvision; extra == "all"
Requires-Dist: torchdata; extra == "all"
Requires-Dist: googlesearch-python; extra == "all"
Requires-Dist: numpy; extra == "all"
Requires-Dist: pandas; extra == "all"
Requires-Dist: uvicorn; extra == "all"
Requires-Dist: h11; extra == "all"
Provides-Extra: minimum
Requires-Dist: aiohttp; extra == "minimum"
Requires-Dist: google-search-results; extra == "minimum"
Requires-Dist: pdfminer.six; extra == "minimum"
Requires-Dist: playwright; extra == "minimum"
Requires-Dist: beautifulsoup4; extra == "minimum"
Requires-Dist: lxml; extra == "minimum"
Requires-Dist: tiktoken; extra == "minimum"
Requires-Dist: openai~=1.2; extra == "minimum"
Requires-Dist: googlesearch-python; extra == "minimum"
Requires-Dist: uvicorn; extra == "minimum"
Requires-Dist: h11; extra == "minimum"
Provides-Extra: develop
Requires-Dist: sphinx; extra == "develop"
Requires-Dist: sphinx-copybutton; extra == "develop"
Requires-Dist: sphinxcontrib-video; extra == "develop"
Requires-Dist: sphinxcontrib.youtube; extra == "develop"
Requires-Dist: pydata_sphinx_theme; extra == "develop"
Requires-Dist: pytest; extra == "develop"
Requires-Dist: pytest-mock; extra == "develop"
Requires-Dist: pytest-asyncio; extra == "develop"

Quick Start
===========
* [Documentation page](https://docs.opencha.com)
* [User Guide](https://docs.opencha.com/user_guide/index.html)
* [How to Contribute](https://docs.opencha.com/user_guide/contribute.html)
* [API Docs](https://docs.opencha.com/api/index.html)
* [Examples](https://docs.opencha.com/examples/index.html)

To use CHA in a safe and stable way, ensure you have Python 3.10 or higher installed. First, create a virtual environment:

```python
# Create the virtual environment
python -m venv /path/to/new/virtual/environment

# Activate the virtual environment
source /path/to/new/virtual/environment/bin/activate
```

Now, install the CHA package.
```bash
pip install openCHA
playwright install
```

Manual Installation
-------------------

```bash
git clone https://github.com/Institute4FutureHealth/CHA.git
cd CHA
pip install -e '.[all]'
playwright install
```

To simplify installation with minimum requirements and be ready to go, you can use the following command. This installs OpenAI, React Planner, as well as SerpAPI (search) and Playwright (browser) tasks:

```bash
pip install -e '.[minimum]'
```

If you want to install all requirements for all tasks and other components, use the following command:

```bash
pip install -e '.[all]'
```

Running openCHA
-------------------

After installing the package, based on what tasks you want to use, you may need to acquire some api_keys. For example, to get started using openAI GPT3.5 model as LLM in CHA, you need to signup
in their website and get the api_key. Then you should add openAI api_key as environment vairable in your terminal:

```bash
export OPENAI_API_KEY="your api_key"
```

The same goes for using tasks like SerpAPI:

```bash
export SERPAPI_API_KEY="your api_key"
```

Finally, you can start running our framework with the following simple code:

```python
from openCHA import openCHA

cha = openCHA()
cha.run_with_interface()
```

This code will run the default interface, and you can access it at the following URL:

**http://127.0.0.1:7860**

For more examples, visit the [Examples page](https://docs.opencha.com/examples/index.html).

![Alt Text](https://docs.opencha.com/_images/Interface.png)
