import causalnex

import numpy as np
import pandas as pd

from typing import Dict
import scipy.linalg as slin
import scipy.optimize as sopt

from causalnex.structure import StructureModel
from causalnex.structure.transformers import DynamicDataTransformer


def data_dynotears_p3() -> Dict[str, np.ndarray]:
    """
    Training data for testing Dynamic Bayesian Networks. Return a time series with 50 time points, with 5 columns
    This data was simulated with te following configurations.
    Configurations:
        - data points 50,
        - num. variables: 5,
        - p (lag amount): 3,
        - graph type (intra-slice graph): 'erdos-renyi',
        - graph type (inter-slice graph): 'erdos-renyi',
        - SEM type: 'linear-gauss',
        - weight range, intra-slice graph: (0.5, 2.0),
        - weight range, inter-slice graph: (0.3, 0.5),
        - expected degree, inter-slice graph: 3,
        - noise scale (gaussian noise): 1.0,
        - w decay: 1.1
    Returns:
        dictionary with keys W (intra-weights), A (inter-weights), X and Y (inputs of from_numpy_dynamic)
    """
    data = {
        "W": np.array(
            [
                [0.0, 0.0, -1.18, 0.0, -0.92],
                [0.0, 0.0, -1.71, 0.0, 0.0],
                [0.0, 0.0, 0.0, 0.0, -1.15],
                [0.0, 0.8, 0.0, 0.0, -1.65],
                [0.0, 0.0, 0.0, 0.0, 0.0],
            ]
        ),
        "A": np.array(
            [
                [-0.42, -0.4, 0.35, 0.0, 0.0],
                [0.0, 0.0, 0.0, 0.0, 0.0],
                [-0.38, 0.0, -0.48, -0.48, 0.44],
                [0.0, -0.36, -0.31, 0.35, 0.0],
                [0.0, 0.0, -0.35, 0.0, -0.45],
                [0.27, 0.0, 0.0, -0.28, -0.43],
                [-0.44, 0.35, 0.0, 0.0, -0.44],
                [0.0, 0.0, 0.0, 0.0, 0.0],
                [-0.42, -0.39, -0.27, 0.3, -0.29],
                [0.0, -0.43, 0.0, -0.41, 0.4],
                [0.0, 0.32, 0.38, -0.37, 0.37],
                [0.0, 0.37, 0.0, 0.0, 0.41],
                [0.0, 0.34, 0.0, 0.27, -0.28],
                [-0.31, 0.0, 0.0, -0.34, 0.0],
                [0.27, -0.38, 0.0, 0.37, 0.36],
            ]
        ),
        "X": np.array(
            [
                [-21.5, 26.1, -56.8, -15.4, 82.4],
                [14.4, 20.3, -51.3, -18.8, -4.6],
                [16.5, -17.0, 48.2, 18.7, -100.2],
                [5.1, -38.8, 70.5, 5.1, 8.6],
                [-19.4, 20.5, -47.8, -4.3, 86.9],
                [9.8, 28.7, -69.5, -18.3, 8.2],
                [9.5, -7.1, 42.4, 13.3, -107.0],
                [2.8, -42.5, 83.7, 1.5, 3.1],
                [-25.7, 18.6, -42.4, -8.5, 112.6],
                [11.5, 34.3, -94.2, -20.5, 33.3],
                [19.0, -9.7, 39.5, 18.2, -137.5],
                [7.9, -60.4, 122.3, 8.1, -33.3],
                [-32.5, 6.0, -19.4, -11.0, 130.2],
                [3.5, 48.0, -127.1, -33.7, 81.8],
                [28.4, 7.6, 1.0, 16.3, -146.2],
                [20.0, -71.8, 153.1, 17.9, -93.3],
                [-34.3, -13.0, 20.5, -4.4, 130.2],
                [-9.4, 58.4, -150.8, -41.9, 141.6],
                [26.7, 32.9, -49.8, 7.9, -134.1],
                [34.3, -74.1, 161.6, 26.1, -152.1],
                [-34.2, -35.1, 75.5, 8.0, 105.1],
                [-21.9, 54.5, -151.3, -49.8, 199.9],
                [19.2, 54.9, -98.1, -8.1, -95.3],
                [47.4, -72.0, 158.9, 22.4, -192.6],
                [-25.7, -60.3, 129.5, 21.9, 54.6],
                [-26.9, 42.2, -136.6, -48.4, 243.1],
                [12.6, 79.6, -153.1, -11.6, -57.4],
                [54.1, -66.7, 153.3, 17.7, -241.5],
                [-26.1, -79.5, 185.0, 25.9, 19.5],
                [-34.8, 36.3, -133.8, -54.2, 311.0],
                [10.6, 105.3, -219.7, -19.1, -15.3],
                [73.9, -58.5, 138.7, 25.1, -307.4],
                [-17.7, -107.1, 257.4, 47.9, -58.4],
                [-51.3, 17.0, -93.4, -59.1, 354.7],
                [-13.4, 140.4, -287.4, -43.0, 83.7],
                [85.8, -28.4, 71.1, 11.6, -310.8],
                [4.5, -130.3, 310.9, 68.7, -171.8],
                [-51.1, -25.3, -12.3, -46.8, 361.3],
                [-34.2, 158.2, -341.9, -48.7, 191.1],
                [92.6, 7.7, -9.7, -2.9, -314.2],
                [20.2, -143.1, 363.2, 83.7, -294.6],
                [-54.6, -69.6, 82.3, -36.4, 356.7],
                [-60.4, 176.2, -390.3, -61.8, 319.4],
                [97.2, 53.8, -116.7, -18.9, -289.0],
                [46.0, -152.8, 400.1, 103.7, -440.8],
                [-52.1, -124.2, 206.7, -16.7, 307.3],
                [-93.8, 183.7, -415.9, -74.5, 465.6],
                [92.4, 118.4, -265.0, -47.7, -202.0],
                [76.5, -140.2, 396.2, 116.8, -592.8],
                [-36.6, -195.8, 366.6, 8.3, 202.5],
            ]
        ),
        "Y_1": np.array(
            [
                [-4.9, -31.2, 50.6, -5.4, 42.7, 11.0, -26.3, 66.7, 21.5, -82.3],
                [-21.5, 26.1, -56.8, -15.4, 82.4, -4.9, -31.2, 50.6, -5.4, 42.7],
                [14.4, 20.3, -51.3, -18.8, -4.6, -21.5, 26.1, -56.8, -15.4, 82.4],
                [16.5, -17.0, 48.2, 18.7, -100.2, 14.4, 20.3, -51.3, -18.8, -4.6],
                [5.1, -38.8, 70.5, 5.1, 8.6, 16.5, -17.0, 48.2, 18.7, -100.2],
                [-19.4, 20.5, -47.8, -4.3, 86.9, 5.1, -38.8, 70.5, 5.1, 8.6],
                [9.8, 28.7, -69.5, -18.3, 8.2, -19.4, 20.5, -47.8, -4.3, 86.9],
                [9.5, -7.1, 42.4, 13.3, -107.0, 9.8, 28.7, -69.5, -18.3, 8.2],
                [2.8, -42.5, 83.7, 1.5, 3.1, 9.5, -7.1, 42.4, 13.3, -107.0],
                [-25.7, 18.6, -42.4, -8.5, 112.6, 2.8, -42.5, 83.7, 1.5, 3.1],
                [11.5, 34.3, -94.2, -20.5, 33.3, -25.7, 18.6, -42.4, -8.5, 112.6],
                [19.0, -9.7, 39.5, 18.2, -137.5, 11.5, 34.3, -94.2, -20.5, 33.3],
                [7.9, -60.4, 122.3, 8.1, -33.3, 19.0, -9.7, 39.5, 18.2, -137.5],
                [-32.5, 6.0, -19.4, -11.0, 130.2, 7.9, -60.4, 122.3, 8.1, -33.3],
                [3.5, 48.0, -127.1, -33.7, 81.8, -32.5, 6.0, -19.4, -11.0, 130.2],
                [28.4, 7.6, 1.0, 16.3, -146.2, 3.5, 48.0, -127.1, -33.7, 81.8],
                [20.0, -71.8, 153.1, 17.9, -93.3, 28.4, 7.6, 1.0, 16.3, -146.2],
                [-34.3, -13.0, 20.5, -4.4, 130.2, 20.0, -71.8, 153.1, 17.9, -93.3],
                [-9.4, 58.4, -150.8, -41.9, 141.6, -34.3, -13.0, 20.5, -4.4, 130.2],
                [26.7, 32.9, -49.8, 7.9, -134.1, -9.4, 58.4, -150.8, -41.9, 141.6],
                [34.3, -74.1, 161.6, 26.1, -152.1, 26.7, 32.9, -49.8, 7.9, -134.1],
                [-34.2, -35.1, 75.5, 8.0, 105.1, 34.3, -74.1, 161.6, 26.1, -152.1],
                [-21.9, 54.5, -151.3, -49.8, 199.9, -34.2, -35.1, 75.5, 8.0, 105.1],
                [19.2, 54.9, -98.1, -8.1, -95.3, -21.9, 54.5, -151.3, -49.8, 199.9],
                [47.4, -72.0, 158.9, 22.4, -192.6, 19.2, 54.9, -98.1, -8.1, -95.3],
                [-25.7, -60.3, 129.5, 21.9, 54.6, 47.4, -72.0, 158.9, 22.4, -192.6],
                [-26.9, 42.2, -136.6, -48.4, 243.1, -25.7, -60.3, 129.5, 21.9, 54.6],
                [12.6, 79.6, -153.1, -11.6, -57.4, -26.9, 42.2, -136.6, -48.4, 243.1],
                [54.1, -66.7, 153.3, 17.7, -241.5, 12.6, 79.6, -153.1, -11.6, -57.4],
                [-26.1, -79.5, 185.0, 25.9, 19.5, 54.1, -66.7, 153.3, 17.7, -241.5],
                [-34.8, 36.3, -133.8, -54.2, 311.0, -26.1, -79.5, 185.0, 25.9, 19.5],
                [10.6, 105.3, -219.7, -19.1, -15.3, -34.8, 36.3, -133.8, -54.2, 311.0],
                [73.9, -58.5, 138.7, 25.1, -307.4, 10.6, 105.3, -219.7, -19.1, -15.3],
                [-17.7, -107.1, 257.4, 47.9, -58.4, 73.9, -58.5, 138.7, 25.1, -307.4],
                [-51.3, 17.0, -93.4, -59.1, 354.7, -17.7, -107.1, 257.4, 47.9, -58.4],
                [-13.4, 140.4, -287.4, -43.0, 83.7, -51.3, 17.0, -93.4, -59.1, 354.7],
                [85.8, -28.4, 71.1, 11.6, -310.8, -13.4, 140.4, -287.4, -43.0, 83.7],
                [4.5, -130.3, 310.9, 68.7, -171.8, 85.8, -28.4, 71.1, 11.6, -310.8],
                [-51.1, -25.3, -12.3, -46.8, 361.3, 4.5, -130.3, 310.9, 68.7, -171.8],
                [-34.2, 158.2, -341.9, -48.7, 191.1, -51.1, -25.3, -12.3, -46.8, 361.3],
                [92.6, 7.7, -9.7, -2.9, -314.2, -34.2, 158.2, -341.9, -48.7, 191.1],
                [20.2, -143.1, 363.2, 83.7, -294.6, 92.6, 7.7, -9.7, -2.9, -314.2],
                [-54.6, -69.6, 82.3, -36.4, 356.7, 20.2, -143.1, 363.2, 83.7, -294.6],
                [-60.4, 176.2, -390.3, -61.8, 319.4, -54.6, -69.6, 82.3, -36.4, 356.7],
                [97.2, 53.8, -116.7, -18.9, -289.0, -60.4, 176.2, -390.3, -61.8, 319.4],
                [46.0, -152.8, 400.1, 103.7, -440.8, 97.2, 53.8, -116.7, -18.9, -289.0],
                [-52.1, -124.2, 206.7, -16.7, 307.3, 46, -152.8, 400.1, 103.7, -440.8],
                [-93.8, 183.7, -415.9, -74.5, 465.6, -52, -124.2, 206.7, -16.7, 307.3],
                [92.4, 118.4, -265.0, -47.7, -202, -93.8, 183.7, -415.9, -74.5, 465.6],
                [76.5, -140.2, 396.2, 116.8, -592.8, 92.4, 118.4, -265, -47.7, -202],
            ]
        ),
        "Y_2": np.array(
            [
                [22.4, 6.9, -22.7, -6.3, -40.2],
                [11.0, -26.3, 66.7, 21.5, -82.3],
                [-4.9, -31.2, 50.6, -5.4, 42.7],
                [-21.5, 26.1, -56.8, -15.4, 82.4],
                [14.4, 20.3, -51.3, -18.8, -4.6],
                [16.5, -17.0, 48.2, 18.7, -100.2],
                [5.1, -38.8, 70.5, 5.1, 8.6],
                [-19.4, 20.5, -47.8, -4.3, 86.9],
                [9.8, 28.7, -69.5, -18.3, 8.2],
                [9.5, -7.1, 42.4, 13.3, -107.0],
                [2.8, -42.5, 83.7, 1.5, 3.1],
                [-25.7, 18.6, -42.4, -8.5, 112.6],
                [11.5, 34.3, -94.2, -20.5, 33.3],
                [19.0, -9.7, 39.5, 18.2, -137.5],
                [7.9, -60.4, 122.3, 8.1, -33.3],
                [-32.5, 6.0, -19.4, -11.0, 130.2],
                [3.5, 48.0, -127.1, -33.7, 81.8],
                [28.4, 7.6, 1.0, 16.3, -146.2],
                [20.0, -71.8, 153.1, 17.9, -93.3],
                [-34.3, -13.0, 20.5, -4.4, 130.2],
                [-9.4, 58.4, -150.8, -41.9, 141.6],
                [26.7, 32.9, -49.8, 7.9, -134.1],
                [34.3, -74.1, 161.6, 26.1, -152.1],
                [-34.2, -35.1, 75.5, 8.0, 105.1],
                [-21.9, 54.5, -151.3, -49.8, 199.9],
                [19.2, 54.9, -98.1, -8.1, -95.3],
                [47.4, -72.0, 158.9, 22.4, -192.6],
                [-25.7, -60.3, 129.5, 21.9, 54.6],
                [-26.9, 42.2, -136.6, -48.4, 243.1],
                [12.6, 79.6, -153.1, -11.6, -57.4],
                [54.1, -66.7, 153.3, 17.7, -241.5],
                [-26.1, -79.5, 185.0, 25.9, 19.5],
                [-34.8, 36.3, -133.8, -54.2, 311.0],
                [10.6, 105.3, -219.7, -19.1, -15.3],
                [73.9, -58.5, 138.7, 25.1, -307.4],
                [-17.7, -107.1, 257.4, 47.9, -58.4],
                [-51.3, 17.0, -93.4, -59.1, 354.7],
                [-13.4, 140.4, -287.4, -43.0, 83.7],
                [85.8, -28.4, 71.1, 11.6, -310.8],
                [4.5, -130.3, 310.9, 68.7, -171.8],
                [-51.1, -25.3, -12.3, -46.8, 361.3],
                [-34.2, 158.2, -341.9, -48.7, 191.1],
                [92.6, 7.7, -9.7, -2.9, -314.2],
                [20.2, -143.1, 363.2, 83.7, -294.6],
                [-54.6, -69.6, 82.3, -36.4, 356.7],
                [-60.4, 176.2, -390.3, -61.8, 319.4],
                [97.2, 53.8, -116.7, -18.9, -289.0],
                [46.0, -152.8, 400.1, 103.7, -440.8],
                [-52.1, -124.2, 206.7, -16.7, 307.3],
                [-93.8, 183.7, -415.9, -74.5, 465.6],
            ]
        ),
    }
    data["Y"] = np.array(
        [list(y1) + list(y2) for y1, y2 in zip(data["Y_1"], data["Y_2"])]
    )
    del data["Y_1"]
    del data["Y_2"]
    return data

import causalnex.structure.dynotears as dt

sm = dt.from_pandas_dynamic(pd.DataFrame(data_dynotears_p3["X"], columns=["a", "b", "c", "d", "e"]),p=1)
