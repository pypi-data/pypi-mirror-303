from typing import Iterator, Any, Dict
from types import FrameType
from _collections_abc import dict_items, dict_keys, dict_values

# class pytype(type):
#     def __init__(self, obj: object, /) -> None: ...
#     def __new__(cls, obj: object, /) -> type: ...
def decref(obj): ...
def incref(obj): ...
class framelocals:
    def __init__(self, frame: FrameType): ...
    def __reversed__(self) -> reversed: ...
    def __len__(self) -> int: ...
    def __contains__(self, key: str) -> bool: ...
    def __iter__(self) -> Iterator[Any]: ...
    def __getitem__(self, key: str) -> Any: ...
    def __setitem__(self, key: str, value): ...
    def __delitem__(self, key: str): ...
    def update(self, new_dict: dict): ...
    def get(self, key: str) -> Any: ...
    def copy(self) -> Dict[str, Any]: ...
    def setdefault(self, key: str, default: Any = None) -> Any: ...
    def items(self) -> dict_items[str, Any]: ...
    def keys(self) -> dict_keys[str, Any]: ...
    def values(self) -> dict_values[str, Any]: ...