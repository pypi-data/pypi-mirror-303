{"version":3,"sources":["webpack:///./src/views/client/Schedule.vue?dfc5","webpack:///./src/views/client/Schedule.vue?1d9d","webpack:///src/views/client/Schedule.vue","webpack:///./src/views/client/Schedule.vue?758e","webpack:///./src/views/client/Schedule.vue","webpack:///./src/components/PanelTitle.vue?9a2d","webpack:///src/components/PanelTitle.vue","webpack:///./src/components/PanelTitle.vue?31c4","webpack:///./src/components/PanelTitle.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","directives","name","rawName","value","expression","attrs","_e","_l","project","key","spidersLoading","style","width","spiders","$lang","columns","id","operations","scopedSlots","_u","fn","props","on","$event","onStartSpider","row","_v","_s","buttons","run","getLog","jobs","job","slot","minWidth","spiderName","spider","jobID","startTime","start_time","substring","endTime","end_time","jobStatusClass","status","includes","jobStatusText","stopPropagation","onCancelJob","cancel","stop","logLoadingText","logs","staticRenderFns","data","errorCount","projects","projectsLoading","jobStatuses","finished","running","pending","jobsInfo","logLoading","logLoadingInterval","logLoadingActive","routeId","components","PanelTitle","created","getProjects","$store","commit","setInterval","methods","$http","get","then","catch","setTimeout","getSpiders","forEach","getJobs","random","component","domProps","title","_t","type"],"mappings":"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","file":"static/js/chunk-4a7237a2.fee914bc.js","sourcesContent":["export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Schedule.vue?vue&type=style&index=0&lang=css&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[(_vm.projectsLoading)?_c('div',{staticClass:\"panel\"},[_c('div',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.projectsLoading),expression:\"projectsLoading\"}],staticClass:\"panel-body\"},[_c('el-table',{attrs:{\"empty-text\":\"\"}})],1)]):_vm._e(),_vm._l((_vm.projects),function(project){return _c('div',{key:project,staticClass:\"panel\"},[_c('panel-title',{attrs:{\"title\":project}}),_c('div',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.projectsLoading),expression:\"projectsLoading\"}],staticClass:\"panel-body\"},[_c('el-table',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.spidersLoading[project]),expression:\"spidersLoading[project]\"}],style:({ width: '100%' }),attrs:{\"data\":_vm.spiders[project]}},[_c('el-table-column',{attrs:{\"prop\":\"id\",\"label\":_vm.$lang.columns.id,\"width\":\"200\"}}),_c('el-table-column',{attrs:{\"prop\":\"name\",\"label\":_vm.$lang.columns.name,\"width\":\"400\"}}),_c('el-table-column',{attrs:{\"label\":_vm.$lang.columns.operations},scopedSlots:_vm._u([{key:\"default\",fn:function(props){return [_c('el-button',{attrs:{\"type\":\"success\",\"size\":\"mini\"},on:{\"click\":function($event){return _vm.onStartSpider(project, props.row.name)}}},[_c('i',{staticClass:\"fa fa-caret-right\"}),_vm._v(\"\\n              \"+_vm._s(_vm.$lang.buttons.run)+\"\\n            \")])]}}],null,true)})],1),_c('el-collapse',{attrs:{\"accordion\":\"\"},on:{\"change\":_vm.getLog}},_vm._l((_vm.jobs[project]),function(job){return _c('el-collapse-item',{key:job.id,attrs:{\"name\":job.id}},[_c('template',{slot:\"title\"},[(job.spider)?_c('span',{staticClass:\"m-l-xs\",style:({ minWidth: '120px' })},[_c('i',{staticClass:\"fa fa-bug\"}),_vm._v(\"\\n              \"+_vm._s(_vm.$lang.columns.spiderName)+\":\\n              \"+_vm._s(job.spider)+\"\\n            \")]):_vm._e(),(job.spider)?_c('span',{staticClass:\"m-l-md\",style:({ minWidth: '290px' })},[_c('i',{staticClass:\"fa fa-key\"}),_vm._v(\"\\n              \"+_vm._s(_vm.$lang.columns.jobID)+\":\\n              \"+_vm._s(job.id)+\"\\n            \")]):_vm._e(),(job.start_time)?_c('span',{staticClass:\"m-l-md\",style:({ minWidth: '190px' })},[_c('i',{staticClass:\"el-icon-time\"}),_vm._v(\"\\n              \"+_vm._s(_vm.$lang.columns.startTime)+\":\\n              \"+_vm._s(job.start_time.substring(0, 16))+\"\\n            \")]):_vm._e(),(job.end_time)?_c('span',{staticClass:\"m-l-md\",style:({ minWidth: '190px' })},[_c('i',{staticClass:\"el-icon-time\"}),_vm._v(\"\\n              \"+_vm._s(_vm.$lang.columns.endTime)+\":\\n              \"+_vm._s(job.end_time.substring(0, 16))+\"\\n            \")]):_vm._e(),_c('span',{staticClass:\"m-l-md\"},[_c('el-button',{staticClass:\"pull-right m-r-md\",attrs:{\"type\":_vm.jobStatusClass[job.status],\"size\":\"mini\"}},[(['pending'].includes(job.status))?_c('i',{staticClass:\"fa fa-circle-thin\"}):_vm._e(),(['running'].includes(job.status))?_c('i',{staticClass:\"fa fa-spin fa-spinner\"}):_vm._e(),(['finished'].includes(job.status))?_c('i',{staticClass:\"fa fa-check\"}):_vm._e(),_vm._v(\"\\n                \"+_vm._s(_vm.jobStatusText[job.status])+\"\\n              \")]),(['pending', 'running'].includes(job.status))?_c('el-button',{staticClass:\"pull-right m-r-md\",attrs:{\"type\":\"danger\",\"size\":\"mini\"},on:{\"click\":function($event){$event.stopPropagation();return _vm.onCancelJob(job.id)}}},[_c('i',{staticClass:\"fa fa-remove\"}),(['pending'].includes(job.status))?_c('span',[_vm._v(\"\\n                  \"+_vm._s(_vm.$lang.buttons.cancel)+\"\\n                \")]):_vm._e(),(['running'].includes(job.status))?_c('span',[_vm._v(\"\\n                  \"+_vm._s(_vm.$lang.buttons.stop)+\"\\n                \")]):_vm._e()]):_vm._e()],1)]),_c('div',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.logLoading),expression:\"logLoading\"}],attrs:{\"element-loading-text\":_vm.logLoadingText}},[_c('pre',[_vm._v(_vm._s(_vm.logs[job.id]))])])],2)}),1)],1)],1)})],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div>\n    <div class=\"panel\" v-if=\"projectsLoading\">\n      <div class=\"panel-body\" v-loading=\"projectsLoading\">\n        <el-table empty-text=\"\"></el-table>\n      </div>\n    </div>\n    <div class=\"panel\" v-for=\"project in projects\" :key=\"project\">\n      <panel-title :title=\"project\"> </panel-title>\n      <div class=\"panel-body\" v-loading=\"projectsLoading\">\n        <el-table\n          :data=\"spiders[project]\"\n          v-loading=\"spidersLoading[project]\"\n          :style=\"{ width: '100%' }\"\n        >\n          <el-table-column prop=\"id\" :label=\"$lang.columns.id\" width=\"200\">\n          </el-table-column>\n\n          <el-table-column prop=\"name\" :label=\"$lang.columns.name\" width=\"400\">\n          </el-table-column>\n          <el-table-column :label=\"$lang.columns.operations\">\n            <template slot-scope=\"props\">\n              <el-button\n                type=\"success\"\n                size=\"mini\"\n                @click=\"onStartSpider(project, props.row.name)\"\n              >\n                <i class=\"fa fa-caret-right\"></i>\n                {{ $lang.buttons.run }}\n              </el-button>\n            </template>\n          </el-table-column>\n        </el-table>\n        <el-collapse accordion @change=\"getLog\">\n          <el-collapse-item\n            v-for=\"job in jobs[project]\"\n            :name=\"job.id\"\n            :key=\"job.id\"\n          >\n            <template slot=\"title\">\n              <span\n                v-if=\"job.spider\"\n                class=\"m-l-xs\"\n                :style=\"{ minWidth: '120px' }\"\n              >\n                <i class=\"fa fa-bug\"></i>\n                {{ $lang.columns.spiderName }}:\n                {{ job.spider }}\n              </span>\n              <span\n                v-if=\"job.spider\"\n                class=\"m-l-md\"\n                :style=\"{ minWidth: '290px' }\"\n              >\n                <i class=\"fa fa-key\"></i>\n                {{ $lang.columns.jobID }}:\n                {{ job.id }}\n              </span>\n              <span\n                v-if=\"job.start_time\"\n                class=\"m-l-md\"\n                :style=\"{ minWidth: '190px' }\"\n              >\n                <i class=\"el-icon-time\"></i>\n                {{ $lang.columns.startTime }}:\n                {{ job.start_time.substring(0, 16) }}\n              </span>\n              <span\n                v-if=\"job.end_time\"\n                class=\"m-l-md\"\n                :style=\"{ minWidth: '190px' }\"\n              >\n                <i class=\"el-icon-time\"></i>\n                {{ $lang.columns.endTime }}:\n                {{ job.end_time.substring(0, 16) }}\n              </span>\n              <span class=\"m-l-md\">\n                <el-button\n                  :type=\"jobStatusClass[job.status]\"\n                  size=\"mini\"\n                  class=\"pull-right m-r-md\"\n                >\n                  <i\n                    v-if=\"['pending'].includes(job.status)\"\n                    class=\"fa fa-circle-thin\"\n                  ></i>\n                  <i\n                    v-if=\"['running'].includes(job.status)\"\n                    class=\"fa fa-spin fa-spinner\"\n                  ></i>\n                  <i\n                    v-if=\"['finished'].includes(job.status)\"\n                    class=\"fa fa-check\"\n                  ></i>\n                  {{ jobStatusText[job.status] }}\n                </el-button>\n                <el-button\n                  type=\"danger\"\n                  size=\"mini\"\n                  class=\"pull-right m-r-md\"\n                  v-if=\"['pending', 'running'].includes(job.status)\"\n                  @click.stop=\"onCancelJob(job.id)\"\n                >\n                  <i class=\"fa fa-remove\"></i>\n                  <span v-if=\"['pending'].includes(job.status)\">\n                    {{ $lang.buttons.cancel }}\n                  </span>\n                  <span v-if=\"['running'].includes(job.status)\">\n                    {{ $lang.buttons.stop }}\n                  </span>\n                </el-button>\n              </span>\n            </template>\n            <div v-loading=\"logLoading\" :element-loading-text=\"logLoadingText\">\n              <pre>{{ logs[job.id] }}</pre>\n            </div>\n          </el-collapse-item>\n        </el-collapse>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport PanelTitle from \"../../components/PanelTitle\";\n\nexport default {\n  data() {\n    return {\n      // 连续获取错误次数\n      errorCount: 0,\n      // 所有项目\n      projects: [],\n      // 加载projects标志\n      projectsLoading: true,\n      // 所有爬虫 {'project1': ['spider1', 'spider2'], 'project2': ['spider1']}\n      spiders: {},\n      // 加载spiders标志\n      spidersLoading: {},\n      // 所有任务 {'project1': [{'id': '', 'spider': '', 'status': ''}]}\n      jobs: {},\n      // 任务状态\n      jobStatuses: [\"finished\", \"running\", \"pending\"],\n      // 任务状态class\n      jobStatusClass: {\n        finished: \"info\",\n        running: \"success\",\n        pending: \"warning\",\n      },\n      // 任务状态文本\n      jobStatusText: {\n        finished: this.$store.getters.$lang.buttons.finished,\n        running: this.$store.getters.$lang.buttons.running,\n        pending: this.$store.getters.$lang.buttons.pending,\n      },\n      // 任务信息 {'jobid': {'spider': 'spider1', 'project': 'project1'}}\n      jobsInfo: {},\n      // 日志信息 {'logid': 'text'}\n      logs: {},\n      // 加载logs标志\n      logLoading: true,\n      // 加载log提示语\n      logLoadingText: this.$store.getters.$lang.messages.loading,\n      // 定时刷新log指针\n      logLoadingInterval: null,\n      // 标记正在加载哪个log\n      logLoadingActive: null,\n      // 路由信息\n      routeId: this.$route.params.id,\n    };\n  },\n  components: {\n    PanelTitle,\n  },\n  created() {\n    this.getProjects();\n    this.$store.commit(\n      \"addInterval\",\n      setInterval(() => {\n        this.getJobs();\n      }, 5000)\n    );\n  },\n  methods: {\n    //获取所有项目\n    getProjects() {\n      this.projectsLoading = true;\n      this.$http\n        .get(\n          this.formatString(this.$store.state.url.client.projects, {\n            id: this.routeId,\n          })\n        )\n        .then(({ data: data }) => {\n          this.projects = data;\n          if (this.projects && this.projects.length === 0) {\n            this.$message.info(this.$store.getters.$lang.messages.noProjects);\n          }\n          this.projectsLoading = false;\n          this.projects.forEach((project) => {\n            this.$set(this.spidersLoading, project, true);\n          });\n          this.errorCount = 0;\n          // 获取所有爬虫\n          this.getSpiders();\n          // 获取所有任务\n          this.getJobs();\n        })\n        .catch(() => {\n          this.projectsLoading = false;\n          this.errorCount += 1;\n          if (this.errorCount >= 3) {\n            this.$message.error(this.$store.getters.$lang.messages.errorLoad);\n          } else {\n            // 定时任务\n            this.$store.commit(\n              \"setTimeout\",\n              setTimeout(() => {\n                this.getProjects();\n              }, 500)\n            );\n          }\n        });\n    },\n    // 获取所有爬虫\n    getSpiders() {\n      this.projects.forEach((project) => {\n        this.$http\n          .get(\n            this.formatString(this.$store.state.url.client.listSpiders, {\n              id: this.routeId,\n              project: project,\n            })\n          )\n          .then(({ data: data }) => {\n            this.$set(this.spiders, project, data);\n            this.$set(this.spidersLoading, project, false);\n          })\n          .catch(() => {\n            this.$set(this.spidersLoading, project, false);\n          });\n      });\n    },\n    // 获取所有任务\n    getJobs() {\n      this.projects.forEach((project) => {\n        this.$http\n          .get(\n            this.formatString(this.$store.state.url.client.listJobs, {\n              id: this.routeId,\n              project: project,\n            })\n          )\n          .then(({ data: data }) => {\n            this.$set(this.jobs, project, data);\n            for (let project in this.jobs) {\n              let jobs = this.jobs[project];\n              jobs.forEach((job) => {\n                this.$set(this.jobsInfo, job.id, {\n                  project: project,\n                  spider: job[\"spider\"],\n                });\n              });\n            }\n          });\n      });\n    },\n    // 启动任务\n    onStartSpider(project, spider) {\n      this.$http\n        .get(\n          this.formatString(this.$store.state.url.client.startSpider, {\n            id: this.routeId,\n            project: project,\n            spider: spider,\n          })\n        )\n        .then(() => {\n          this.$message.success(this.$store.getters.$lang.messages.successRun);\n          this.getJobs();\n        })\n        .catch(() => {\n          this.$message.error(this.$store.getters.$lang.messages.errorRun);\n        });\n    },\n    // 获取日志\n    getLog(job) {\n      // 如果展开日志\n      if (job) {\n        //设置活跃日志\n        this.logLoadingActive = job;\n        // 正在加载\n        this.logLoading = true;\n        // 请求日志\n        this.$http\n          .get(\n            this.formatString(this.$store.state.url.client.getLog, {\n              id: this.routeId,\n              project: this.jobsInfo[this.logLoadingActive][\"project\"],\n              spider: this.jobsInfo[this.logLoadingActive][\"spider\"],\n              job: this.logLoadingActive,\n              random: Math.random(),\n            })\n          )\n          .then(({ data: data }) => {\n            //设置日志字典\n            this.$set(this.logs, this.logLoadingActive, data);\n            // 加载日志完成\n            this.logLoading = false;\n            // 定时任务获取最新爬取日志\n            this.$store.commit(\n              \"setTimeout\",\n              setTimeout(() => {\n                this.getLog(job);\n              }, 2000)\n            );\n          })\n          .catch(() => {\n            this.logLoading = false;\n          });\n      } else {\n        //闭合之后停止加载日志\n        this.$store.commit(\"clearTimeout\");\n      }\n    },\n    onCancelJob(job) {\n      this.$http\n        .get(\n          this.formatString(this.$store.state.url.client.cancelJob, {\n            id: this.routeId,\n            project: this.jobsInfo[job][\"project\"],\n            job: job,\n          })\n        )\n        .then(() => {\n          this.$message.success(this.$store.getters.$lang.messages.canceling);\n          this.getJobs();\n        })\n        .catch(() => {\n          this.$message.error(this.$store.getters.$lang.messages.errorCancel);\n        });\n    },\n  },\n};\n</script>\n<style>\n.el-collapse-item__content {\n  padding: 15px 15px;\n}\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Schedule.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Schedule.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Schedule.vue?vue&type=template&id=949bac06&\"\nimport script from \"./Schedule.vue?vue&type=script&lang=js&\"\nexport * from \"./Schedule.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Schedule.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"panel-title\"},[(_vm.title)?_c('span',{domProps:{\"textContent\":_vm._s(_vm.title)}}):_vm._e(),_c('div',{staticClass:\"fr\"},[_vm._t(\"default\")],2)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"panel-title\">\n    <span v-if=\"title\" v-text=\"title\"></span>\n    <div class=\"fr\">\n      <slot></slot>\n    </div>\n  </div>\n</template>\n<script>\nexport default {\n  name: \"PanelTitle\",\n  props: {\n    title: {\n      type: String,\n    },\n  },\n};\n</script>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PanelTitle.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PanelTitle.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./PanelTitle.vue?vue&type=template&id=470d15d1&\"\nimport script from \"./PanelTitle.vue?vue&type=script&lang=js&\"\nexport * from \"./PanelTitle.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}