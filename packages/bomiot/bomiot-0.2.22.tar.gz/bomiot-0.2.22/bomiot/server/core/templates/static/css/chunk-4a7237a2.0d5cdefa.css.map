{"version":3,"sources":["webpack:///src/views/client/src/views/client/Schedule.vue","chunk-4a7237a2.0d5cdefa.css"],"names":[],"mappings":"AAyVA,2BACA,iBCvVA","file":"chunk-4a7237a2.0d5cdefa.css","sourcesContent":["<template>\n  <div>\n    <div class=\"panel\" v-if=\"projectsLoading\">\n      <div class=\"panel-body\" v-loading=\"projectsLoading\">\n        <el-table empty-text=\"\"></el-table>\n      </div>\n    </div>\n    <div class=\"panel\" v-for=\"project in projects\" :key=\"project\">\n      <panel-title :title=\"project\"> </panel-title>\n      <div class=\"panel-body\" v-loading=\"projectsLoading\">\n        <el-table\n          :data=\"spiders[project]\"\n          v-loading=\"spidersLoading[project]\"\n          :style=\"{ width: '100%' }\"\n        >\n          <el-table-column prop=\"id\" :label=\"$lang.columns.id\" width=\"200\">\n          </el-table-column>\n\n          <el-table-column prop=\"name\" :label=\"$lang.columns.name\" width=\"400\">\n          </el-table-column>\n          <el-table-column :label=\"$lang.columns.operations\">\n            <template slot-scope=\"props\">\n              <el-button\n                type=\"success\"\n                size=\"mini\"\n                @click=\"onStartSpider(project, props.row.name)\"\n              >\n                <i class=\"fa fa-caret-right\"></i>\n                {{ $lang.buttons.run }}\n              </el-button>\n            </template>\n          </el-table-column>\n        </el-table>\n        <el-collapse accordion @change=\"getLog\">\n          <el-collapse-item\n            v-for=\"job in jobs[project]\"\n            :name=\"job.id\"\n            :key=\"job.id\"\n          >\n            <template slot=\"title\">\n              <span\n                v-if=\"job.spider\"\n                class=\"m-l-xs\"\n                :style=\"{ minWidth: '120px' }\"\n              >\n                <i class=\"fa fa-bug\"></i>\n                {{ $lang.columns.spiderName }}:\n                {{ job.spider }}\n              </span>\n              <span\n                v-if=\"job.spider\"\n                class=\"m-l-md\"\n                :style=\"{ minWidth: '290px' }\"\n              >\n                <i class=\"fa fa-key\"></i>\n                {{ $lang.columns.jobID }}:\n                {{ job.id }}\n              </span>\n              <span\n                v-if=\"job.start_time\"\n                class=\"m-l-md\"\n                :style=\"{ minWidth: '190px' }\"\n              >\n                <i class=\"el-icon-time\"></i>\n                {{ $lang.columns.startTime }}:\n                {{ job.start_time.substring(0, 16) }}\n              </span>\n              <span\n                v-if=\"job.end_time\"\n                class=\"m-l-md\"\n                :style=\"{ minWidth: '190px' }\"\n              >\n                <i class=\"el-icon-time\"></i>\n                {{ $lang.columns.endTime }}:\n                {{ job.end_time.substring(0, 16) }}\n              </span>\n              <span class=\"m-l-md\">\n                <el-button\n                  :type=\"jobStatusClass[job.status]\"\n                  size=\"mini\"\n                  class=\"pull-right m-r-md\"\n                >\n                  <i\n                    v-if=\"['pending'].includes(job.status)\"\n                    class=\"fa fa-circle-thin\"\n                  ></i>\n                  <i\n                    v-if=\"['running'].includes(job.status)\"\n                    class=\"fa fa-spin fa-spinner\"\n                  ></i>\n                  <i\n                    v-if=\"['finished'].includes(job.status)\"\n                    class=\"fa fa-check\"\n                  ></i>\n                  {{ jobStatusText[job.status] }}\n                </el-button>\n                <el-button\n                  type=\"danger\"\n                  size=\"mini\"\n                  class=\"pull-right m-r-md\"\n                  v-if=\"['pending', 'running'].includes(job.status)\"\n                  @click.stop=\"onCancelJob(job.id)\"\n                >\n                  <i class=\"fa fa-remove\"></i>\n                  <span v-if=\"['pending'].includes(job.status)\">\n                    {{ $lang.buttons.cancel }}\n                  </span>\n                  <span v-if=\"['running'].includes(job.status)\">\n                    {{ $lang.buttons.stop }}\n                  </span>\n                </el-button>\n              </span>\n            </template>\n            <div v-loading=\"logLoading\" :element-loading-text=\"logLoadingText\">\n              <pre>{{ logs[job.id] }}</pre>\n            </div>\n          </el-collapse-item>\n        </el-collapse>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport PanelTitle from \"../../components/PanelTitle\";\n\nexport default {\n  data() {\n    return {\n      // 连续获取错误次数\n      errorCount: 0,\n      // 所有项目\n      projects: [],\n      // 加载projects标志\n      projectsLoading: true,\n      // 所有爬虫 {'project1': ['spider1', 'spider2'], 'project2': ['spider1']}\n      spiders: {},\n      // 加载spiders标志\n      spidersLoading: {},\n      // 所有任务 {'project1': [{'id': '', 'spider': '', 'status': ''}]}\n      jobs: {},\n      // 任务状态\n      jobStatuses: [\"finished\", \"running\", \"pending\"],\n      // 任务状态class\n      jobStatusClass: {\n        finished: \"info\",\n        running: \"success\",\n        pending: \"warning\",\n      },\n      // 任务状态文本\n      jobStatusText: {\n        finished: this.$store.getters.$lang.buttons.finished,\n        running: this.$store.getters.$lang.buttons.running,\n        pending: this.$store.getters.$lang.buttons.pending,\n      },\n      // 任务信息 {'jobid': {'spider': 'spider1', 'project': 'project1'}}\n      jobsInfo: {},\n      // 日志信息 {'logid': 'text'}\n      logs: {},\n      // 加载logs标志\n      logLoading: true,\n      // 加载log提示语\n      logLoadingText: this.$store.getters.$lang.messages.loading,\n      // 定时刷新log指针\n      logLoadingInterval: null,\n      // 标记正在加载哪个log\n      logLoadingActive: null,\n      // 路由信息\n      routeId: this.$route.params.id,\n    };\n  },\n  components: {\n    PanelTitle,\n  },\n  created() {\n    this.getProjects();\n    this.$store.commit(\n      \"addInterval\",\n      setInterval(() => {\n        this.getJobs();\n      }, 5000)\n    );\n  },\n  methods: {\n    //获取所有项目\n    getProjects() {\n      this.projectsLoading = true;\n      this.$http\n        .get(\n          this.formatString(this.$store.state.url.client.projects, {\n            id: this.routeId,\n          })\n        )\n        .then(({ data: data }) => {\n          this.projects = data;\n          if (this.projects && this.projects.length === 0) {\n            this.$message.info(this.$store.getters.$lang.messages.noProjects);\n          }\n          this.projectsLoading = false;\n          this.projects.forEach((project) => {\n            this.$set(this.spidersLoading, project, true);\n          });\n          this.errorCount = 0;\n          // 获取所有爬虫\n          this.getSpiders();\n          // 获取所有任务\n          this.getJobs();\n        })\n        .catch(() => {\n          this.projectsLoading = false;\n          this.errorCount += 1;\n          if (this.errorCount >= 3) {\n            this.$message.error(this.$store.getters.$lang.messages.errorLoad);\n          } else {\n            // 定时任务\n            this.$store.commit(\n              \"setTimeout\",\n              setTimeout(() => {\n                this.getProjects();\n              }, 500)\n            );\n          }\n        });\n    },\n    // 获取所有爬虫\n    getSpiders() {\n      this.projects.forEach((project) => {\n        this.$http\n          .get(\n            this.formatString(this.$store.state.url.client.listSpiders, {\n              id: this.routeId,\n              project: project,\n            })\n          )\n          .then(({ data: data }) => {\n            this.$set(this.spiders, project, data);\n            this.$set(this.spidersLoading, project, false);\n          })\n          .catch(() => {\n            this.$set(this.spidersLoading, project, false);\n          });\n      });\n    },\n    // 获取所有任务\n    getJobs() {\n      this.projects.forEach((project) => {\n        this.$http\n          .get(\n            this.formatString(this.$store.state.url.client.listJobs, {\n              id: this.routeId,\n              project: project,\n            })\n          )\n          .then(({ data: data }) => {\n            this.$set(this.jobs, project, data);\n            for (let project in this.jobs) {\n              let jobs = this.jobs[project];\n              jobs.forEach((job) => {\n                this.$set(this.jobsInfo, job.id, {\n                  project: project,\n                  spider: job[\"spider\"],\n                });\n              });\n            }\n          });\n      });\n    },\n    // 启动任务\n    onStartSpider(project, spider) {\n      this.$http\n        .get(\n          this.formatString(this.$store.state.url.client.startSpider, {\n            id: this.routeId,\n            project: project,\n            spider: spider,\n          })\n        )\n        .then(() => {\n          this.$message.success(this.$store.getters.$lang.messages.successRun);\n          this.getJobs();\n        })\n        .catch(() => {\n          this.$message.error(this.$store.getters.$lang.messages.errorRun);\n        });\n    },\n    // 获取日志\n    getLog(job) {\n      // 如果展开日志\n      if (job) {\n        //设置活跃日志\n        this.logLoadingActive = job;\n        // 正在加载\n        this.logLoading = true;\n        // 请求日志\n        this.$http\n          .get(\n            this.formatString(this.$store.state.url.client.getLog, {\n              id: this.routeId,\n              project: this.jobsInfo[this.logLoadingActive][\"project\"],\n              spider: this.jobsInfo[this.logLoadingActive][\"spider\"],\n              job: this.logLoadingActive,\n              random: Math.random(),\n            })\n          )\n          .then(({ data: data }) => {\n            //设置日志字典\n            this.$set(this.logs, this.logLoadingActive, data);\n            // 加载日志完成\n            this.logLoading = false;\n            // 定时任务获取最新爬取日志\n            this.$store.commit(\n              \"setTimeout\",\n              setTimeout(() => {\n                this.getLog(job);\n              }, 2000)\n            );\n          })\n          .catch(() => {\n            this.logLoading = false;\n          });\n      } else {\n        //闭合之后停止加载日志\n        this.$store.commit(\"clearTimeout\");\n      }\n    },\n    onCancelJob(job) {\n      this.$http\n        .get(\n          this.formatString(this.$store.state.url.client.cancelJob, {\n            id: this.routeId,\n            project: this.jobsInfo[job][\"project\"],\n            job: job,\n          })\n        )\n        .then(() => {\n          this.$message.success(this.$store.getters.$lang.messages.canceling);\n          this.getJobs();\n        })\n        .catch(() => {\n          this.$message.error(this.$store.getters.$lang.messages.errorCancel);\n        });\n    },\n  },\n};\n</script>\n<style>\n.el-collapse-item__content {\n  padding: 15px 15px;\n}\n</style>\n","\n.el-collapse-item__content {\n  padding: 15px 15px;\n}\n\n\n/*# sourceMappingURL=chunk-4a7237a2.0d5cdefa.css.map*/"]}