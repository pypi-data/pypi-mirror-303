{"version":3,"sources":["webpack:///src/views/project/src/views/project/Deploy.vue","chunk-3a6102b3.0fe5e5eb.css"],"names":[],"mappings":"AAyXA,mBACA,eCvXA","file":"chunk-3a6102b3.0fe5e5eb.css","sourcesContent":["<template>\n  <div>\n    <el-row :gutter=\"20\">\n      <el-col :span=\"24\">\n        <div class=\"panel\">\n          <panel-title :title=\"$lang.titles.deployProject\"> </panel-title>\n          <div class=\"panel-body\">\n            <el-table\n              :data=\"clients\"\n              v-loading=\"loading\"\n              :element-loading-text=\"$lang.messages.loading\"\n              @selection-change=\"onBatchSelect\"\n              :style=\"{ width: '100%' }\"\n            >\n              <el-table-column align=\"center\" type=\"selection\" width=\"55\">\n              </el-table-column>\n              <el-table-column\n                align=\"center\"\n                :label=\"$lang.columns.status\"\n                width=\"100\"\n              >\n                <template slot-scope=\"props\">\n                  <el-button\n                    :type=\"statusClass[clientsStatus[props.row.pk]]\"\n                    size=\"mini\"\n                  >\n                    {{ statusText[clientsStatus[props.row.pk]] }}\n                  </el-button>\n                </template>\n              </el-table-column>\n              <el-table-column\n                align=\"center\"\n                prop=\"pk\"\n                :label=\"$lang.columns.id\"\n                width=\"60\"\n              >\n              </el-table-column>\n              <el-table-column\n                align=\"center\"\n                prop=\"fields.name\"\n                :label=\"$lang.columns.name\"\n                width=\"100\"\n              >\n              </el-table-column>\n              <el-table-column\n                align=\"center\"\n                prop=\"fields.ip\"\n                :label=\"$lang.columns.ip\"\n                width=\"150\"\n              >\n              </el-table-column>\n              <el-table-column\n                align=\"center\"\n                prop=\"fields.port\"\n                :label=\"$lang.columns.port\"\n                width=\"100\"\n              >\n              </el-table-column>\n              <el-table-column\n                align=\"center\"\n                :label=\"$lang.columns.description\"\n              >\n                <template slot-scope=\"props\">\n                  <span>{{ projectDescriptions[props.row.pk] }}</span>\n                </template>\n              </el-table-column>\n              <el-table-column align=\"center\" :label=\"$lang.columns.deployedAt\">\n                <template slot-scope=\"props\">\n                  <span>{{ projectDateTimes[props.row.pk] }}</span>\n                </template>\n              </el-table-column>\n              <el-table-column align=\"center\" :label=\"$lang.columns.operations\">\n                <template slot-scope=\"props\">\n                  <el-button\n                    type=\"success\"\n                    size=\"mini\"\n                    @click=\"onDeploy(props.row.pk)\"\n                    v-if=\"clientsStatus[props.row.pk]\"\n                  >\n                    <i class=\"fa fa-cloud-upload\"></i>\n                    {{ $lang.buttons.deploy }}\n                  </el-button>\n                </template>\n              </el-table-column>\n            </el-table>\n            <bottom-bar>\n              <el-button\n                slot=\"handler\"\n                type=\"primary\"\n                size=\"mini\"\n                :disabled=\"batchSelect.length === 0\"\n                @click=\"onBatchDeploy\"\n                slot-scope=\"handler\"\n              >\n                <span>\n                  <i class=\"fa fa-cloud-upload\"></i>\n                  {{ $lang.buttons.batchDeploy }}\n                </span>\n              </el-button>\n            </bottom-bar>\n          </div>\n        </div>\n      </el-col>\n    </el-row>\n    <el-row :gutter=\"20\">\n      <el-col :span=\"12\">\n        <div class=\"panel\">\n          <panel-title :title=\"$lang.objects.project\"> </panel-title>\n          <div class=\"panel-body\">\n            <el-form :model=\"buildInfo\" label-width=\"120px\">\n              <el-form-item :label=\"$lang.columns.name\">\n                {{ buildInfo.name }}\n              </el-form-item>\n              <el-form-item :label=\"$lang.columns.packageName\">\n                {{ buildInfo.egg || notBuildText }}\n              </el-form-item>\n              <el-form-item :label=\"$lang.columns.builtAt\">\n                {{ buildInfo.built_at || notBuildText }}\n              </el-form-item>\n            </el-form>\n          </div>\n        </div>\n      </el-col>\n      <el-col :span=\"12\">\n        <div class=\"panel\">\n          <panel-title :title=\"$lang.titles.buildProject\"> </panel-title>\n          <div class=\"panel-body\">\n            <el-form\n              ref=\"form\"\n              :model=\"buildInfo\"\n              :rules=\"rules\"\n              label-width=\"120px\"\n            >\n              <el-form-item :label=\"$lang.columns.name\">\n                {{ buildInfo.name }}\n              </el-form-item>\n              <el-form-item\n                :label=\"$lang.columns.description\"\n                prop=\"description\"\n                class=\"description\"\n              >\n                <el-input\n                  v-model=\"buildInfo.description\"\n                  size=\"small\"\n                ></el-input>\n              </el-form-item>\n              <el-form-item>\n                <el-button type=\"primary\" size=\"small\" @click=\"onBuild\">\n                  <i class=\"fa fa-codepen\"></i> \n                  <span v-if=\"buildInfo.egg\"> {{ $lang.buttons.re }}</span>{{ $lang.buttons.build }}\n                </el-button>\n              </el-form-item>\n            </el-form>\n          </div>\n        </div>\n      </el-col>\n    </el-row>\n  </div>\n</template>\n<script type=\"text/javascript\">\nimport PanelTitle from \"../../components/PanelTitle\";\nimport BottomBar from \"../../components/BottomBar\";\n\nexport default {\n  data() {\n    return {\n      buildInfo: {},\n      notBuildText: this.$store.getters.$lang.messages.notBuilt,\n      clients: [],\n      loading: false,\n      projectName: this.$route.params.name,\n      batchSelect: [],\n      projectDescriptions: {},\n      projectDateTimes: {},\n      clientsStatus: {},\n      statusClass: {\n        \"1\": \"success\",\n        \"0\": \"warning\",\n        \"-1\": \"danger\",\n      },\n      statusText: {\n        \"1\": this.$store.getters.$lang.buttons.normal,\n        \"0\": this.$store.getters.$lang.buttons.connecting,\n        \"-1\": this.$store.getters.$lang.buttons.error,\n      },\n      rules: {\n        description: [\n          {\n            required: true,\n            message: this.$store.getters.$lang.messages.emptyDescription,\n            trigger: \"blur\",\n          },\n        ],\n      },\n    };\n  },\n  components: {\n    PanelTitle,\n    BottomBar,\n  },\n  created() {\n    this.getClientData();\n    this.getBuildInfo();\n  },\n  methods: {\n    onBatchSelect(val) {\n      this.batchSelect = val;\n      console.log(this.batchSelect);\n    },\n    getBuildInfo() {\n      this.loading = true;\n      this.$http\n        .get(\n          this.formatString(this.$store.state.url.project.build, {\n            name: this.projectName,\n          })\n        )\n        .then(({ data: data }) => {\n          this.buildInfo = data;\n          console.log(data);\n          this.loading = false;\n        })\n        .catch(() => {\n          this.loading = false;\n        });\n    },\n    getClientStatus(id) {\n      this.$set(this.clientsStatus, id, 0);\n      this.$http\n        .get(\n          this.formatString(this.$store.state.url.client.status, {\n            id: id,\n          })\n        )\n        .then(({ data: { result: data } }) => {\n          this.$set(this.clientsStatus, id, data);\n        })\n        .catch(() => {\n          this.$set(this.clientsStatus, id, -1);\n        });\n    },\n    getClientData() {\n      this.loading = true;\n      this.$http\n        .get(this.$store.state.url.client.index)\n        .then(({ data: clients }) => {\n          this.clients = clients;\n          this.loading = false;\n          this.clients.forEach(({ pk: id }) => {\n            this.getProjectVersion(id);\n            this.getClientStatus(id);\n          });\n        })\n        .catch(() => {\n          this.loading = false;\n        });\n    },\n    deploy(id) {\n      if (this.clientsStatus[id]) {\n        this.$http\n          .post(\n            this.formatString(this.$store.state.url.client.projectDeploy, {\n              id: id,\n              name: this.projectName,\n            })\n          )\n          .then(() => {\n            this.$message.success(\n              this.$store.getters.$lang.titles.client +\n                \" \" +\n                id +\n                \" \" +\n                this.$store.getters.$lang.messages.successDeploy\n            );\n            this.getProjectVersion(id);\n            this.loading = false;\n          })\n          .catch(() => {\n            this.$message.error(\n              this.$store.getters.$lang.titles.client +\n                \" \" +\n                id +\n                \" \" +\n                this.$store.getters.$lang.messages.errorDeploy\n            );\n            this.loading = false;\n          });\n      } else {\n        this.$message.error(\n          this.$store.getters.$lang.titles.client +\n            \" \" +\n            id +\n            \" \" +\n            this.$store.getters.$lang.messages.errorDeploy\n        );\n        this.loading = false;\n      }\n    },\n    getProjectVersion(id) {\n      this.loading = true;\n      this.$http\n        .get(\n          this.formatString(this.$store.state.url.client.projectVersion, {\n            id: id,\n            name: this.projectName,\n          })\n        )\n        .then(({ data: version }) => {\n          this.$set(this.projectDescriptions, id, version[\"description\"]);\n          this.$set(this.projectDateTimes, id, version[\"deployed_at\"]);\n          this.loading = false;\n        })\n        .catch(() => {\n          this.loading = false;\n        });\n    },\n    onBatchDeploy() {\n      this.$confirm(\n        this.$store.getters.$lang.messages.confirm,\n        this.$store.getters.$lang.buttons.confirm,\n        {\n          confirmButtonText: this.$store.getters.$lang.buttons.yes,\n          cancelButtonText: this.$store.getters.$lang.buttons.no,\n          type: \"warning\",\n        }\n      )\n        .then(() => {\n          this.loading = true;\n          console.log(this.batchSelect);\n          this.batchSelect.forEach(({ pk: id }) => {\n            this.deploy(id);\n          });\n        })\n        .catch(() => {\n          this.$message.error(this.$store.getters.$lang.messages.errorDeploy);\n        });\n    },\n    onDeploy(id) {\n      if (this.buildInfo.egg) {\n        this.deploy(id);\n      } else {\n        this.$message.error(this.$store.getters.$lang.messages.buildFirst);\n      }\n    },\n    onBuild() {\n      this.$refs.form.validate((valid) => {\n        if (!valid) return false;\n        this.$http\n          .post(\n            this.formatString(this.$store.state.url.project.build, {\n              name: this.projectName,\n            }),\n            {\n              description: this.buildInfo[\"description\"],\n              egg: this.buildInfo[\"egg\"],\n              built_at: this.buildInfo[\"built_at\"],\n            }\n          )\n          .then(({ data: data }) => {\n            this.buildInfo = data;\n            console.log(data);\n            this.loading = false;\n            this.$message.success(\n              this.$store.getters.$lang.messages.successBuild\n            );\n          })\n          .catch(() => {\n            this.loading = false;\n            this.$message.error(this.$store.getters.$lang.messages.errorBuild);\n          });\n      });\n    },\n  },\n};\n</script>\n\n<style>\n.description input {\n  max-width: 200px;\n}\n</style>\n","\n.description input {\n  max-width: 200px;\n}\n\n\n/*# sourceMappingURL=chunk-3a6102b3.0fe5e5eb.css.map*/"]}