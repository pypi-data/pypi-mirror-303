import pandas as pd

class FiinIndicator:

    # Trend Indicators
    def ema(self, column: pd.Series, window: int) -> pd.Series: ...

    def sma(self, column: pd.Series, window: int) -> pd.Series: ...
    
    def wma(self, column: pd.Series, window: int) -> pd.Series: ...

    def macd(self, column: pd.Series, window_slow: int = 26, window_fast: int = 12) -> pd.Series: ...
    
    def macd_signal(self, column: pd.Series, window_slow: int = 26, window_fast: int = 12, window_sign: int = 9) -> pd.Series: ...
    
    def macd_diff(self, column: pd.Series, window_slow: int = 26, window_fast: int = 12, window_sign: int = 9) -> pd.Series: ...
    
    def adx(self, high: pd.Series, low: pd.Series, close: pd.Series, window: int = 14) -> pd.Series: ...
    
    def adx_pos(self, high: pd.Series, low: pd.Series, close: pd.Series, window: int = 14) -> pd.Series: ...
    
    def adx_neg(self, high: pd.Series, low: pd.Series, close: pd.Series, window: int = 14) -> pd.Series: ...
    
    # Momentum Indicators
    def rsi(self, column: pd.Series, window: int = 14) -> pd.Series: ...

    def stoch(self, high: pd.Series, low: pd.Series, close: pd.Series, window: int = 14) -> pd.Series: ...
  
    def stoch_signal(self, high: pd.Series, low: pd.Series, close: pd.Series, window: int = 14, smooth_window: int = 3) -> pd.Series: ...
    
    # Volatility Indicators
    def bollinger_hband(self, column: pd.Series, window: int = 20, window_dev: int = 2) -> pd.Series: ...
    
    def bollinger_lband(self, column: pd.Series, window: int = 20, window_dev: int = 2) -> pd.Series: ...

    def supertrend(self, high: pd.Series, low: pd.Series, close: pd.Series, window: int = 14, multiplier: float = 3.0) -> pd.Series: ...
    
    def supertrend_hband(self, high: pd.Series, low: pd.Series, close: pd.Series, window: int = 14, multiplier: float = 3.0) -> pd.Series: ...
   
    def supertrend_lband(self, high: pd.Series, low: pd.Series, close: pd.Series, window: int = 14, multiplier: float = 3.0) -> pd.Series: ...

    def atr(self, high: pd.Series, low: pd.Series, close: pd.Series, window: int = 14) -> pd.Series: ...
   
    # Volume Indicators
    def mfi(self, high: pd.Series, low: pd.Series, close: pd.Series, volume: pd.Series, window: int = 14) -> pd.Series: ...
  
    def obv(self, column: pd.Series, volume: pd.Series) -> pd.Series: ...

    def vwap(self, high: pd.Series, low: pd.Series, close: pd.Series, volume: pd.Series, window: int = 14) -> pd.Series: ...

