{"version":3,"mappings":"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","names":["ctx","dirty","create_if_block_1","insert","target","div","anchor","p","create_if_block_2","value","$$props","x","y","color","root","title","x_title","y_title","color_title","x_bin","y_aggregate","color_map","x_lim","y_lim","x_label_angle","y_label_angle","x_axis_labels_visible","caption","sort","reformat_sort","_sort2","_selectable","_data","gradio","_x_bin","mouse_down_on_chart","SUFFIX_DURATION","_y_aggregate","aggregating","reformat_data","data","x_index","y_index","color_index","row","obj","is_browser","chart_element","view","mounted","old_width","resizeObserver","vegaEmbed","load_chart","spec","create_vega_lite_spec","el","__vitePreload","result","debounceTimeout","e","_","value2","range","x_temporal","release_callback","onMount","$$invalidate","computed_style","accent_color","body_text_color","borderColorPrimary","font_family","title_weight","font_to_px_val","font","text_size_md","text_size_sm","mode","_x_lim","_sort","unique_colors","c","n","label","elem_id","elem_classes","visible","show_label","scale","min_width","loading_status","height","clear_status_handler","$$value","d"],"ignoreList":[],"sources":["../../../nativeplot/dist/Index.svelte"],"sourcesContent":["<script>import { BlockTitle } from \"@gradio/atoms\";\nimport { Block } from \"@gradio/atoms\";\nimport { StatusTracker } from \"@gradio/statustracker\";\nimport { onMount } from \"svelte\";\nimport { LineChart as LabelIcon } from \"@gradio/icons\";\nimport { Empty } from \"@gradio/atoms\";\nexport let value;\nexport let x;\nexport let y;\nexport let color = null;\nexport let root;\n$:\n  unique_colors = color && value && value.datatypes[color] === \"nominal\" ? Array.from(new Set(_data.map((d) => d[color]))) : [];\nexport let title = null;\nexport let x_title = null;\nexport let y_title = null;\nexport let color_title = null;\nexport let x_bin = null;\nexport let y_aggregate = void 0;\nexport let color_map = null;\nexport let x_lim = null;\nexport let y_lim = null;\nexport let x_label_angle = null;\nexport let y_label_angle = null;\nexport let x_axis_labels_visible = true;\nexport let caption = null;\nexport let sort = null;\nfunction reformat_sort(_sort2) {\n  if (_sort2 === \"x\") {\n    return \"ascending\";\n  } else if (_sort2 === \"-x\") {\n    return \"descending\";\n  } else if (_sort2 === \"y\") {\n    return { field: y, order: \"ascending\" };\n  } else if (_sort2 === \"-y\") {\n    return { field: y, order: \"descending\" };\n  } else if (_sort2 === null) {\n    return void 0;\n  } else if (Array.isArray(_sort2)) {\n    return _sort2;\n  }\n}\n$:\n  _sort = reformat_sort(sort);\nexport let _selectable = false;\nlet _data;\nexport let gradio;\n$:\n  x_temporal = value && value.datatypes[x] === \"temporal\";\n$:\n  _x_lim = x_lim && x_temporal ? [x_lim[0] * 1e3, x_lim[1] * 1e3] : x_lim;\nlet _x_bin;\nlet mouse_down_on_chart = false;\nconst SUFFIX_DURATION = {\n  s: 1,\n  m: 60,\n  h: 60 * 60,\n  d: 24 * 60 * 60\n};\n$:\n  _x_bin = x_bin ? typeof x_bin === \"string\" ? 1e3 * parseInt(x_bin.substring(0, x_bin.length - 1)) * SUFFIX_DURATION[x_bin[x_bin.length - 1]] : x_bin : void 0;\nlet _y_aggregate;\nlet aggregating;\n$: {\n  if (value) {\n    if (value.mark === \"point\") {\n      aggregating = _x_bin !== void 0;\n      _y_aggregate = y_aggregate || aggregating ? \"sum\" : void 0;\n    } else {\n      aggregating = _x_bin !== void 0 || value.datatypes[x] === \"nominal\";\n      _y_aggregate = y_aggregate ? y_aggregate : \"sum\";\n    }\n  }\n}\nfunction reformat_data(data) {\n  let x_index = data.columns.indexOf(x);\n  let y_index = data.columns.indexOf(y);\n  let color_index = color ? data.columns.indexOf(color) : null;\n  return data.data.map((row) => {\n    const obj = {\n      [x]: row[x_index],\n      [y]: row[y_index]\n    };\n    if (color && color_index !== null) {\n      obj[color] = row[color_index];\n    }\n    return obj;\n  });\n}\n$:\n  _data = value ? reformat_data(value) : [];\nconst is_browser = typeof window !== \"undefined\";\nlet chart_element;\n$:\n  computed_style = chart_element ? window.getComputedStyle(chart_element) : null;\nlet view;\nlet mounted = false;\nlet old_width;\nlet resizeObserver;\nlet vegaEmbed;\nasync function load_chart() {\n  if (view) {\n    view.finalize();\n  }\n  if (!value || !chart_element)\n    return;\n  old_width = chart_element.offsetWidth;\n  const spec = create_vega_lite_spec();\n  if (!spec)\n    return;\n  resizeObserver = new ResizeObserver((el) => {\n    if (!el[0].target || !(el[0].target instanceof HTMLElement))\n      return;\n    if (old_width === 0 && chart_element.offsetWidth !== 0 && value.datatypes[x] === \"nominal\") {\n      load_chart();\n    } else {\n      view.signal(\"width\", el[0].target.offsetWidth).run();\n    }\n  });\n  if (!vegaEmbed) {\n    vegaEmbed = (await import(\"vega-embed\")).default;\n  }\n  vegaEmbed(chart_element, spec, { actions: false }).then(function(result) {\n    view = result.view;\n    resizeObserver.observe(chart_element);\n    var debounceTimeout;\n    view.addEventListener(\"dblclick\", () => {\n      gradio.dispatch(\"double_click\");\n    });\n    chart_element.addEventListener(\n      \"mousedown\",\n      function(e) {\n        if (e.detail > 1) {\n          e.preventDefault();\n        }\n      },\n      false\n    );\n    if (_selectable) {\n      view.addSignalListener(\"brush\", function(_, value2) {\n        if (Object.keys(value2).length === 0)\n          return;\n        clearTimeout(debounceTimeout);\n        let range = value2[Object.keys(value2)[0]];\n        if (x_temporal) {\n          range = [range[0] / 1e3, range[1] / 1e3];\n        }\n        let callback = () => {\n          gradio.dispatch(\"select\", {\n            value: range,\n            index: range,\n            selected: true\n          });\n        };\n        if (mouse_down_on_chart) {\n          release_callback = callback;\n        } else {\n          debounceTimeout = setTimeout(function() {\n            gradio.dispatch(\"select\", {\n              value: range,\n              index: range,\n              selected: true\n            });\n          }, 250);\n        }\n      });\n    }\n  });\n}\nlet release_callback = null;\nonMount(() => {\n  mounted = true;\n  chart_element.addEventListener(\"mousedown\", () => {\n    mouse_down_on_chart = true;\n  });\n  chart_element.addEventListener(\"mouseup\", () => {\n    mouse_down_on_chart = false;\n    if (release_callback) {\n      release_callback();\n      release_callback = null;\n    }\n  });\n  return () => {\n    mounted = false;\n    if (view) {\n      view.finalize();\n    }\n    if (resizeObserver) {\n      resizeObserver.disconnect();\n    }\n  };\n});\n$:\n  title, x_title, y_title, color_title, x, y, color, x_bin, _y_aggregate, color_map, x_lim, y_lim, caption, sort, value, mounted, chart_element, computed_style && requestAnimationFrame(load_chart);\nfunction create_vega_lite_spec() {\n  if (!value || !computed_style)\n    return null;\n  let accent_color = computed_style.getPropertyValue(\"--color-accent\");\n  let body_text_color = computed_style.getPropertyValue(\"--body-text-color\");\n  let borderColorPrimary = computed_style.getPropertyValue(\n    \"--border-color-primary\"\n  );\n  let font_family = computed_style.fontFamily;\n  let title_weight = computed_style.getPropertyValue(\n    \"--block-title-text-weight\"\n  );\n  const font_to_px_val = (font) => {\n    return font.endsWith(\"px\") ? parseFloat(font.slice(0, -2)) : 12;\n  };\n  let text_size_md = font_to_px_val(\n    computed_style.getPropertyValue(\"--text-md\")\n  );\n  let text_size_sm = font_to_px_val(\n    computed_style.getPropertyValue(\"--text-sm\")\n  );\n  return {\n    $schema: \"https://vega.github.io/schema/vega-lite/v5.17.0.json\",\n    background: \"transparent\",\n    config: {\n      autosize: { type: \"fit\", contains: \"padding\" },\n      axis: {\n        labelFont: font_family,\n        labelColor: body_text_color,\n        titleFont: font_family,\n        titleColor: body_text_color,\n        titlePadding: 8,\n        tickColor: borderColorPrimary,\n        labelFontSize: text_size_sm,\n        gridColor: borderColorPrimary,\n        titleFontWeight: \"normal\",\n        titleFontSize: text_size_sm,\n        labelFontWeight: \"normal\",\n        domain: false,\n        labelAngle: 0\n      },\n      legend: {\n        labelColor: body_text_color,\n        labelFont: font_family,\n        titleColor: body_text_color,\n        titleFont: font_family,\n        titleFontWeight: \"normal\",\n        titleFontSize: text_size_sm,\n        labelFontWeight: \"normal\",\n        offset: 2\n      },\n      title: {\n        color: body_text_color,\n        font: font_family,\n        fontSize: text_size_md,\n        fontWeight: title_weight,\n        anchor: \"middle\"\n      },\n      view: { stroke: borderColorPrimary },\n      mark: {\n        stroke: value.mark !== \"bar\" ? accent_color : void 0,\n        fill: value.mark === \"bar\" ? accent_color : void 0,\n        cursor: \"crosshair\"\n      }\n    },\n    data: { name: \"data\" },\n    datasets: {\n      data: _data\n    },\n    layer: [\"plot\", ...value.mark === \"line\" ? [\"hover\"] : []].map(\n      (mode) => {\n        return {\n          encoding: {\n            size: value.mark === \"line\" ? mode == \"plot\" ? {\n              condition: {\n                empty: false,\n                param: \"hoverPlot\",\n                value: 3\n              },\n              value: 2\n            } : {\n              condition: { empty: false, param: \"hover\", value: 100 },\n              value: 0\n            } : void 0,\n            opacity: mode === \"plot\" ? void 0 : {\n              condition: { empty: false, param: \"hover\", value: 1 },\n              value: 0\n            },\n            x: {\n              axis: {\n                ...x_label_angle !== null && { labelAngle: x_label_angle },\n                labels: x_axis_labels_visible,\n                ticks: x_axis_labels_visible\n              },\n              field: x,\n              title: x_title || x,\n              type: value.datatypes[x],\n              scale: _x_lim ? { domain: _x_lim } : void 0,\n              bin: _x_bin ? { step: _x_bin } : void 0,\n              sort: _sort\n            },\n            y: {\n              axis: y_label_angle ? { labelAngle: y_label_angle } : {},\n              field: y,\n              title: y_title || y,\n              type: value.datatypes[y],\n              scale: y_lim ? { domain: y_lim } : void 0,\n              aggregate: aggregating ? _y_aggregate : void 0\n            },\n            color: color ? {\n              field: color,\n              legend: { orient: \"bottom\", title: color_title },\n              scale: value.datatypes[color] === \"nominal\" ? {\n                domain: unique_colors,\n                range: color_map ? unique_colors.map((c) => color_map[c]) : void 0\n              } : {\n                range: [\n                  100,\n                  200,\n                  300,\n                  400,\n                  500,\n                  600,\n                  700,\n                  800,\n                  900\n                ].map(\n                  (n) => computed_style.getPropertyValue(\"--primary-\" + n)\n                ),\n                interpolate: \"hsl\"\n              },\n              type: value.datatypes[color]\n            } : void 0,\n            tooltip: [\n              {\n                field: y,\n                type: value.datatypes[y],\n                aggregate: aggregating ? _y_aggregate : void 0,\n                title: y_title || y\n              },\n              {\n                field: x,\n                type: value.datatypes[x],\n                title: x_title || x,\n                format: x_temporal ? \"%Y-%m-%d %H:%M:%S\" : void 0,\n                bin: _x_bin ? { step: _x_bin } : void 0\n              },\n              ...color ? [\n                {\n                  field: color,\n                  type: value.datatypes[color]\n                }\n              ] : []\n            ]\n          },\n          strokeDash: {},\n          mark: { clip: true, type: mode === \"hover\" ? \"point\" : value.mark },\n          name: mode\n        };\n      }\n    ),\n    // @ts-ignore\n    params: [\n      ...value.mark === \"line\" ? [\n        {\n          name: \"hoverPlot\",\n          select: {\n            clear: \"mouseout\",\n            fields: color ? [color] : [],\n            nearest: true,\n            on: \"mouseover\",\n            type: \"point\"\n          },\n          views: [\"hover\"]\n        },\n        {\n          name: \"hover\",\n          select: {\n            clear: \"mouseout\",\n            nearest: true,\n            on: \"mouseover\",\n            type: \"point\"\n          },\n          views: [\"hover\"]\n        }\n      ] : [],\n      ..._selectable ? [\n        {\n          name: \"brush\",\n          select: {\n            encodings: [\"x\"],\n            mark: { fill: \"gray\", fillOpacity: 0.3, stroke: \"none\" },\n            type: \"interval\"\n          },\n          views: [\"plot\"]\n        }\n      ] : []\n    ],\n    width: chart_element.offsetWidth,\n    title: title || void 0\n  };\n}\nexport let label = \"Textbox\";\nexport let elem_id = \"\";\nexport let elem_classes = [];\nexport let visible = true;\nexport let show_label;\nexport let scale = null;\nexport let min_width = void 0;\nexport let loading_status = void 0;\nexport let height = void 0;\n</script>\n\n<Block\n\t{visible}\n\t{elem_id}\n\t{elem_classes}\n\t{scale}\n\t{min_width}\n\tallow_overflow={false}\n\tpadding={true}\n\t{height}\n>\n\t{#if loading_status}\n\t\t<StatusTracker\n\t\t\tautoscroll={gradio.autoscroll}\n\t\t\ti18n={gradio.i18n}\n\t\t\t{...loading_status}\n\t\t\ton:clear_status={() => gradio.dispatch(\"clear_status\", loading_status)}\n\t\t/>\n\t{/if}\n\t<BlockTitle {root} {show_label} info={undefined}>{label}</BlockTitle>\n\t{#if value && is_browser}\n\t\t<div bind:this={chart_element}></div>\n\n\t\t{#if caption}\n\t\t\t<p class=\"caption\">{caption}</p>\n\t\t{/if}\n\t{:else}\n\t\t<Empty unpadded_box={true}><LabelIcon /></Empty>\n\t{/if}\n</Block>\n\n<style>\n\tdiv {\n\t\twidth: 100%;\n\t}\n\t:global(#vg-tooltip-element) {\n\t\tfont-family: var(--font) !important;\n\t\tfont-size: var(--text-xs) !important;\n\t\tbox-shadow: none !important;\n\t\tbackground-color: var(--block-background-fill) !important;\n\t\tborder: 1px solid var(--border-color-primary) !important;\n\t\tcolor: var(--body-text-color) !important;\n\t}\n\t:global(#vg-tooltip-element .key) {\n\t\tcolor: var(--body-text-color-subdued) !important;\n\t}\n\t.caption {\n\t\tpadding: 0 4px;\n\t\tmargin: 0;\n\t\ttext-align: center;\n\t}\n</style>\n"],"file":"assets/Index-DAiW1zbS.js"}