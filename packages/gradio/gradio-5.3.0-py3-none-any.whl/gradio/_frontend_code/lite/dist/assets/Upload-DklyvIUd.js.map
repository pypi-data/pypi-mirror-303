{"version":3,"file":"Upload-DklyvIUd.js","sources":["../../../upload/dist/src/UploadProgress.svelte","../../../upload/dist/src/Upload.svelte"],"sourcesContent":["<script>import { FileData } from \"@gradio/client\";\nimport { onMount, createEventDispatcher, onDestroy } from \"svelte\";\nexport let upload_id;\nexport let root;\nexport let files;\nexport let stream_handler;\nlet stream;\nlet progress = false;\nlet current_file_upload;\nlet file_to_display;\nlet files_with_progress = files.map((file) => {\n  return {\n    ...file,\n    progress: 0\n  };\n});\nconst dispatch = createEventDispatcher();\nfunction handleProgress(filename, chunk_size) {\n  files_with_progress = files_with_progress.map((file) => {\n    if (file.orig_name === filename) {\n      file.progress += chunk_size;\n    }\n    return file;\n  });\n}\nfunction getProgress(file) {\n  return file.progress * 100 / (file.size || 0) || 0;\n}\nonMount(async () => {\n  stream = await stream_handler(\n    new URL(`${root}/gradio_api/upload_progress?upload_id=${upload_id}`)\n  );\n  if (stream == null) {\n    throw new Error(\"Event source is not defined\");\n  }\n  stream.onmessage = async function(event) {\n    const _data = JSON.parse(event.data);\n    if (!progress)\n      progress = true;\n    if (_data.msg === \"done\") {\n      stream?.close();\n      dispatch(\"done\");\n    } else {\n      current_file_upload = _data;\n      handleProgress(_data.orig_name, _data.chunk_size);\n    }\n  };\n});\nonDestroy(() => {\n  if (stream != null || stream != void 0)\n    stream.close();\n});\nfunction calculateTotalProgress(files2) {\n  let totalProgress = 0;\n  files2.forEach((file) => {\n    totalProgress += getProgress(file);\n  });\n  document.documentElement.style.setProperty(\n    \"--upload-progress-width\",\n    (totalProgress / files2.length).toFixed(2) + \"%\"\n  );\n  return totalProgress / files2.length;\n}\n$:\n  calculateTotalProgress(files_with_progress);\n$:\n  file_to_display = current_file_upload || files_with_progress[0];\n</script>\n\n<div class=\"wrap\" class:progress>\n\t<span class=\"uploading\"\n\t\t>Uploading {files_with_progress.length}\n\t\t{files_with_progress.length > 1 ? \"files\" : \"file\"}...</span\n\t>\n\n\t{#if file_to_display}\n\t\t<div class=\"file\">\n\t\t\t<span>\n\t\t\t\t<div class=\"progress-bar\">\n\t\t\t\t\t<progress\n\t\t\t\t\t\tstyle=\"visibility:hidden;height:0;width:0;\"\n\t\t\t\t\t\tvalue={getProgress(file_to_display)}\n\t\t\t\t\t\tmax=\"100\">{getProgress(file_to_display)}</progress\n\t\t\t\t\t>\n\t\t\t\t</div>\n\t\t\t</span>\n\t\t\t<span class=\"file-name\">\n\t\t\t\t{file_to_display.orig_name}\n\t\t\t</span>\n\t\t</div>\n\t{/if}\n</div>\n\n<style>\n\t.wrap {\n\t\toverflow-y: auto;\n\t\ttransition: opacity 0.5s ease-in-out;\n\t\tbackground: var(--block-background-fill);\n\t\tposition: relative;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t\tmin-height: var(--size-40);\n\t\twidth: var(--size-full);\n\t}\n\n\t.wrap::after {\n\t\tcontent: \"\";\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\twidth: var(--upload-progress-width);\n\t\theight: 100%;\n\t\ttransition: all 0.5s ease-in-out;\n\t\tz-index: 1;\n\t}\n\n\t.uploading {\n\t\tfont-size: var(--text-lg);\n\t\tfont-family: var(--font);\n\t\tz-index: 2;\n\t}\n\n\t.file-name {\n\t\tmargin: var(--spacing-md);\n\t\tfont-size: var(--text-lg);\n\t\tcolor: var(--body-text-color-subdued);\n\t}\n\n\t.file {\n\t\tfont-size: var(--text-md);\n\t\tz-index: 2;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t}\n\n\t.file progress {\n\t\tdisplay: inline;\n\t\theight: var(--size-1);\n\t\twidth: 100%;\n\t\ttransition: all 0.5s ease-in-out;\n\t\tcolor: var(--color-accent);\n\t\tborder: none;\n\t}\n\n\t.file progress[value]::-webkit-progress-value {\n\t\tbackground-color: var(--color-accent);\n\t\tborder-radius: 20px;\n\t}\n\n\t.file progress[value]::-webkit-progress-bar {\n\t\tbackground-color: var(--border-color-accent);\n\t\tborder-radius: 20px;\n\t}\n\n\t.progress-bar {\n\t\twidth: 14px;\n\t\theight: 14px;\n\t\tborder-radius: 50%;\n\t\tbackground: radial-gradient(\n\t\t\t\tclosest-side,\n\t\t\t\tvar(--block-background-fill) 64%,\n\t\t\t\ttransparent 53% 100%\n\t\t\t),\n\t\t\tconic-gradient(\n\t\t\t\tvar(--color-accent) var(--upload-progress-width),\n\t\t\t\tvar(--border-color-accent) 0\n\t\t\t);\n\t\ttransition: all 0.5s ease-in-out;\n\t}\n</style>\n","<script>import { createEventDispatcher, tick, getContext } from \"svelte\";\nimport { prepare_files } from \"@gradio/client\";\nimport { _ } from \"svelte-i18n\";\nimport UploadProgress from \"./UploadProgress.svelte\";\nexport let filetype = null;\nexport let dragging = false;\nexport let boundedheight = true;\nexport let center = true;\nexport let flex = true;\nexport let file_count = \"single\";\nexport let disable_click = false;\nexport let root;\nexport let hidden = false;\nexport let format = \"file\";\nexport let uploading = false;\nexport let hidden_upload = null;\nexport let show_progress = true;\nexport let max_file_size = null;\nexport let upload;\nexport let stream_handler;\nlet upload_id;\nlet file_data;\nlet accept_file_types;\nlet use_post_upload_validation = null;\nconst get_ios = () => {\n  if (typeof navigator !== \"undefined\") {\n    const userAgent = navigator.userAgent.toLowerCase();\n    return userAgent.indexOf(\"iphone\") > -1 || userAgent.indexOf(\"ipad\") > -1;\n  }\n  return false;\n};\n$:\n  ios = get_ios();\nconst dispatch = createEventDispatcher();\nconst validFileTypes = [\"image\", \"video\", \"audio\", \"text\", \"file\"];\nconst process_file_type = (type) => {\n  if (ios && type.startsWith(\".\")) {\n    use_post_upload_validation = true;\n    return type;\n  }\n  if (ios && type.includes(\"file/*\")) {\n    return \"*\";\n  }\n  if (type.startsWith(\".\") || type.endsWith(\"/*\")) {\n    return type;\n  }\n  if (validFileTypes.includes(type)) {\n    return type + \"/*\";\n  }\n  return \".\" + type;\n};\n$:\n  if (filetype == null) {\n    accept_file_types = null;\n  } else if (typeof filetype === \"string\") {\n    accept_file_types = process_file_type(filetype);\n  } else if (ios && filetype.includes(\"file/*\")) {\n    accept_file_types = \"*\";\n  } else {\n    filetype = filetype.map(process_file_type);\n    accept_file_types = filetype.join(\", \");\n  }\nfunction updateDragging() {\n  dragging = !dragging;\n}\nexport function paste_clipboard() {\n  navigator.clipboard.read().then(async (items) => {\n    for (let i = 0; i < items.length; i++) {\n      const type = items[i].types.find((t) => t.startsWith(\"image/\"));\n      if (type) {\n        items[i].getType(type).then(async (blob) => {\n          const file = new File(\n            [blob],\n            `clipboard.${type.replace(\"image/\", \"\")}`\n          );\n          await load_files([file]);\n        });\n        break;\n      }\n    }\n  });\n}\nexport function open_file_upload() {\n  if (disable_click)\n    return;\n  if (hidden_upload) {\n    hidden_upload.value = \"\";\n    hidden_upload.click();\n  }\n}\nasync function handle_upload(file_data2) {\n  await tick();\n  upload_id = Math.random().toString(36).substring(2, 15);\n  uploading = true;\n  try {\n    const _file_data = await upload(\n      file_data2,\n      root,\n      upload_id,\n      max_file_size ?? Infinity\n    );\n    dispatch(\"load\", file_count === \"single\" ? _file_data?.[0] : _file_data);\n    uploading = false;\n    return _file_data || [];\n  } catch (e) {\n    dispatch(\"error\", e.message);\n    uploading = false;\n    return [];\n  }\n}\nexport async function load_files(files) {\n  if (!files.length) {\n    return;\n  }\n  let _files = files.map(\n    (f) => new File([f], f instanceof File ? f.name : \"file\", { type: f.type })\n  );\n  if (ios && use_post_upload_validation) {\n    _files = _files.filter((file) => {\n      if (is_valid_file(file)) {\n        return true;\n      }\n      dispatch(\n        \"error\",\n        `Invalid file type: ${file.name}. Only ${filetype} allowed.`\n      );\n      return false;\n    });\n    if (_files.length === 0) {\n      return [];\n    }\n  }\n  file_data = await prepare_files(_files);\n  return await handle_upload(file_data);\n}\nfunction is_valid_file(file) {\n  if (!filetype)\n    return true;\n  const allowed_types = Array.isArray(filetype) ? filetype : [filetype];\n  return allowed_types.some((type) => {\n    const processed_type = process_file_type(type);\n    if (processed_type.startsWith(\".\")) {\n      return file.name.toLowerCase().endsWith(processed_type.toLowerCase());\n    }\n    if (processed_type === \"*\") {\n      return true;\n    }\n    if (processed_type.endsWith(\"/*\")) {\n      const [category] = processed_type.split(\"/\");\n      return file.type.startsWith(category + \"/\");\n    }\n    return file.type === processed_type;\n  });\n}\nasync function load_files_from_upload(e) {\n  const target = e.target;\n  if (!target.files)\n    return;\n  if (format != \"blob\") {\n    await load_files(Array.from(target.files));\n  } else {\n    if (file_count === \"single\") {\n      dispatch(\"load\", target.files[0]);\n      return;\n    }\n    dispatch(\"load\", target.files);\n  }\n}\nfunction is_valid_mimetype(file_accept, uploaded_file_extension, uploaded_file_type) {\n  if (!file_accept || file_accept === \"*\" || file_accept === \"file/*\" || Array.isArray(file_accept) && file_accept.some((accept) => accept === \"*\" || accept === \"file/*\")) {\n    return true;\n  }\n  let acceptArray;\n  if (typeof file_accept === \"string\") {\n    acceptArray = file_accept.split(\",\").map((s) => s.trim());\n  } else if (Array.isArray(file_accept)) {\n    acceptArray = file_accept;\n  } else {\n    return false;\n  }\n  return acceptArray.includes(uploaded_file_extension) || acceptArray.some((type) => {\n    const [category] = type.split(\"/\").map((s) => s.trim());\n    return type.endsWith(\"/*\") && uploaded_file_type.startsWith(category + \"/\");\n  });\n}\nasync function loadFilesFromDrop(e) {\n  dragging = false;\n  if (!e.dataTransfer?.files)\n    return;\n  const files_to_load = Array.from(e.dataTransfer.files).filter((file) => {\n    const file_extension = \".\" + file.name.split(\".\").pop();\n    if (file_extension && is_valid_mimetype(accept_file_types, file_extension, file.type)) {\n      return true;\n    }\n    if (file_extension && Array.isArray(filetype) ? filetype.includes(file_extension) : file_extension === filetype) {\n      return true;\n    }\n    dispatch(\"error\", `Invalid file type only ${filetype} allowed.`);\n    return false;\n  });\n  if (format != \"blob\") {\n    await load_files(files_to_load);\n  } else {\n    if (file_count === \"single\") {\n      dispatch(\"load\", files_to_load[0]);\n      return;\n    }\n    dispatch(\"load\", files_to_load);\n  }\n}\n</script>\n\n{#if filetype === \"clipboard\"}\n\t<button\n\t\tclass:hidden\n\t\tclass:center\n\t\tclass:boundedheight\n\t\tclass:flex\n\t\tstyle:height=\"100%\"\n\t\ttabindex={hidden ? -1 : 0}\n\t\ton:click={paste_clipboard}\n\t>\n\t\t<slot />\n\t</button>\n{:else if uploading && show_progress}\n\t{#if !hidden}\n\t\t<UploadProgress {root} {upload_id} files={file_data} {stream_handler} />\n\t{/if}\n{:else}\n\t<button\n\t\tclass:hidden\n\t\tclass:center\n\t\tclass:boundedheight\n\t\tclass:flex\n\t\tclass:disable_click\n\t\tstyle:height=\"100%\"\n\t\ttabindex={hidden ? -1 : 0}\n\t\ton:drag|preventDefault|stopPropagation\n\t\ton:dragstart|preventDefault|stopPropagation\n\t\ton:dragend|preventDefault|stopPropagation\n\t\ton:dragover|preventDefault|stopPropagation\n\t\ton:dragenter|preventDefault|stopPropagation\n\t\ton:dragleave|preventDefault|stopPropagation\n\t\ton:drop|preventDefault|stopPropagation\n\t\ton:click={open_file_upload}\n\t\ton:drop={loadFilesFromDrop}\n\t\ton:dragenter={updateDragging}\n\t\ton:dragleave={updateDragging}\n\t>\n\t\t<slot />\n\t\t<input\n\t\t\taria-label=\"file upload\"\n\t\t\tdata-testid=\"file-upload\"\n\t\t\ttype=\"file\"\n\t\t\tbind:this={hidden_upload}\n\t\t\ton:change={load_files_from_upload}\n\t\t\taccept={accept_file_types || undefined}\n\t\t\tmultiple={file_count === \"multiple\" || undefined}\n\t\t\twebkitdirectory={file_count === \"directory\" || undefined}\n\t\t\tmozdirectory={file_count === \"directory\" || undefined}\n\t\t/>\n\t</button>\n{/if}\n\n<style>\n\tbutton {\n\t\tcursor: pointer;\n\t\twidth: var(--size-full);\n\t}\n\n\t.center {\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t}\n\t.flex {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t}\n\t.hidden {\n\t\tdisplay: none;\n\t\tposition: absolute;\n\t\tflex-grow: 0;\n\t}\n\n\t.hidden :global(svg) {\n\t\tdisplay: none;\n\t}\n\n\t.disable_click {\n\t\tcursor: default;\n\t}\n\n\tinput {\n\t\tdisplay: none;\n\t}\n</style>\n"],"names":["t0_value","getProgress","ctx","t2_value","progress_1","progress_1_value_value","insert","target","div1","anchor","append","span0","div0","span1","dirty","set_data","t0","t2","t1_value","create_if_block","div","span","t1","t3","t3_value","file","calculateTotalProgress","files2","totalProgress","upload_id","$$props","root","files","stream_handler","stream","progress","current_file_upload","file_to_display","files_with_progress","dispatch","createEventDispatcher","handleProgress","filename","chunk_size","$$invalidate","onMount","event","_data","onDestroy","attr","input","input_accept_value","button","current","create_if_block_2","is_valid_mimetype","file_accept","uploaded_file_extension","uploaded_file_type","accept","acceptArray","type","category","s","filetype","dragging","boundedheight","center","flex","file_count","disable_click","hidden","format","uploading","hidden_upload","show_progress","max_file_size","upload","file_data","accept_file_types","use_post_upload_validation","get_ios","userAgent","validFileTypes","process_file_type","ios","updateDragging","paste_clipboard","items","i","t","blob","load_files","open_file_upload","handle_upload","file_data2","tick","_file_data","e","_files","f","is_valid_file","prepare_files","processed_type","load_files_from_upload","loadFilesFromDrop","files_to_load","file_extension","$$value"],"mappings":"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"}