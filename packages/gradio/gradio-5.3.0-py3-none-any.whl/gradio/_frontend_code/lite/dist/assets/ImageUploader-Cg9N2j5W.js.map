{"version":3,"file":"ImageUploader-Cg9N2j5W.js","sources":["../../../icons/dist/src/Camera.svelte","../../../icons/dist/src/Circle.svelte","../../../image/dist/shared/WebcamPermissions.svelte","../../../image/dist/shared/stream_utils.js","../../../image/dist/shared/Webcam.svelte","../../../image/dist/shared/ClearImage.svelte","../../../image/dist/shared/ImageUploader.svelte"],"sourcesContent":["<svg\n\txmlns=\"http://www.w3.org/2000/svg\"\n\twidth=\"100%\"\n\theight=\"100%\"\n\tviewBox=\"0 0 24 24\"\n\tfill=\"none\"\n\tstroke=\"currentColor\"\n\tstroke-width=\"1.5\"\n\tstroke-linecap=\"round\"\n\tstroke-linejoin=\"round\"\n\tclass=\"feather feather-camera\"\n>\n\t<path\n\t\td=\"M23 19a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h4l2-3h6l2 3h4a2 2 0 0 1 2 2z\"\n\t/>\n\t<circle cx=\"12\" cy=\"13\" r=\"4\" />\n</svg>\n","<svg\n\txmlns=\"http://www.w3.org/2000/svg\"\n\twidth=\"100%\"\n\theight=\"100%\"\n\tviewBox=\"0 0 24 24\"\n\tstroke-width=\"1.5\"\n\tstroke-linecap=\"round\"\n\tstroke-linejoin=\"round\"\n\tclass=\"feather feather-circle\"\n>\n\t<circle cx=\"12\" cy=\"12\" r=\"10\" />\n</svg>\n","<script>import { Webcam } from \"@gradio/icons\";\nimport { createEventDispatcher } from \"svelte\";\nconst dispatch = createEventDispatcher();\n</script>\n\n<button style:height=\"100%\" on:click={() => dispatch(\"click\")}>\n\t<div class=\"wrap\">\n\t\t<span class=\"icon-wrap\">\n\t\t\t<Webcam />\n\t\t</span>\n\t\t{\"Click to Access Webcam\"}\n\t</div>\n</button>\n\n<style>\n\tbutton {\n\t\tcursor: pointer;\n\t\twidth: var(--size-full);\n\t}\n\n\t.wrap {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t\tmin-height: var(--size-60);\n\t\tcolor: var(--block-label-text-color);\n\t\theight: 100%;\n\t\tpadding-top: var(--size-3);\n\t}\n\n\t.icon-wrap {\n\t\twidth: 30px;\n\t\tmargin-bottom: var(--spacing-lg);\n\t}\n\n\t@media (--screen-md) {\n\t\t.wrap {\n\t\t\tfont-size: var(--text-lg);\n\t\t}\n\t}\n</style>\n","export function get_devices() {\n    return navigator.mediaDevices.enumerateDevices();\n}\nexport function handle_error(error) {\n    throw new Error(error);\n}\nexport function set_local_stream(local_stream, video_source) {\n    video_source.srcObject = local_stream;\n    video_source.muted = true;\n    video_source.play();\n}\nexport async function get_video_stream(include_audio, video_source, device_id) {\n    const size = {\n        width: { ideal: 1920 },\n        height: { ideal: 1440 }\n    };\n    const constraints = {\n        video: device_id ? { deviceId: { exact: device_id }, ...size } : size,\n        audio: include_audio\n    };\n    return navigator.mediaDevices\n        .getUserMedia(constraints)\n        .then((local_stream) => {\n        set_local_stream(local_stream, video_source);\n        return local_stream;\n    });\n}\nexport function set_available_devices(devices) {\n    const cameras = devices.filter((device) => device.kind === \"videoinput\");\n    return cameras;\n}\n","<script>import { createEventDispatcher, onMount } from \"svelte\";\nimport {\n  Camera,\n  Circle,\n  Square,\n  DropdownArrow,\n  Spinner\n} from \"@gradio/icons\";\nimport { StreamingBar } from \"@gradio/statustracker\";\nimport { prepare_files } from \"@gradio/client\";\nimport WebcamPermissions from \"./WebcamPermissions.svelte\";\nimport { fade } from \"svelte/transition\";\nimport {\n  get_devices,\n  get_video_stream,\n  set_available_devices\n} from \"./stream_utils\";\nlet video_source;\nlet available_video_devices = [];\nlet selected_device = null;\nlet time_limit = null;\nlet stream_state = \"closed\";\nexport const modify_stream = (state) => {\n  if (state === \"closed\") {\n    time_limit = null;\n    stream_state = \"closed\";\n    value = null;\n  } else if (state === \"waiting\") {\n    stream_state = \"waiting\";\n  } else {\n    stream_state = \"open\";\n  }\n};\nexport const set_time_limit = (time) => {\n  if (recording)\n    time_limit = time;\n};\nlet canvas;\nexport let streaming = false;\nexport let pending = false;\nexport let root = \"\";\nexport let stream_every = 1;\nexport let mode = \"image\";\nexport let mirror_webcam;\nexport let include_audio;\nexport let i18n;\nexport let upload;\nexport let value = null;\nconst dispatch = createEventDispatcher();\nonMount(() => {\n  canvas = document.createElement(\"canvas\");\n  if (streaming && mode === \"image\") {\n    window.setInterval(() => {\n      if (video_source && !pending) {\n        take_picture();\n      }\n    }, stream_every * 1e3);\n  }\n});\nconst handle_device_change = async (event) => {\n  const target = event.target;\n  const device_id = target.value;\n  await get_video_stream(include_audio, video_source, device_id).then(\n    async (local_stream) => {\n      stream = local_stream;\n      selected_device = available_video_devices.find(\n        (device) => device.deviceId === device_id\n      ) || null;\n      options_open = false;\n    }\n  );\n};\nasync function access_webcam() {\n  try {\n    get_video_stream(include_audio, video_source).then(async (local_stream) => {\n      webcam_accessed = true;\n      available_video_devices = await get_devices();\n      stream = local_stream;\n    }).then(() => set_available_devices(available_video_devices)).then((devices) => {\n      available_video_devices = devices;\n      const used_devices = stream.getTracks().map((track) => track.getSettings()?.deviceId)[0];\n      selected_device = used_devices ? devices.find((device) => device.deviceId === used_devices) || available_video_devices[0] : available_video_devices[0];\n    });\n    if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {\n      dispatch(\"error\", i18n(\"image.no_webcam_support\"));\n    }\n  } catch (err) {\n    if (err instanceof DOMException && err.name == \"NotAllowedError\") {\n      dispatch(\"error\", i18n(\"image.allow_webcam_access\"));\n    } else {\n      throw err;\n    }\n  }\n}\nfunction take_picture() {\n  var context = canvas.getContext(\"2d\");\n  if ((!streaming || streaming && recording) && video_source.videoWidth && video_source.videoHeight) {\n    canvas.width = video_source.videoWidth;\n    canvas.height = video_source.videoHeight;\n    context.drawImage(\n      video_source,\n      0,\n      0,\n      video_source.videoWidth,\n      video_source.videoHeight\n    );\n    if (mirror_webcam) {\n      context.scale(-1, 1);\n      context.drawImage(video_source, -video_source.videoWidth, 0);\n    }\n    if (streaming && (!recording || stream_state === \"waiting\")) {\n      return;\n    }\n    if (streaming) {\n      const image_data = canvas.toDataURL(\"image/jpeg\");\n      dispatch(\"stream\", image_data);\n      return;\n    }\n    canvas.toBlob(\n      (blob) => {\n        dispatch(streaming ? \"stream\" : \"capture\", blob);\n      },\n      `image/${streaming ? \"jpeg\" : \"png\"}`,\n      0.8\n    );\n  }\n}\nlet recording = false;\nlet recorded_blobs = [];\nlet stream;\nlet mimeType;\nlet media_recorder;\nfunction take_recording() {\n  if (recording) {\n    media_recorder.stop();\n    let video_blob = new Blob(recorded_blobs, { type: mimeType });\n    let ReaderObj = new FileReader();\n    ReaderObj.onload = async function(e) {\n      if (e.target) {\n        let _video_blob = new File(\n          [video_blob],\n          \"sample.\" + mimeType.substring(6)\n        );\n        const val = await prepare_files([_video_blob]);\n        let val_ = ((await upload(val, root))?.filter(Boolean))[0];\n        dispatch(\"capture\", val_);\n        dispatch(\"stop_recording\");\n      }\n    };\n    ReaderObj.readAsDataURL(video_blob);\n  } else {\n    dispatch(\"start_recording\");\n    recorded_blobs = [];\n    let validMimeTypes = [\"video/webm\", \"video/mp4\"];\n    for (let validMimeType of validMimeTypes) {\n      if (MediaRecorder.isTypeSupported(validMimeType)) {\n        mimeType = validMimeType;\n        break;\n      }\n    }\n    if (mimeType === null) {\n      console.error(\"No supported MediaRecorder mimeType\");\n      return;\n    }\n    media_recorder = new MediaRecorder(stream, {\n      mimeType\n    });\n    media_recorder.addEventListener(\"dataavailable\", function(e) {\n      recorded_blobs.push(e.data);\n    });\n    media_recorder.start(200);\n  }\n  recording = !recording;\n}\nlet webcam_accessed = false;\nfunction record_video_or_photo() {\n  if (mode === \"image\" && streaming) {\n    recording = !recording;\n  }\n  if (mode === \"image\") {\n    take_picture();\n  } else {\n    take_recording();\n  }\n  if (!recording && stream) {\n    dispatch(\"close_stream\");\n    stream.getTracks().forEach((track) => track.stop());\n    video_source.srcObject = null;\n    webcam_accessed = false;\n    window.setTimeout(() => {\n      value = null;\n    }, 500);\n    value = null;\n  }\n}\nlet options_open = false;\nexport function click_outside(node, cb) {\n  const handle_click = (event) => {\n    if (node && !node.contains(event.target) && !event.defaultPrevented) {\n      cb(event);\n    }\n  };\n  document.addEventListener(\"click\", handle_click, true);\n  return {\n    destroy() {\n      document.removeEventListener(\"click\", handle_click, true);\n    }\n  };\n}\nfunction handle_click_outside(event) {\n  event.preventDefault();\n  event.stopPropagation();\n  options_open = false;\n}\n</script>\n\n<div class=\"wrap\">\n\t<StreamingBar {time_limit} />\n\t<!-- svelte-ignore a11y-media-has-caption -->\n\t<!-- need to suppress for video streaming https://github.com/sveltejs/svelte/issues/5967 -->\n\t<video\n\t\tbind:this={video_source}\n\t\tclass:flip={mirror_webcam}\n\t\tclass:hide={!webcam_accessed || (webcam_accessed && !!value)}\n\t/>\n\t<!-- svelte-ignore a11y-missing-attribute -->\n\t<img\n\t\tsrc={value?.url}\n\t\tclass:hide={!webcam_accessed || (webcam_accessed && !value)}\n\t/>\n\t{#if !webcam_accessed}\n\t\t<div\n\t\t\tin:fade={{ delay: 100, duration: 200 }}\n\t\t\ttitle=\"grant webcam access\"\n\t\t\tstyle=\"height: 100%\"\n\t\t>\n\t\t\t<WebcamPermissions on:click={async () => access_webcam()} />\n\t\t</div>\n\t{:else}\n\t\t<div class=\"button-wrap\">\n\t\t\t<button\n\t\t\t\ton:click={record_video_or_photo}\n\t\t\t\taria-label={mode === \"image\" ? \"capture photo\" : \"start recording\"}\n\t\t\t>\n\t\t\t\t{#if mode === \"video\" || streaming}\n\t\t\t\t\t{#if streaming && stream_state === \"waiting\"}\n\t\t\t\t\t\t<div class=\"icon-with-text\" style=\"width:var(--size-24);\">\n\t\t\t\t\t\t\t<div class=\"icon color-primary\" title=\"spinner\">\n\t\t\t\t\t\t\t\t<Spinner />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{i18n(\"audio.waiting\")}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t{:else if (streaming && stream_state === \"open\") || (!streaming && recording)}\n\t\t\t\t\t\t<div class=\"icon-with-text\">\n\t\t\t\t\t\t\t<div class=\"icon color-primary\" title=\"stop recording\">\n\t\t\t\t\t\t\t\t<Square />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{i18n(\"audio.stop\")}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t{:else}\n\t\t\t\t\t\t<div class=\"icon-with-text\">\n\t\t\t\t\t\t\t<div class=\"icon color-primary\" title=\"start recording\">\n\t\t\t\t\t\t\t\t<Circle />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{i18n(\"audio.record\")}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t{/if}\n\t\t\t\t{:else}\n\t\t\t\t\t<div class=\"icon\" title=\"capture photo\">\n\t\t\t\t\t\t<Camera />\n\t\t\t\t\t</div>\n\t\t\t\t{/if}\n\t\t\t</button>\n\t\t\t{#if !recording}\n\t\t\t\t<button\n\t\t\t\t\tclass=\"icon\"\n\t\t\t\t\ton:click={() => (options_open = true)}\n\t\t\t\t\taria-label=\"select input source\"\n\t\t\t\t>\n\t\t\t\t\t<DropdownArrow />\n\t\t\t\t</button>\n\t\t\t{/if}\n\t\t</div>\n\t\t{#if options_open && selected_device}\n\t\t\t<select\n\t\t\t\tclass=\"select-wrap\"\n\t\t\t\taria-label=\"select source\"\n\t\t\t\tuse:click_outside={handle_click_outside}\n\t\t\t\ton:change={handle_device_change}\n\t\t\t>\n\t\t\t\t<button\n\t\t\t\t\tclass=\"inset-icon\"\n\t\t\t\t\ton:click|stopPropagation={() => (options_open = false)}\n\t\t\t\t>\n\t\t\t\t\t<DropdownArrow />\n\t\t\t\t</button>\n\t\t\t\t{#if available_video_devices.length === 0}\n\t\t\t\t\t<option value=\"\">{i18n(\"common.no_devices\")}</option>\n\t\t\t\t{:else}\n\t\t\t\t\t{#each available_video_devices as device}\n\t\t\t\t\t\t<option\n\t\t\t\t\t\t\tvalue={device.deviceId}\n\t\t\t\t\t\t\tselected={selected_device.deviceId === device.deviceId}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{device.label}\n\t\t\t\t\t\t</option>\n\t\t\t\t\t{/each}\n\t\t\t\t{/if}\n\t\t\t</select>\n\t\t{/if}\n\t{/if}\n</div>\n\n<style>\n\t.wrap {\n\t\tposition: relative;\n\t\twidth: var(--size-full);\n\t\theight: var(--size-full);\n\t}\n\n\t.hide {\n\t\tdisplay: none;\n\t}\n\n\tvideo {\n\t\twidth: var(--size-full);\n\t\theight: var(--size-full);\n\t\tobject-fit: cover;\n\t}\n\n\t.button-wrap {\n\t\tposition: absolute;\n\t\tbackground-color: var(--block-background-fill);\n\t\tborder: 1px solid var(--border-color-primary);\n\t\tborder-radius: var(--radius-xl);\n\t\tpadding: var(--size-1-5);\n\t\tdisplay: flex;\n\t\tbottom: var(--size-2);\n\t\tleft: 50%;\n\t\ttransform: translate(-50%, 0);\n\t\tbox-shadow: var(--shadow-drop-lg);\n\t\tborder-radius: var(--radius-xl);\n\t\tline-height: var(--size-3);\n\t\tcolor: var(--button-secondary-text-color);\n\t}\n\n\t.icon-with-text {\n\t\twidth: var(--size-20);\n\t\talign-items: center;\n\t\tmargin: 0 var(--spacing-xl);\n\t\tdisplay: flex;\n\t\tjustify-content: space-evenly;\n\t}\n\n\t@media (--screen-md) {\n\t\tbutton {\n\t\t\tbottom: var(--size-4);\n\t\t}\n\t}\n\n\t@media (--screen-xl) {\n\t\tbutton {\n\t\t\tbottom: var(--size-8);\n\t\t}\n\t}\n\n\t.icon {\n\t\twidth: 18px;\n\t\theight: 18px;\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t\talign-items: center;\n\t}\n\n\t.color-primary {\n\t\tfill: var(--primary-600);\n\t\tstroke: var(--primary-600);\n\t\tcolor: var(--primary-600);\n\t}\n\n\t.flip {\n\t\ttransform: scaleX(-1);\n\t}\n\n\t.select-wrap {\n\t\t-webkit-appearance: none;\n\t\t-moz-appearance: none;\n\t\tappearance: none;\n\t\tcolor: var(--button-secondary-text-color);\n\t\tbackground-color: transparent;\n\t\twidth: 95%;\n\t\tfont-size: var(--text-md);\n\t\tposition: absolute;\n\t\tbottom: var(--size-2);\n\t\tbackground-color: var(--block-background-fill);\n\t\tbox-shadow: var(--shadow-drop-lg);\n\t\tborder-radius: var(--radius-xl);\n\t\tz-index: var(--layer-top);\n\t\tborder: 1px solid var(--border-color-primary);\n\t\ttext-align: left;\n\t\tline-height: var(--size-4);\n\t\twhite-space: nowrap;\n\t\ttext-overflow: ellipsis;\n\t\tleft: 50%;\n\t\ttransform: translate(-50%, 0);\n\t\tmax-width: var(--size-52);\n\t}\n\n\t.select-wrap > option {\n\t\tpadding: 0.25rem 0.5rem;\n\t\tborder-bottom: 1px solid var(--border-color-accent);\n\t\tpadding-right: var(--size-8);\n\t\ttext-overflow: ellipsis;\n\t\toverflow: hidden;\n\t}\n\n\t.select-wrap > option:hover {\n\t\tbackground-color: var(--color-accent);\n\t}\n\n\t.select-wrap > option:last-child {\n\t\tborder: none;\n\t}\n\n\t.inset-icon {\n\t\tposition: absolute;\n\t\ttop: 5px;\n\t\tright: -6.5px;\n\t\twidth: var(--size-10);\n\t\theight: var(--size-5);\n\t\topacity: 0.8;\n\t}\n\n\t@media (--screen-md) {\n\t\t.wrap {\n\t\t\tfont-size: var(--text-lg);\n\t\t}\n\t}\n</style>\n","<script>import { createEventDispatcher } from \"svelte\";\nimport { IconButton, IconButtonWrapper } from \"@gradio/atoms\";\nimport { Clear } from \"@gradio/icons\";\nconst dispatch = createEventDispatcher();\n</script>\n\n<IconButtonWrapper>\n\t<IconButton\n\t\tIcon={Clear}\n\t\tlabel=\"Remove Image\"\n\t\ton:click={(event) => {\n\t\t\tdispatch(\"remove_image\");\n\t\t\tevent.stopPropagation();\n\t\t}}\n\t/>\n</IconButtonWrapper>\n","<script>import { createEventDispatcher, tick } from \"svelte\";\nimport { BlockLabel } from \"@gradio/atoms\";\nimport { Image as ImageIcon } from \"@gradio/icons\";\nimport {\n} from \"@gradio/utils\";\nimport { get_coordinates_of_clicked_image } from \"./utils\";\nimport Webcam from \"./Webcam.svelte\";\nimport { Upload } from \"@gradio/upload\";\nimport { FileData } from \"@gradio/client\";\nimport ClearImage from \"./ClearImage.svelte\";\nimport { SelectSource } from \"@gradio/atoms\";\nimport Image from \"./Image.svelte\";\nexport let value = null;\nexport let label = void 0;\nexport let show_label;\nexport let sources = [\"upload\", \"clipboard\", \"webcam\"];\nexport let streaming = false;\nexport let pending = false;\nexport let mirror_webcam;\nexport let selectable = false;\nexport let root;\nexport let i18n;\nexport let max_file_size = null;\nexport let upload;\nexport let stream_handler;\nexport let stream_every;\nexport let modify_stream;\nexport let set_time_limit;\nlet upload_input;\nexport let uploading = false;\nexport let active_source = null;\nfunction handle_upload({ detail }) {\n  if (!streaming) {\n    value = detail;\n    dispatch(\"upload\");\n  }\n}\nfunction handle_clear() {\n  value = null;\n  dispatch(\"clear\");\n  dispatch(\"change\", null);\n}\nasync function handle_save(img_blob, event) {\n  if (event === \"stream\") {\n    dispatch(\"stream\", {\n      value: { url: img_blob },\n      is_value_data: true\n    });\n    return;\n  }\n  pending = true;\n  const f = await upload_input.load_files([\n    new File([img_blob], `image/${streaming ? \"jpeg\" : \"png\"}`)\n  ]);\n  if (event === \"change\" || event === \"upload\") {\n    value = f?.[0] || null;\n    await tick();\n    dispatch(\"change\");\n  }\n  pending = false;\n}\n$:\n  active_streaming = streaming && active_source === \"webcam\";\n$:\n  if (uploading && !active_streaming)\n    value = null;\nconst dispatch = createEventDispatcher();\nexport let dragging = false;\n$:\n  dispatch(\"drag\", dragging);\nfunction handle_click(evt) {\n  let coordinates = get_coordinates_of_clicked_image(evt);\n  if (coordinates) {\n    dispatch(\"select\", { index: coordinates, value: null });\n  }\n}\n$:\n  if (!active_source && sources) {\n    active_source = sources[0];\n  }\nasync function handle_select_source(source) {\n  switch (source) {\n    case \"clipboard\":\n      upload_input.paste_clipboard();\n      break;\n    default:\n      break;\n  }\n}\n</script>\n\n<BlockLabel {show_label} Icon={ImageIcon} label={label || \"Image\"} />\n\n<div data-testid=\"image\" class=\"image-container\">\n\t{#if value?.url && !active_streaming}\n\t\t<ClearImage\n\t\t\ton:remove_image={() => {\n\t\t\t\tvalue = null;\n\t\t\t\tdispatch(\"clear\");\n\t\t\t}}\n\t\t/>\n\t{/if}\n\t<div\n\t\tclass=\"upload-container\"\n\t\tclass:reduced-height={sources.length > 1}\n\t\tstyle:width={value ? \"auto\" : \"100%\"}\n\t>\n\t\t<Upload\n\t\t\thidden={value !== null || active_source === \"webcam\"}\n\t\t\tbind:this={upload_input}\n\t\t\tbind:uploading\n\t\t\tbind:dragging\n\t\t\tfiletype={active_source === \"clipboard\" ? \"clipboard\" : \"image/*\"}\n\t\t\ton:load={handle_upload}\n\t\t\ton:error\n\t\t\t{root}\n\t\t\t{max_file_size}\n\t\t\tdisable_click={!sources.includes(\"upload\") || value !== null}\n\t\t\t{upload}\n\t\t\t{stream_handler}\n\t\t>\n\t\t\t{#if value === null}\n\t\t\t\t<slot />\n\t\t\t{/if}\n\t\t</Upload>\n\t\t{#if active_source === \"webcam\" && (streaming || (!streaming && !value))}\n\t\t\t<Webcam\n\t\t\t\t{root}\n\t\t\t\t{value}\n\t\t\t\ton:capture={(e) => handle_save(e.detail, \"change\")}\n\t\t\t\ton:stream={(e) => handle_save(e.detail, \"stream\")}\n\t\t\t\ton:error\n\t\t\t\ton:drag\n\t\t\t\ton:upload={(e) => handle_save(e.detail, \"upload\")}\n\t\t\t\ton:close_stream\n\t\t\t\t{mirror_webcam}\n\t\t\t\t{stream_every}\n\t\t\t\t{streaming}\n\t\t\t\tmode=\"image\"\n\t\t\t\tinclude_audio={false}\n\t\t\t\t{i18n}\n\t\t\t\t{upload}\n\t\t\t\tbind:modify_stream\n\t\t\t\tbind:set_time_limit\n\t\t\t/>\n\t\t{:else if value !== null && !streaming}\n\t\t\t<!-- svelte-ignore a11y-click-events-have-key-events-->\n\t\t\t<!-- svelte-ignore a11y-no-static-element-interactions-->\n\t\t\t<div class:selectable class=\"image-frame\" on:click={handle_click}>\n\t\t\t\t<Image src={value.url} alt={value.alt_text} />\n\t\t\t</div>\n\t\t{/if}\n\t</div>\n\t{#if sources.length > 1 || sources.includes(\"clipboard\")}\n\t\t<SelectSource\n\t\t\t{sources}\n\t\t\tbind:active_source\n\t\t\t{handle_clear}\n\t\t\thandle_select={handle_select_source}\n\t\t/>\n\t{/if}\n</div>\n\n<style>\n\t.image-frame :global(img) {\n\t\twidth: var(--size-full);\n\t\theight: var(--size-full);\n\t\tobject-fit: scale-down;\n\t}\n\n\t.image-frame {\n\t\tobject-fit: cover;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t}\n\n\t.upload-container {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\n\t\theight: 100%;\n\t\tflex-shrink: 1;\n\t\tmax-height: 100%;\n\t}\n\n\t.reduced-height {\n\t\theight: calc(100% - var(--size-10));\n\t}\n\n\t.image-container {\n\t\tdisplay: flex;\n\t\theight: 100%;\n\t\tflex-direction: column;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t\tmax-height: 100%;\n\t}\n\n\t.selectable {\n\t\tcursor: crosshair;\n\t}\n</style>\n"],"names":["insert","target","svg","anchor","append","path","circle","button","div","span","dispatch","createEventDispatcher","get_devices","set_local_stream","local_stream","video_source","get_video_stream","include_audio","device_id","size","constraints","set_available_devices","devices","device","ctx","create_if_block_3","if_block2","create_if_block_1","attr","button_aria_label_value","current","dirty","div_intro","create_in_transition","fade","t1_value","div1","div0","set_data","t1","create_if_block_2","select","i","t_value","option","t","t0_value","option_value_value","option_selected_value","t0","src_url_equal","img","img_src_value","video","click_outside","node","cb","handle_click","event","available_video_devices","selected_device","time_limit","stream_state","modify_stream","state","$$invalidate","value","set_time_limit","time","recording","canvas","streaming","$$props","pending","root","stream_every","mode","mirror_webcam","i18n","upload","onMount","take_picture","handle_device_change","stream","options_open","access_webcam","webcam_accessed","used_devices","track","err","context","image_data","blob","recorded_blobs","mimeType","media_recorder","take_recording","video_blob","ReaderObj","e","_video_blob","val","prepare_files","val_","validMimeTypes","validMimeType","record_video_or_photo","handle_click_outside","$$value","click_handler_1","click_handler_2","Clear","if_block","image_changes","ImageIcon","create_if_block_4","blocklabel_changes","upload_1_changes","label","show_label","sources","selectable","max_file_size","stream_handler","upload_input","uploading","active_source","handle_upload","detail","handle_clear","handle_save","img_blob","f","tick","dragging","evt","coordinates","get_coordinates_of_clicked_image","handle_select_source","source","capture_handler","stream_handler_1","upload_handler","active_streaming"],"mappings":"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"}