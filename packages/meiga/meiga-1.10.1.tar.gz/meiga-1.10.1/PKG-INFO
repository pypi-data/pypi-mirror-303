Metadata-Version: 2.3
Name: meiga
Version: 1.10.1
Summary: A simple, typed and monad-based Result type for Python
Project-URL: Documentation, https://alice-biometrics.github.io/meiga/
Project-URL: Homepage, https://github.com/alice-biometrics/meiga
Author-email: Alice Biometrics <support@alicebiometrics.com>
License-Expression: MIT
License-File: LICENSE
Keywords: Monad,Result,Typed,Typing,result-type
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Information Technology
Classifier: Intended Audience :: System Administrators
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Classifier: Topic :: Software Development
Classifier: Topic :: Software Development :: Libraries
Classifier: Topic :: Software Development :: Libraries :: Application Frameworks
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Typing :: Typed
Requires-Python: >=3.8
Requires-Dist: typing-extensions; python_version < '3.10'
Provides-Extra: dev
Requires-Dist: hypothesis<7.0.0,>=6.56.3; extra == 'dev'
Requires-Dist: mypy>=1.0.0; extra == 'dev'
Requires-Dist: pip-audit<3.0.0,>=2.4.14; extra == 'dev'
Requires-Dist: pre-commit<3.0.0,>=2.20; extra == 'dev'
Requires-Dist: pyproject-fmt>=0.9.1; extra == 'dev'
Requires-Dist: pytest-asyncio<1,>=0.20.1; extra == 'dev'
Requires-Dist: pytest-clarity<2.0.0,>=1.0.1; extra == 'dev'
Requires-Dist: pytest-cov<5.0.0,>=4; extra == 'dev'
Requires-Dist: pytest-env<1.0.0,>=0.8.1; extra == 'dev'
Requires-Dist: pytest-mock<4.0.0,>=3.10; extra == 'dev'
Requires-Dist: pytest-variables[yaml]<3.0.0,>=2; extra == 'dev'
Requires-Dist: pytest<8.0.0,>=7.1.3; extra == 'dev'
Requires-Dist: ruff>=0.0.239; extra == 'dev'
Provides-Extra: doc
Requires-Dist: ansi2html; extra == 'doc'
Requires-Dist: markdown-include; extra == 'doc'
Requires-Dist: mdx-include<2.0.0,>=1.4.1; extra == 'doc'
Requires-Dist: mdx-truly-sane-lists; extra == 'doc'
Requires-Dist: mkdocs-exclude; extra == 'doc'
Requires-Dist: mkdocs-markdownextradata-plugin<0.3.0,>=0.1.7; extra == 'doc'
Requires-Dist: mkdocs-material<9.0.0,>=8.1.4; extra == 'doc'
Requires-Dist: mkdocs<2.0.0,>=1.1.2; extra == 'doc'
Requires-Dist: mkdocstrings; extra == 'doc'
Description-Content-Type: text/markdown

# meiga üßô

[![version](https://img.shields.io/github/release/alice-biometrics/meiga/all.svg)](https://github.com/alice-biometrics/meiga/releases)
[![ci](https://github.com/alice-biometrics/meiga/workflows/ci/badge.svg)](https://github.com/alice-biometrics/meiga/actions)
[![pypi](https://img.shields.io/pypi/dm/meiga)](https://pypi.org/project/meiga/)
[![codecov](https://codecov.io/gh/alice-biometrics/meiga/branch/main/graph/badge.svg?token=BX1IZJZLJQ)](https://codecov.io/gh/alice-biometrics/meiga)
[![Ruff](https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/astral-sh/ruff/main/assets/badge/v2.json)](https://github.com/astral-sh/ruff)
[![license](https://img.shields.io/github/license/alice-biometrics/meiga.svg)](https://github.com/alice-biometrics/meiga/blob/main/LICENSE)
[![versions](https://img.shields.io/pypi/pyversions/meiga.svg)](https://github.com/alice-biometrics/meiga)

<img src="https://github.com/alice-biometrics/custom-emojis/blob/master/images/alice_header.png?raw=true" width=auto>

---

**Documentation**: <a href="https://alice-biometrics.github.io/meiga/" target="_blank">https://alice-biometrics.github.io/meiga/</a>

**Source Code**: <a href="https://github.com/alice-biometrics/meiga" target="_blank">https://github.com/alice-biometrics/meiga</a>

---

## What is meiga üßô?

`meiga üßô` is a Python ¬µframework that provides a simple, fully typed, monad-based result type ‚û°Ô∏è `Result[Value, Error]`.

## How could meiga üßô help me?

`meiga üßô` provides a simple and clear way of handling errors in Python without using `Exceptions`. This package improves the Dev Experience as it allows to know all possible typed responses. With Meiga üßô your IDE will help you much more.

## Installation üíª

```console
pip install meiga
```

## Contribute

We'd love you to contribute to *meiga* ü•≥ü•≥ü•≥ü•≥ü•≥ü•≥Ô∏èÔ∏è!

For more information, check our [documentation](https://alice-biometrics.github.io/meiga/contributing/)

## Contact üì¨

support@alicebiometrics.com
