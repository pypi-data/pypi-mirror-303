.abc = pyimport "abc"

.NamedTuple = 'namedtuple': ClassType
.NamedTuple.
    __call__: (typename: Str, field_names: Sequence(Str), rename := Bool) -> (*Obj, **Obj) -> NamedTuple
.Deque! = 'deque': ClassType
.Deque!.
    __call__: (iterable := Iterable(Obj)) -> Deque!
.ChainMap: ClassType
.ChainMap.
    maps: [Mapping(Obj, Obj); _]
    __call__: (*maps: Mapping(Obj, Obj)) -> ChainMap
    new_child: (m := Mapping(Obj, Obj), **kwargs: Obj) -> ChainMap
.Counter: ClassType
.Counter.
    __call__: (iterable_or_mapping := Iterable(Obj) or Mapping(Obj, Obj), **kwargs: Obj) -> Counter
.OrderedDict: ClassType
.OrderedDict.
    __call__: (mapping: Mapping(Obj, Obj)) -> OrderedDict
.Defaultdict = 'defaultDict': ClassType
.UserDict: ClassType
.UserList: ClassType
.UserString: ClassType
