[project]
name = "whiteduck-tasks"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "click>=8.1.7",
    "loguru>=0.7.2",
    "msgspec>=0.18.6",
    "poethepoet>=0.29.0",
    "questionary>=2.0.1",
    "rich>=13.9.2",
    "toml>=0.10.2",
]

[tool.uv]
dev-dependencies = [
    "pytest>=8.3.3",
    "pytest-cov>=5.0.0",
    "pytest-sugar>=1.0.0",
    "pytest-clarity>=1.0.1",
]


# [project.scripts]
# whiteduck-whiteduck-tasks = "whiteduck.whiteduck.tasks.app:main"


[tool.hatch.build.targets.wheel]
packages = ["src/whiteduck"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.pyright]
include = ["src"]
exclude = [
    "**/node_modules",
    "**/__pycache__",
    "src/experimental",
    "src/typestubs",
    "src/templates",

]
ignore = ["src/oldstuff"]
defineConstant = { DEBUG = true }
reportMissingImports = "error"
reportMissingTypeStubs = false
typeCheckingMode = "basic"
stubPath = "src/stubs"
enableReachabilityAnalysis = true

[tool.poe.tasks]
# dev tasks
run_test = "uv run pytest"
docker_build = "docker build -t whiteduck ."
docker_start = "docker run --rm --volume .:/app --volume /app/.venv --publish 8000:8000  -it whiteduck:latest"
docker_run = ["docker_build", "docker_start"]
mkdocs = "uv run --extra docs mkdocs serve"

[tool.poe.tasks.init]
sequence = [{ ref = "run_test" }, { ref = "mkdocs" }]

# template tasks
[tool.pytest.ini_options]
addopts = "--cov=whiteduck -vvv"
generate_report_on_test = "True"
log_cli = "True"
minversion = "6.0"
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test"
python_functions = "test"
verbosity_test_cases = 2

