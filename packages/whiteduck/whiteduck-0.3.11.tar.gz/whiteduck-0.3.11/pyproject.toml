[project]
name = "whiteduck"
version = "0.3.11"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "click>=8.1.7",
    "whiteduck-core",
    "loguru>=0.7.2",
    "questionary>=2.0.1",
    "rich>=13.9.2",
    "whiteduck-tasks",
    "whiteduck-templates",
    "webcolors>=24.8.0",
]


# Dependencies for development

[tool.uv]
dev-dependencies = [
    "pytest>=8.3.3",
    "pytest-clarity>=1.0.1",
    "pytest-cov>=5.0.0",
    "pytest-sugar>=1.0.0",
    "ruff>=0.7.0",
    "vulture>=2.13",
]

[tool.uv.workspace]
members = ["packages/*"]

[tool.uv.sources]
whiteduck-core = { workspace = true }
whiteduck-tasks = { workspace = true }
whiteduck-templates = { workspace = true }


# Dependencies for documentation

[project.optional-dependencies]
docs = [
    "mkdocs>=1.6.1",
    "mkdocs-material>=9.5.40",
    "mkdocs-gen-files>=0.5.0",
    "mkdocs-literate-nav>=0.6.1",
    "mkdocs-section-index>=0.3.9",
    "mkdocstrings>=0.26.2",
    "mkdocstrings-python>=1.12.1",
]


# Build
[project.scripts]
whiteduck = "whiteduck.app:main"

[tool.hatch.build.targets.wheel]
packages = ["src/whiteduck"]

[tool.hatch.build.targets.wheel.force-include]
"packages/whiteduck.templates/src/whiteduck/templates/templates/poe_tasks/default_tasks.toml" = "pkg/default_tasks.toml"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"


[tool.pyright]
include = ["src"]
exclude = [
    "**/node_modules",
    "**/__pycache__",
    "src/experimental",
    "src/typestubs",
    "src/templates",

]
ignore = ["src/oldstuff"]
defineConstant = { DEBUG = true }
reportMissingImports = "error"
reportMissingTypeStubs = false
typeCheckingMode = "basic"
stubPath = "src/stubs"

[tool.poe.tasks]
# dev tasks
run_test = "uv run pytest"
docker_build = "docker build -t whiteduck ."
docker_start = "docker run --rm --volume .:/app --volume /app/.venv --publish 8000:8000  -it whiteduck:latest"
docker_run = ["docker_build", "docker_start"]
mkdocs = "uv run --extra docs mkdocs serve"

[tool.poe.tasks.init]
sequence = [{ ref = "run_test" }, { ref = "mkdocs" }]


[tool.pytest.ini_options]
addopts = "--cov -vvv"
log_cli = "True"
minversion = "6.0"
python_files = "test_*.py"
python_classes = "Test"
python_functions = "test"
verbosity_test_cases = 2
