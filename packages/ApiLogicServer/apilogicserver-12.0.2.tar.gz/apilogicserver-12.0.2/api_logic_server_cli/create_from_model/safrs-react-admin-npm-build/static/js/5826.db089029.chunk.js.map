{"version":3,"file":"static/js/5826.db089029.chunk.js","mappings":"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","sources":["components/external/UserPasswordTab.tsx","components/external/index.tsx","components/apifab/ApiFabUser.tsx","components/apifab/ApiFabComponents.tsx","components/Custom.tsx","../node_modules/@mui/icons-material/Download.js","../node_modules/@mui/icons-material/OpenInNew.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport { Typography, Button } from \"@mui/material\";\nimport Box from \"@mui/material/Box\";\nimport TextField from \"@mui/material/TextField\";\nimport { FormControl } from \"@mui/material\";\nimport { useRecordContext, useDataProvider } from \"react-admin\";\nimport { httpAuthClient } from \"../../rav4-jsonapi-client/ra-jsonapi-client\";\nimport { useConf } from \"../../Config\";\nimport { useNotify } from \"react-admin\";\n\nexport const UserPasswordTab = () => {\n  const conf = useConf();\n  const notify = useNotify();\n  const record = useRecordContext();\n  const dataProvider = useDataProvider();\n  const [pwdValue, setPwdValue] = useState(\"\");\n  const [rpwdValue, setRPwdValue] = useState(\"\");\n  const [submitColor, setSubmitColor] = useState<\n    \"default\" | \"inherit\" | \"secondary\" | \"primary\" | undefined\n  >(\"secondary\");\n  const onPwdChange = (e: any) => {\n    let pwdValue = e.target.value;\n    setPwdValue(pwdValue);\n    setSubmitColor(\n      pwdValue === rpwdValue && pwdValue.length > 5 ? \"primary\" : \"secondary\"\n    );\n    // console.log(pwdValue, rpwdValue);\n  };\n  const onRPwdVerify = (e: any) => {\n    let rpwdValue = e.target.value;\n    setRPwdValue(rpwdValue);\n    setSubmitColor(\n      pwdValue === rpwdValue && pwdValue.length > 5 ? \"primary\" : \"secondary\"\n    );\n    // console.log(pwdValue, rpwdValue);\n  };\n  const handleSubmit = () => {\n    // console.log(rpwdValue);\n    if (pwdValue !== rpwdValue) {\n      notify(\"Passwords don't match\", { type: \"warning\" });\n      return;\n    }\n    if (pwdValue.length < 6) {\n      notify(\"Password too short\", { type: \"warning\" });\n      return;\n    }\n    const data = {\n      password: pwdValue,\n    };\n    httpAuthClient(`${conf.api_root}/Users/${record?.id}/change_password`, {\n      method: \"POST\",\n      body: JSON.stringify(data),\n    })\n      .then(() => notify(\"Password Changed!\"))\n      .catch(() => notify(`Error Changing Password`, { type: \"warning\" }));\n  };\n\n  return (\n    <Box\n      component=\"form\"\n      sx={{\n        \"& .MuiTextField-root\": { m: 1, width: \"25ch\" },\n      }}\n      noValidate\n      autoComplete=\"off\"\n    >\n      <FormControl>\n        <Grid item xs={12} spacing={4}>\n          <Typography variant=\"body2\" component=\"p\">\n            <b>Change the user password</b>\n          </Typography>\n        </Grid>\n        <Grid item xs={12} spacing={4}>\n          <TextField\n            id=\"outlined-password-input\"\n            label=\"New Password\"\n            type=\"password\"\n            onChange={onPwdChange}\n          />\n        </Grid>\n        <Grid item xs={12} spacing={4}>\n          <TextField\n            id=\"outlined-password-input\"\n            label=\"Repeat Password\"\n            type=\"password\"\n            onChange={onRPwdVerify}\n          />\n        </Grid>\n        <Grid item xs={12} spacing={4}>\n          <Button\n            variant=\"contained\"\n            color={submitColor}\n            onClick={handleSubmit}\n          >\n            Submit\n          </Button>\n        </Grid>\n      </FormControl>\n    </Box>\n  );\n};\n\nexport const ApiUserPasswordTab = () => {\n  const conf = useConf();\n  const notify = useNotify();\n  const record = useRecordContext();\n  const dataProvider = useDataProvider();\n  const [curPwdValue, setCurPwdValue] = useState(\"\");\n  const [newPwdValue, setNewPwdValue] = useState(\"\");\n  const [rpwdValue, setRPwdValue] = useState(\"\");\n  const [submitColor, setSubmitColor] = useState<\n    \"default\" | \"inherit\" | \"secondary\" | \"primary\" | undefined\n  >(\"secondary\");\n\n  const onCurPwdChange = (e: any) => {\n    let pwdValue = e.target.value;\n    setCurPwdValue(pwdValue);\n    setSubmitColor(\n      pwdValue === rpwdValue && pwdValue.length > 5 ? \"primary\" : \"secondary\"\n    );\n  };\n  const onNewPwdChange = (e: any) => {\n    let pwdValue = e.target.value;\n    setNewPwdValue(pwdValue);\n    setSubmitColor(\n      pwdValue === rpwdValue && pwdValue.length > 5 ? \"primary\" : \"secondary\"\n    );\n  };\n  const onRPwdVerify = (e: any) => {\n    let rpwdValue = e.target.value;\n    setRPwdValue(rpwdValue);\n    setSubmitColor(\n      newPwdValue === rpwdValue && newPwdValue.length > 5\n        ? \"primary\"\n        : \"secondary\"\n    );\n  };\n  const handleSubmit = () => {\n    // console.log(rpwdValue);\n    if (newPwdValue !== rpwdValue) {\n      notify(\"Passwords don't match\", { type: \"warning\" });\n      return;\n    }\n    if (newPwdValue.length < 1) {\n      notify(\"Password too short\", { type: \"warning\" });\n      return;\n    }\n    const data = {\n      password: newPwdValue,\n    };\n    httpAuthClient(`${conf.api_root}/Users/${record?.id}/change_password`, {\n      method: \"POST\",\n      body: JSON.stringify(data),\n    })\n      .then(() => notify(\"Password Changed!\"))\n      .catch(() => notify(`Error Changing Password`, { type: \"warning\" }));\n  };\n\n  return (\n    <Box\n      component=\"form\"\n      sx={{\n        \"& .MuiTextField-root\": { m: 1, width: \"25ch\" },\n      }}\n      noValidate\n      autoComplete=\"off\"\n    >\n      <FormControl>\n        <Grid item xs={12} spacing={4} component=\"div\">\n          <Typography variant=\"body2\" component=\"p\">\n            <b>Current user password</b>\n          </Typography>\n        </Grid>\n        <Grid item xs={12} spacing={4} component=\"div\">\n          <TextField\n            id=\"outlined-password-input\"\n            label=\"Current Password\"\n            type=\"password\"\n            onChange={onCurPwdChange}\n          />\n        </Grid>\n        <Grid item xs={12} spacing={4} component=\"div\">\n          <Typography variant=\"body2\" component=\"p\">\n            <b>New user password</b>\n          </Typography>\n        </Grid>\n        <Grid item xs={12} spacing={4} component=\"div\">\n          <TextField\n            id=\"outlined-password-input\"\n            label=\"New Password\"\n            type=\"password\"\n            onChange={onNewPwdChange}\n          />\n        </Grid>\n        <Grid item xs={12} spacing={4} component=\"div\">\n          <TextField\n            id=\"outlined-password-input\"\n            label=\"Repeat Password\"\n            type=\"password\"\n            onChange={onRPwdVerify}\n          />\n        </Grid>\n        <Grid item xs={12} spacing={4} component=\"div\">\n          <Button\n            variant=\"contained\"\n            color={submitColor}\n            onClick={handleSubmit}\n          >\n            Submit\n          </Button>\n        </Grid>\n      </FormControl>\n    </Box>\n  );\n};\n","import * as React from \"react\";\n\nexport const MyComp = (props: any) => {\n  return <div>HMMMM</div>;\n};\n","import React, { useState } from 'react';\r\nimport { useGetIdentity } from 'react-admin';\r\nimport { Show, SimpleShowLayout, TextField, DateField, RichTextField, Link } from 'react-admin';\r\nimport { useUpdate, useRecordContext } from 'react-admin';\r\nimport { Checkbox, FormControlLabel, FormGroup, Button } from '@mui/material';\r\nimport { parseJwt } from '../../util.tsx';\r\n\r\ninterface UserSettingsProps {\r\n    accepted_eula: boolean;\r\n    accepted_marketing: boolean;\r\n    accepted_privacy: boolean;\r\n}\r\n\r\nexport const UserSettings = ({settings}:{settings:UserSettingsProps}) => {\r\n    const [checked, setChecked] = useState(settings?.accepted_marketing);\r\n\r\n    const record = useRecordContext();\r\n    const [update, { data, isPending, error }] = useUpdate(\r\n        'User',\r\n        { id: record?.id, data: { settings: settings }, previousData: record }\r\n      );\r\n\r\n\r\n    const handleClick = () => {\r\n        update();\r\n    };\r\n\r\n    //if (error) return <p>Error: {error.message}</p>;\r\n    console.log(record)\r\n    return <>\r\n    \r\n        {/* {JSON.stringify(settings)} */}\r\n        \r\n        <MarketingCheckbox settings={settings} checked={checked} setChecked={setChecked}/>\r\n        \r\n        <Button onClick={handleClick} variant=\"outlined\">\r\n        {isPending ? 'Updating...' : 'Save Changes'}\r\n        </Button>\r\n        {error?.message || ''}\r\n    </>\r\n}\r\n\r\nconst MarketingCheckbox = ({settings, checked, setChecked}:{settings:UserSettingsProps, checked: boolean, setChecked:any}) => {\r\n    \r\n    const handleChange = (event:any) => {\r\n        setChecked(event.target.checked);\r\n    };\r\n\r\n    return (\r\n        <FormGroup>\r\n            <FormControlLabel\r\n                control={\r\n                    <Checkbox\r\n                        checked={checked}\r\n                        onChange={handleChange}\r\n                        name=\"checked\"\r\n                        color=\"primary\"\r\n                    />\r\n                }\r\n                label=\"Receive e-mail notifications\"\r\n            />\r\n        </FormGroup>\r\n    );\r\n};\r\n\r\nexport const SecuritySettings = ({identity}:{identity:any}) => {\r\n\r\n    return <>\r\n        <Link to=\"https://apifabric.ai/static/privacy-policy.html\">Privacy Policy</Link>\r\n        <br/>\r\n        <Link to=\"https://kc.apifabric.ai/realms/kcals/account\">Manage Security Settings</Link>\r\n        <br/>\r\n        <Link to={`https://apifabric.ai/deleteUser?id=${identity.id}`} >Delete Account</Link>\r\n            \r\n    </>\r\n}\r\n\r\nexport const ApiFabUser = () => {\r\n\r\n    const { identity, isLoading } = useGetIdentity();\r\n    const record = useRecordContext();\r\n    const authToken = parseJwt(localStorage.getItem('authToken')||\"\");\r\n    if (!record) return null;\r\n\r\n    if (isLoading) return <div>Loading...</div>;\r\n\r\n    if (!identity || !authToken) return <div>No user found</div>;\r\n    \r\n    return <>\r\n    \r\n        {/* Identity:\r\n        <pre>{JSON.stringify(identity, null, 4)}</pre>\r\n        SSO info:\r\n        <pre>{JSON.stringify(authToken, null, 4)}</pre> */}\r\n        \r\n        <Show actions={false}>\r\n            <SimpleShowLayout>\r\n                {/* <TextField source=\"id\" /> */}\r\n                <TextField source=\"username\" />\r\n                <br/>\r\n                \r\n                <SecuritySettings identity={identity}/>\r\n                <UserSettings settings={record.settings || {}} />\r\n                \r\n            </SimpleShowLayout>\r\n        </Show>\r\n\r\n        \r\n        \r\n        \r\n        </>\r\n}\r\n\r\nexport const UserMenu = () => {\r\n\r\n    return <>Menu</>\r\n\r\n}","// Remove the import statement for 'React'\r\nimport { Box, Link, IconButton } from '@mui/material';\r\nimport { useRecordContext } from 'react-admin';\r\nimport OpenInNewIcon from '@mui/icons-material/OpenInNew';\r\nimport { StartStopModal } from './StartStopModal.tsx';\r\nimport DownloadIcon from '@mui/icons-material/Download';\r\nexport { ApiFabUser, UserSettings } from './ApiFabUser.tsx';\r\n\r\n// Remove the unused destructured elements\r\nexport const Running = () => {\r\n  const record = useRecordContext();\r\n\r\n  if (!record) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Box sx={{ textAlign: 'center' }}>\r\n      <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n        <StartStopModal record={record} />\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport const ProjectLink = () => {\r\n\r\n  const record = useRecordContext();\r\n\r\n  if (!record || !record.running) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Link href={record.link} target=\"_blank\" onClick={(e) => e.stopPropagation()}>\r\n      <OpenInNewIcon sx={{ color: 'rgb(63, 81, 181)' }} />\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport const DownloadProject = () => {\r\n  const record = useRecordContext();\r\n  if (!record) {\r\n    return <></>;\r\n  }\r\n  return (\r\n    <Link title=\"Download\" href={record.download} target=\"_blank\" onClick={(e) => e.stopPropagation()}>\r\n      <IconButton>\r\n        <DownloadIcon sx={{ color: 'rgb(63, 81, 181)' }} />\r\n      </IconButton>\r\n    </Link>\r\n  );\r\n};\r\n","import Grid from \"@mui/material/Grid\";\nimport { Typography } from \"@mui/material\";\nimport { TextField, PasswordInput } from \"react-admin\";\nimport * as React from \"react\";\nimport { useRecordContext, useRedirect } from \"react-admin\";\nimport { Create, SimpleForm } from 'react-admin';\nimport { TextInput } from 'react-admin';\nimport {ApiFabCreate} from './apifab/ApiFabCreate.tsx'\nimport {ShowApiFab} from './apifab/ApiFabShow.tsx'\nimport { Box } from '@mui/material';\n\nexport * from \"./external/UserPasswordTab\";\nexport * from \"./apifab/DBCreate.tsx\";\nexport * from \"./external\";\nexport * from \"./apifab/ApiFabComponents.tsx\"\nexport * from './apifab/ApiFab'\n\nexport const SampleColumnField = ({ attribute }: { attribute: any }) => {\n  console.log(\"attribute: \", attribute);\n  return (\n    <TextField\n      source={attribute.name}\n      key={attribute.name}\n      style={{ color: \"red\" }}\n    />\n  );\n};\n\nexport const EmployeeLabel = (props: any) => {\n  const employee = props.instance;\n  return (\n    <div>\n      {\" \"}\n      {employee.attributes?.FirstName} {employee.attributes?.LastName}\n    </div>\n  );\n};\n\nexport const CustomerLabel = (props: any) => {\n  const customer = props.instance;\n  return (\n    <div>\n      {\" \"}\n      <b>{customer.attributes?.CompanyName}</b>{\" \"}\n      <i>{customer.attributes?.ContactName}</i>\n    </div>\n  );\n};\n\nexport const UserPasswordField = (props: any) => {\n  if (props.mode === \"list\") {\n    return <span />;\n  }\n  if (props.mode === \"edit\") {\n    return (\n      <>\n        <Grid item xs={12} spacing={4}>\n          <Typography variant=\"h6\" component=\"h6\">\n            Change Password\n          </Typography>\n        </Grid>\n        <Grid item xs={4} spacing={4}>\n          <PasswordInput source=\"_password\" />{\" \"}\n        </Grid>\n        <Grid item xs={4} spacing={4}>\n          <PasswordInput source=\"_password\" />{\" \"}\n        </Grid>\n        <Grid item xs={4} spacing={4}></Grid>\n      </>\n    );\n  }\n  return <></>;\n};\n\nexport const CustomTab = (props: any) => {\n  // eslint-disable-next-line no-unused-vars\n  const record = useRecordContext();\n  return <div>Some Text</div>;\n};\n\n\nexport const CreateLocation = (props) => {\n  return <>\n  <Create>\n    <ApiFabCreate attributes={[]} />\n  </Create>\n  </>\n};\n\nexport const Overlay = () => (\n  // full-screen overlay\n  <>\n    <div id=\"popup-overlay\"></div>\n  </>\n);\n\n\nexport const showApiFab = () => {\n  return <ShowApiFab />\n}\n\nexport const CreateApiFab = () => {\n  \n  const redirect = useRedirect();\n  React.useEffect(() => {\n      // edit view\n      redirect('/Home')\n  }, [])\n\n  return <></>\n}\n\nexport const DateTime = ({ attribute, mode, ...props}: {attribute: any, mode: string}) => {\n  const record = useRecordContext();\n  if(!record || !attribute?.name){\n    return <></>\n  }\n  console.log(\"DateTime: \", attribute, mode, props);\n  const value = record[attribute?.name].split('.')[0];\n  return <>{value}</>;\n}\n\nconst redactConnstr = (connstr: string) => {\n  let redacted = null\n  if(connstr){\n    const groups = connstr.match(/(.*):(.*)@(.*)/)\n    redacted = groups ? `${groups[1]}:********@${groups[3]}` : connstr; \n  }\n  return <>{redacted}</>;\n}\n\nexport const ConnectionString = (props: any) => {\n  const record = useRecordContext();\n  //return <span style={{width: \"16em\", display: \"inline-block\", wordWrap: \"break-word\", wordBreak: \"break-all\"}}>{redactConnstr(record?.connection_string)}</span>;\n  return <span>{redactConnstr(record?.connection_string)}</span>;  \n}\n\n\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M5 20h14v-2H5zM19 9h-4V3H9v6H5l7 7z\"\n}), 'Download');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3z\"\n}), 'OpenInNew');"],"names":["UserPasswordTab","conf","useConf","notify","useNotify","record","useRecordContext","pwdValue","setPwdValue","useDataProvider","useState","rpwdValue","setRPwdValue","submitColor","setSubmitColor","_jsx","Box","component","sx","m","width","noValidate","autoComplete","children","_jsxs","FormControl","Grid","item","xs","spacing","Typography","variant","TextField","id","label","type","onChange","e","target","value","length","Button","color","onClick","handleSubmit","data","password","httpAuthClient","concat","api_root","method","body","JSON","stringify","then","catch","ApiUserPasswordTab","curPwdValue","setCurPwdValue","newPwdValue","setNewPwdValue","MyComp","props","UserSettings","_ref","settings","checked","setChecked","accepted_marketing","update","isPending","error","useUpdate","previousData","console","log","_Fragment","MarketingCheckbox","handleClick","message","_ref2","FormGroup","FormControlLabel","control","Checkbox","event","name","SecuritySettings","_ref3","identity","Link","to","ApiFabUser","isLoading","useGetIdentity","authToken","parseJwt","localStorage","getItem","Show","actions","SimpleShowLayout","source","Running","textAlign","display","alignItems","StartStopModal","ProjectLink","running","href","link","stopPropagation","OpenInNewIcon","DownloadProject","title","download","IconButton","DownloadIcon","SampleColumnField","attribute","style","EmployeeLabel","_employee$attributes","_employee$attributes2","employee","instance","attributes","FirstName","LastName","CustomerLabel","_customer$attributes","_customer$attributes2","customer","CompanyName","ContactName","UserPasswordField","mode","PasswordInput","CustomTab","CreateLocation","Create","ApiFabCreate","Overlay","showApiFab","ShowApiFab","CreateApiFab","redirect","useRedirect","React","DateTime","split","redactConnstr","connstr","redacted","groups","match","ConnectionString","connection_string","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","default","jsx","d"],"sourceRoot":""}