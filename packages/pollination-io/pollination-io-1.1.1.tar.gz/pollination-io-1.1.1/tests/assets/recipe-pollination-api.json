{
  "type": "Recipe",
  "annotations": {},
  "api_version": "v1beta1",
  "metadata": {
    "type": "MetaData",
    "annotations": {},
    "name": "annual-daylight",
    "tag": "0.8.2-viz",
    "app_version": null,
    "keywords": [
      "honeybee",
      "radiance",
      "ladybug-tools",
      "daylight",
      "annual-daylight"
    ],
    "maintainers": [
      {
        "type": "Maintainer",
        "annotations": {},
        "name": "mostapha",
        "email": "mostapha@ladybug.tools"
      },
      {
        "type": "Maintainer",
        "annotations": {},
        "name": "ladybug-tools",
        "email": "info@ladybug.tools"
      }
    ],
    "home": "https://github.com/pollination/annual-daylight",
    "sources": [
      "https://hub.docker.com/r/ladybugtools/honeybee-radiance"
    ],
    "icon": "https://raw.githubusercontent.com/ladybug-tools/artwork/master/icons_components/honeybee/png/annualrecipe.png",
    "deprecated": null,
    "description": "Annual daylight recipe for Pollination.",
    "license": {
      "type": "License",
      "annotations": {},
      "name": "PolyForm Shield License 1.0.0",
      "url": "https://polyformproject.org/wp-content/uploads/2020/06/PolyForm-Shield-1.0.0.txt"
    }
  },
  "dependencies": [
    {
      "type": "Dependency",
      "annotations": {},
      "kind": "plugin",
      "name": "honeybee-radiance",
      "hash": null,
      "alias": null,
      "tag": "0.14.3",
      "source": "https://api.pollination.solutions/registries/ladybug-tools"
    },
    {
      "type": "Dependency",
      "annotations": {},
      "kind": "plugin",
      "name": "honeybee-vtk",
      "hash": null,
      "alias": null,
      "tag": "0.2.4",
      "source": "https://api.pollination.solutions/registries/ladybug-tools"
    }
  ],
  "flow": [
    {
      "type": "DAG",
      "annotations": {},
      "inputs": [
        {
          "type": "DAGFolderInput",
          "annotations": {},
          "name": "bsdfs",
          "description": "Folder containing any BSDF files needed for ray tracing.",
          "default": null,
          "alias": [],
          "required": false,
          "spec": null
        },
        {
          "type": "DAGStringInput",
          "annotations": {},
          "name": "grid-name",
          "description": "Sensor grid file name. This is useful to rename the final result file to {grid_name}.ill",
          "default": null,
          "alias": [],
          "required": true,
          "spec": null
        },
        {
          "type": "DAGFileInput",
          "annotations": {},
          "name": "octree-file",
          "description": "A Radiance octree file.",
          "default": null,
          "alias": [],
          "required": true,
          "spec": null,
          "extensions": [
            "oct"
          ]
        },
        {
          "type": "DAGFileInput",
          "annotations": {},
          "name": "octree-file-with-suns",
          "description": "A Radiance octree file with suns.",
          "default": null,
          "alias": [],
          "required": true,
          "spec": null,
          "extensions": [
            "oct"
          ]
        },
        {
          "type": "DAGStringInput",
          "annotations": {},
          "name": "radiance-parameters",
          "description": "The radiance parameters for ray tracing",
          "default": "-ab 2 -ad 5000 -lw 2e-05",
          "alias": [],
          "required": false,
          "spec": null
        },
        {
          "type": "DAGIntegerInput",
          "annotations": {},
          "name": "sensor-count",
          "description": "Number of sensors in the input sensor grid.",
          "default": null,
          "alias": [],
          "required": true,
          "spec": null
        },
        {
          "type": "DAGFileInput",
          "annotations": {},
          "name": "sensor-grid",
          "description": "Sensor grid file.",
          "default": null,
          "alias": [],
          "required": true,
          "spec": null,
          "extensions": [
            "pts"
          ]
        },
        {
          "type": "DAGFileInput",
          "annotations": {},
          "name": "sky-dome",
          "description": "Path to sky dome file.",
          "default": null,
          "alias": [],
          "required": true,
          "spec": null,
          "extensions": null
        },
        {
          "type": "DAGFileInput",
          "annotations": {},
          "name": "sky-matrix",
          "description": "Path to total sky matrix file.",
          "default": null,
          "alias": [],
          "required": true,
          "spec": null,
          "extensions": null
        },
        {
          "type": "DAGFileInput",
          "annotations": {},
          "name": "sky-matrix-direct",
          "description": "Path to direct skymtx file (i.e. gendaymtx -d).",
          "default": null,
          "alias": [],
          "required": true,
          "spec": null,
          "extensions": null
        },
        {
          "type": "DAGFileInput",
          "annotations": {},
          "name": "sun-modifiers",
          "description": "A file with sun modifiers.",
          "default": null,
          "alias": [],
          "required": true,
          "spec": null,
          "extensions": null
        }
      ],
      "outputs": [],
      "name": "annual-daylight-ray-tracing",
      "fail_fast": true,
      "tasks": [
        {
          "type": "DAGTask",
          "annotations": {},
          "name": "direct-sky",
          "template": "honeybee-radiance/daylight-coefficient",
          "needs": [],
          "arguments": [
            {
              "type": "TaskArgument",
              "annotations": {},
              "name": "radiance-parameters",
              "from": {
                "type": "InputReference",
                "annotations": {},
                "variable": "radiance-parameters"
              }
            },
            {
              "type": "TaskArgument",
              "annotations": {},
              "name": "fixed-radiance-parameters",
              "from": {
                "type": "ValueReference",
                "annotations": {},
                "value": "-aa 0.0 -I -ab 1 -c 1 -faf"
              }
            },
            {
              "type": "TaskArgument",
              "annotations": {},
              "name": "sensor-count",
              "from": {
                "type": "InputReference",
                "annotations": {},
                "variable": "sensor-count"
              }
            },
            {
              "type": "TaskPathArgument",
              "annotations": {},
              "name": "sky-matrix",
              "from": {
                "type": "InputFileReference",
                "annotations": {},
                "variable": "sky-matrix-direct"
              },
              "sub_path": null
            },
            {
              "type": "TaskPathArgument",
              "annotations": {},
              "name": "sky-dome",
              "from": {
                "type": "InputFileReference",
                "annotations": {},
                "variable": "sky-dome"
              },
              "sub_path": null
            },
            {
              "type": "TaskPathArgument",
              "annotations": {},
              "name": "sensor-grid",
              "from": {
                "type": "InputFileReference",
                "annotations": {},
                "variable": "sensor-grid"
              },
              "sub_path": null
            },
            {
              "type": "TaskPathArgument",
              "annotations": {},
              "name": "scene-file",
              "from": {
                "type": "InputFileReference",
                "annotations": {},
                "variable": "octree-file"
              },
              "sub_path": null
            },
            {
              "type": "TaskPathArgument",
              "annotations": {},
              "name": "bsdf-folder",
              "from": {
                "type": "InputFolderReference",
                "annotations": {},
                "variable": "bsdfs"
              },
              "sub_path": null
            }
          ],
          "loop": null,
          "sub_folder": null,
          "returns": [
            {
              "type": "TaskPathReturn",
              "annotations": {},
              "name": "result-file",
              "description": null,
              "path": "direct_sky.ill",
              "required": true
            }
          ]
        },
        {
          "type": "DAGTask",
          "annotations": {},
          "name": "direct-sunlight",
          "template": "honeybee-radiance/daylight-contribution",
          "needs": [],
          "arguments": [
            {
              "type": "TaskArgument",
              "annotations": {},
              "name": "radiance-parameters",
              "from": {
                "type": "InputReference",
                "annotations": {},
                "variable": "radiance-parameters"
              }
            },
            {
              "type": "TaskArgument",
              "annotations": {},
              "name": "fixed-radiance-parameters",
              "from": {
                "type": "ValueReference",
                "annotations": {},
                "value": "-aa 0.0 -I -faf -ab 0 -dc 1.0 -dt 0.0 -dj 0.0 -dr 0"
              }
            },
            {
              "type": "TaskArgument",
              "annotations": {},
              "name": "sensor-count",
              "from": {
                "type": "InputReference",
                "annotations": {},
                "variable": "sensor-count"
              }
            },
            {
              "type": "TaskPathArgument",
              "annotations": {},
              "name": "modifiers",
              "from": {
                "type": "InputFileReference",
                "annotations": {},
                "variable": "sun-modifiers"
              },
              "sub_path": null
            },
            {
              "type": "TaskPathArgument",
              "annotations": {},
              "name": "sensor-grid",
              "from": {
                "type": "InputFileReference",
                "annotations": {},
                "variable": "sensor-grid"
              },
              "sub_path": null
            },
            {
              "type": "TaskPathArgument",
              "annotations": {},
              "name": "scene-file",
              "from": {
                "type": "InputFileReference",
                "annotations": {},
                "variable": "octree-file-with-suns"
              },
              "sub_path": null
            },
            {
              "type": "TaskPathArgument",
              "annotations": {},
              "name": "bsdf-folder",
              "from": {
                "type": "InputFolderReference",
                "annotations": {},
                "variable": "bsdfs"
              },
              "sub_path": null
            }
          ],
          "loop": null,
          "sub_folder": null,
          "returns": [
            {
              "type": "TaskPathReturn",
              "annotations": {},
              "name": "result-file",
              "description": null,
              "path": "direct_sunlight.ill",
              "required": true
            }
          ]
        },
        {
          "type": "DAGTask",
          "annotations": {},
          "name": "output-matrix-math",
          "template": "honeybee-radiance/add-remove-sky-matrix",
          "needs": [
            "direct-sunlight",
            "total-sky",
            "direct-sky"
          ],
          "arguments": [
            {
              "type": "TaskArgument",
              "annotations": {},
              "name": "name",
              "from": {
                "type": "InputReference",
                "annotations": {},
                "variable": "grid-name"
              }
            },
            {
              "type": "TaskPathArgument",
              "annotations": {},
              "name": "direct-sky-matrix",
              "from": {
                "type": "TaskFileReference",
                "annotations": {},
                "name": "direct-sky",
                "variable": "result-file"
              },
              "sub_path": null
            },
            {
              "type": "TaskPathArgument",
              "annotations": {},
              "name": "total-sky-matrix",
              "from": {
                "type": "TaskFileReference",
                "annotations": {},
                "name": "total-sky",
                "variable": "result-file"
              },
              "sub_path": null
            },
            {
              "type": "TaskPathArgument",
              "annotations": {},
              "name": "sunlight-matrix",
              "from": {
                "type": "TaskFileReference",
                "annotations": {},
                "name": "direct-sunlight",
                "variable": "result-file"
              },
              "sub_path": null
            },
            {
              "type": "TaskArgument",
              "annotations": {},
              "name": "conversion",
              "from": {
                "type": "ValueReference",
                "annotations": {},
                "value": "47.4 119.9 11.6"
              }
            }
          ],
          "loop": null,
          "sub_folder": null,
          "returns": [
            {
              "type": "TaskPathReturn",
              "annotations": {},
              "name": "results-file",
              "description": null,
              "path": "../final/{{inputs.name}}.ill",
              "required": true
            }
          ]
        },
        {
          "type": "DAGTask",
          "annotations": {},
          "name": "total-sky",
          "template": "honeybee-radiance/daylight-coefficient",
          "needs": [],
          "arguments": [
            {
              "type": "TaskArgument",
              "annotations": {},
              "name": "radiance-parameters",
              "from": {
                "type": "InputReference",
                "annotations": {},
                "variable": "radiance-parameters"
              }
            },
            {
              "type": "TaskArgument",
              "annotations": {},
              "name": "fixed-radiance-parameters",
              "from": {
                "type": "ValueReference",
                "annotations": {},
                "value": "-aa 0.0 -I -c 1 -faf"
              }
            },
            {
              "type": "TaskArgument",
              "annotations": {},
              "name": "sensor-count",
              "from": {
                "type": "InputReference",
                "annotations": {},
                "variable": "sensor-count"
              }
            },
            {
              "type": "TaskPathArgument",
              "annotations": {},
              "name": "sky-matrix",
              "from": {
                "type": "InputFileReference",
                "annotations": {},
                "variable": "sky-matrix"
              },
              "sub_path": null
            },
            {
              "type": "TaskPathArgument",
              "annotations": {},
              "name": "sky-dome",
              "from": {
                "type": "InputFileReference",
                "annotations": {},
                "variable": "sky-dome"
              },
              "sub_path": null
            },
            {
              "type": "TaskPathArgument",
              "annotations": {},
              "name": "sensor-grid",
              "from": {
                "type": "InputFileReference",
                "annotations": {},
                "variable": "sensor-grid"
              },
              "sub_path": null
            },
            {
              "type": "TaskPathArgument",
              "annotations": {},
              "name": "scene-file",
              "from": {
                "type": "InputFileReference",
                "annotations": {},
                "variable": "octree-file"
              },
              "sub_path": null
            },
            {
              "type": "TaskPathArgument",
              "annotations": {},
              "name": "bsdf-folder",
              "from": {
                "type": "InputFolderReference",
                "annotations": {},
                "variable": "bsdfs"
              },
              "sub_path": null
            }
          ],
          "loop": null,
          "sub_folder": null,
          "returns": [
            {
              "type": "TaskPathReturn",
              "annotations": {},
              "name": "result-file",
              "description": null,
              "path": "total_sky.ill",
              "required": true
            }
          ]
        }
      ]
    },
    {
      "type": "DAG",
      "annotations": {},
      "inputs": [
        {
          "type": "DAGIntegerInput",
          "annotations": {},
          "name": "cpu-count",
          "description": "The maximum number of CPUs for parallel execution. This will be used to determine the number of sensors run by each worker.",
          "default": 50,
          "alias": [
            {
              "type": "DAGIntegerInputAlias",
              "annotations": {},
              "name": "cpu_count",
              "description": "The maximum number of CPUs for parallel execution. For local simulation, this value is ignored and the cpu_count is automatically set to be equal to the number of workers tasked to the run. For cloud-based runs, this input can be used to control the resources used for the simulation and, if unspecified, the default value of 50 will be used.",
              "platform": [
                "grasshopper"
              ],
              "handler": [],
              "default": 50,
              "required": false,
              "spec": null
            }
          ],
          "required": false,
          "spec": {
            "type": "integer",
            "minimum": 1
          }
        },
        {
          "type": "DAGStringInput",
          "annotations": {},
          "name": "grid-filter",
          "description": "Text for a grid identifier or a pattern to filter the sensor grids of the model that are simulated. For instance, first_floor_* will simulate only the sensor grids that have an identifier that starts with first_floor_. By default, all grids in the model will be simulated.",
          "default": "*",
          "alias": [
            {
              "type": "DAGStringInputAlias",
              "annotations": {},
              "name": "grid_filter",
              "description": "Text for a grid identifier or a pattern to filter the sensor grids of the model that are simulated. For instance, first_floor_* will simulate only the sensor grids that have an identifier that starts with first_floor_. By default, all grids in the model will be simulated.",
              "platform": [
                "grasshopper"
              ],
              "handler": [],
              "default": "*",
              "required": false,
              "spec": null
            }
          ],
          "required": false,
          "spec": null
        },
        {
          "type": "DAGIntegerInput",
          "annotations": {},
          "name": "min-sensor-count",
          "description": "The minimum number of sensors in each sensor grid after redistributing the sensors based on cpu_count. This value takes precedence over the cpu_count and can be used to ensure that the parallelization does not result in generating unnecessarily small sensor grids. The default value is set to 1, which means that the cpu_count is always respected.",
          "default": 1,
          "alias": [
            {
              "type": "DAGIntegerInputAlias",
              "annotations": {},
              "name": "min_sen_count",
              "description": "Positive integer for the minimum number of sensors in each grid after redistributing the sensors based on cpu_count. This value takes precedence over the cpu_count and can be used to ensure that the parallelization does not result in generating unnecessarily small sensor grids that increase overhead. (Default: 200).",
              "platform": [
                "grasshopper"
              ],
              "handler": [],
              "default": 200,
              "required": false,
              "spec": null
            }
          ],
          "required": false,
          "spec": {
            "type": "integer",
            "minimum": 1
          }
        },
        {
          "type": "DAGFileInput",
          "annotations": {},
          "name": "model",
          "description": "A Honeybee model in HBJSON file format.",
          "default": null,
          "alias": [
            {
              "type": "DAGGenericInputAlias",
              "annotations": {},
              "name": "model",
              "description": "A Honeybee Model to simulate or the path to a HBJSON file of a Model. This can also be the path to a HBpkl file, though this is only recommended for cases where the model is extremely large. Note that this model should have sensor grids assigned to it.",
              "platform": [
                "grasshopper"
              ],
              "handler": [
                {
                  "type": "IOAliasHandler",
                  "annotations": {},
                  "language": "python",
                  "module": "pollination_handlers.inputs.model",
                  "function": "model_to_json_grid_check",
                  "index": 0
                },
                {
                  "type": "IOAliasHandler",
                  "annotations": {},
                  "language": "csharp",
                  "module": "Pollination.RhinoHandlers",
                  "function": "HBModelToJSON",
                  "index": 0
                }
              ],
              "default": null,
              "required": true,
              "spec": null
            },
            {
              "type": "DAGLinkedInputAlias",
              "annotations": {},
              "name": "model",
              "description": "This input links the model to Rhino model.",
              "platform": [
                "rhino"
              ],
              "handler": [
                {
                  "type": "IOAliasHandler",
                  "annotations": {},
                  "language": "csharp",
                  "module": "Pollination.RhinoHandlers",
                  "function": "RhinoHBModelToJSON",
                  "index": 0
                }
              ],
              "default": null,
              "required": true,
              "spec": null
            }
          ],
          "required": true,
          "spec": null,
          "extensions": [
            "json",
            "hbjson"
          ]
        },
        {
          "type": "DAGNumberInput",
          "annotations": {},
          "name": "north",
          "description": "A number for rotation from north.",
          "default": 0.0,
          "alias": [
            {
              "type": "DAGGenericInputAlias",
              "annotations": {},
              "name": "north",
              "description": "A number between -360 and 360 for the counterclockwise difference between the North and the positive Y-axis in degrees. This can also be Vector for the direction to North. (Default: 0).",
              "platform": [
                "grasshopper"
              ],
              "handler": [
                {
                  "type": "IOAliasHandler",
                  "annotations": {},
                  "language": "python",
                  "module": "pollination_handlers.inputs.north",
                  "function": "north_vector_to_angle",
                  "index": 0
                }
              ],
              "default": "0",
              "required": false,
              "spec": null
            }
          ],
          "required": false,
          "spec": {
            "type": "number",
            "maximum": 360,
            "minimum": 0
          }
        },
        {
          "type": "DAGStringInput",
          "annotations": {},
          "name": "radiance-parameters",
          "description": "The radiance parameters for ray tracing.",
          "default": "-ab 2 -ad 5000 -lw 2e-05",
          "alias": [
            {
              "type": "DAGStringInputAlias",
              "annotations": {},
              "name": "radiance_par",
              "description": "Text for the radiance parameters to be used for ray tracing. (Default: -ab 2 -ad 5000 -lw 2e-05).",
              "platform": [
                "grasshopper"
              ],
              "handler": [],
              "default": "-ab 2 -ad 5000 -lw 2e-05",
              "required": false,
              "spec": null
            }
          ],
          "required": false,
          "spec": null
        },
        {
          "type": "DAGFileInput",
          "annotations": {},
          "name": "schedule",
          "description": "Path to an annual schedule file. Values should be 0-1 separated by new line. If not provided an 8-5 annual schedule will be created.",
          "default": null,
          "alias": [
            {
              "type": "DAGGenericInputAlias",
              "annotations": {},
              "name": "schedule",
              "description": "An annual occupancy schedule, either as a path to a csv file (with 8760 rows), a Ladybug Hourly Continuous Data Collection or a HB-Energy schedule object. This can also be the identifier of a schedule in your HB-Energy schedule library. Any value in this schedule that is 0.1 or above will be considered occupied.",
              "platform": [
                "grasshopper"
              ],
              "handler": [
                {
                  "type": "IOAliasHandler",
                  "annotations": {},
                  "language": "python",
                  "module": "pollination_handlers.inputs.schedule",
                  "function": "schedule_to_csv",
                  "index": 0
                }
              ],
              "default": null,
              "required": false,
              "spec": null
            }
          ],
          "required": false,
          "spec": null,
          "extensions": [
            "txt",
            "csv"
          ]
        },
        {
          "type": "DAGStringInput",
          "annotations": {},
          "name": "thresholds",
          "description": "A string to change the threshold for daylight autonomy and useful daylight illuminance. Valid keys are -t for daylight autonomy threshold, -lt for the lower threshold for useful daylight illuminance and -ut for the upper threshold. The default is -t 300 -lt 100 -ut 3000. The order of the keys is not important and you can include one or all of them. For instance if you only want to change the upper threshold to 2000 lux you should use -ut 2000 as the input.",
          "default": "-t 300 -lt 100 -ut 3000",
          "alias": [
            {
              "type": "DAGStringInputAlias",
              "annotations": {},
              "name": "thresholds",
              "description": "A string to change the threshold for daylight autonomy (DA) and useful daylight illuminance (UDI). Valid keys are -t for daylight autonomy threshold, -lt for the lower threshold for useful daylight illuminance and -ut for the upper threshold. The order of the keys is not important and you can include one or all of them. For instance if you only want to change the upper threshold to 2000 lux you should use -ut 2000 as the input. (Default: -t 300 -lt 100 -ut 3000).",
              "platform": [
                "grasshopper"
              ],
              "handler": [],
              "default": "-t 300 -lt 100 -ut 3000",
              "required": false,
              "spec": null
            }
          ],
          "required": false,
          "spec": null
        },
        {
          "type": "DAGFileInput",
          "annotations": {},
          "name": "wea",
          "description": "Wea file.",
          "default": null,
          "alias": [
            {
              "type": "DAGGenericInputAlias",
              "annotations": {},
              "name": "wea",
              "description": "A Wea object produced from the Wea components that are under the Light Sources tab. This can also be the path to a .wea or a .epw file.",
              "platform": [
                "grasshopper"
              ],
              "handler": [
                {
                  "type": "IOAliasHandler",
                  "annotations": {},
                  "language": "python",
                  "module": "pollination_handlers.inputs.wea",
                  "function": "wea_handler_timestep_check",
                  "index": 0
                }
              ],
              "default": null,
              "required": true,
              "spec": null
            }
          ],
          "required": true,
          "spec": null,
          "extensions": [
            "wea"
          ]
        }
      ],
      "outputs": [
        {
          "type": "DAGFolderOutput",
          "annotations": {},
          "name": "cda",
          "description": "Continuous daylight autonomy results.",
          "from": {
            "type": "FolderReference",
            "annotations": {},
            "path": "metrics/cda"
          },
          "alias": [
            {
              "type": "DAGGenericOutputAlias",
              "annotations": {},
              "name": "cDA",
              "description": "Continuous daylight autonomy values for each sensor. These can be plugged into the \"LB Spatial Heatmap\" component along with meshes of the sensor grids to visualize results.",
              "platform": [
                "grasshopper"
              ],
              "handler": [
                {
                  "type": "IOAliasHandler",
                  "annotations": {},
                  "language": "python",
                  "module": "pollination_handlers.outputs.daylight",
                  "function": "read_cda_from_folder",
                  "index": 0
                }
              ]
            },
            {
              "type": "DAGLinkedOutputAlias",
              "annotations": {},
              "name": "cDA Results",
              "description": null,
              "platform": [
                "rhino"
              ],
              "handler": [
                {
                  "type": "IOAliasHandler",
                  "annotations": {},
                  "language": "python",
                  "module": "pollination_handlers.outputs.daylight",
                  "function": "read_cda_from_folder",
                  "index": 0
                },
                {
                  "type": "IOAliasHandler",
                  "annotations": {},
                  "language": "csharp",
                  "module": "Pollination.RhinoHandlers",
                  "function": "LoadMeshBasedResultsToRhino",
                  "index": 0
                }
              ]
            }
          ],
          "required": true
        },
        {
          "type": "DAGFolderOutput",
          "annotations": {},
          "name": "da",
          "description": "Daylight autonomy results.",
          "from": {
            "type": "FolderReference",
            "annotations": {},
            "path": "metrics/da"
          },
          "alias": [
            {
              "type": "DAGGenericOutputAlias",
              "annotations": {},
              "name": "DA",
              "description": "Daylight autonomy values for each sensor. These can be plugged into the \"LB Spatial Heatmap\" component along with meshes of the sensor grids to visualize results.",
              "platform": [
                "grasshopper"
              ],
              "handler": [
                {
                  "type": "IOAliasHandler",
                  "annotations": {},
                  "language": "python",
                  "module": "pollination_handlers.outputs.daylight",
                  "function": "read_da_from_folder",
                  "index": 0
                }
              ]
            },
            {
              "type": "DAGLinkedOutputAlias",
              "annotations": {},
              "name": "DA Results",
              "description": null,
              "platform": [
                "rhino"
              ],
              "handler": [
                {
                  "type": "IOAliasHandler",
                  "annotations": {},
                  "language": "python",
                  "module": "pollination_handlers.outputs.daylight",
                  "function": "read_da_from_folder",
                  "index": 0
                },
                {
                  "type": "IOAliasHandler",
                  "annotations": {},
                  "language": "csharp",
                  "module": "Pollination.RhinoHandlers",
                  "function": "LoadMeshBasedResultsToRhino",
                  "index": 0
                }
              ]
            }
          ],
          "required": true
        },
        {
          "type": "DAGFolderOutput",
          "annotations": {},
          "name": "metrics",
          "description": "Annual metrics folder.",
          "from": {
            "type": "FolderReference",
            "annotations": {},
            "path": "metrics"
          },
          "alias": [],
          "required": true
        },
        {
          "type": "DAGFolderOutput",
          "annotations": {},
          "name": "results",
          "description": "Folder with raw result files (.ill) that contain illuminance matrices.",
          "from": {
            "type": "FolderReference",
            "annotations": {},
            "path": "results"
          },
          "alias": [
            {
              "type": "DAGGenericOutputAlias",
              "annotations": {},
              "name": "results",
              "description": "Raw result files (.ill) that contain illuminance matrices.",
              "platform": [
                "grasshopper"
              ],
              "handler": [
                {
                  "type": "IOAliasHandler",
                  "annotations": {},
                  "language": "python",
                  "module": "pollination_handlers.outputs.daylight",
                  "function": "sort_ill_from_folder",
                  "index": 0
                }
              ]
            }
          ],
          "required": true
        },
        {
          "type": "DAGFolderOutput",
          "annotations": {},
          "name": "udi",
          "description": "Useful daylight illuminance results.",
          "from": {
            "type": "FolderReference",
            "annotations": {},
            "path": "metrics/udi"
          },
          "alias": [
            {
              "type": "DAGGenericOutputAlias",
              "annotations": {},
              "name": "UDI",
              "description": "Useful daylight autonomy values for each sensor. These can be plugged into the \"LB Spatial Heatmap\" component along with meshes of the sensor grids to visualize results.",
              "platform": [
                "grasshopper"
              ],
              "handler": [
                {
                  "type": "IOAliasHandler",
                  "annotations": {},
                  "language": "python",
                  "module": "pollination_handlers.outputs.daylight",
                  "function": "read_udi_from_folder",
                  "index": 0
                }
              ]
            },
            {
              "type": "DAGLinkedOutputAlias",
              "annotations": {},
              "name": "UDI Results",
              "description": null,
              "platform": [
                "rhino"
              ],
              "handler": [
                {
                  "type": "IOAliasHandler",
                  "annotations": {},
                  "language": "python",
                  "module": "pollination_handlers.outputs.daylight",
                  "function": "read_udi_from_folder",
                  "index": 0
                },
                {
                  "type": "IOAliasHandler",
                  "annotations": {},
                  "language": "csharp",
                  "module": "Pollination.RhinoHandlers",
                  "function": "LoadMeshBasedResultsToRhino",
                  "index": 0
                }
              ]
            }
          ],
          "required": true
        },
        {
          "type": "DAGFolderOutput",
          "annotations": {},
          "name": "udi-lower",
          "description": "Results for the percent of time that is below the lower threshold of useful daylight illuminance.",
          "from": {
            "type": "FolderReference",
            "annotations": {},
            "path": "metrics/udi_lower"
          },
          "alias": [
            {
              "type": "DAGGenericOutputAlias",
              "annotations": {},
              "name": "UDI_low",
              "description": "Values for the percent of time that is below the lower threshold of useful daylight illuminance. These can be plugged into the \"LB Spatial Heatmap\" component along with meshes of the sensor grids to visualize results.",
              "platform": [
                "grasshopper"
              ],
              "handler": [
                {
                  "type": "IOAliasHandler",
                  "annotations": {},
                  "language": "python",
                  "module": "pollination_handlers.outputs.daylight",
                  "function": "read_udi_from_folder",
                  "index": 0
                }
              ]
            },
            {
              "type": "DAGLinkedOutputAlias",
              "annotations": {},
              "name": "UDI low Results",
              "description": null,
              "platform": [
                "rhino"
              ],
              "handler": [
                {
                  "type": "IOAliasHandler",
                  "annotations": {},
                  "language": "python",
                  "module": "pollination_handlers.outputs.daylight",
                  "function": "read_udi_from_folder",
                  "index": 0
                },
                {
                  "type": "IOAliasHandler",
                  "annotations": {},
                  "language": "csharp",
                  "module": "Pollination.RhinoHandlers",
                  "function": "LoadMeshBasedResultsToRhino",
                  "index": 0
                }
              ]
            }
          ],
          "required": true
        },
        {
          "type": "DAGFolderOutput",
          "annotations": {},
          "name": "udi-upper",
          "description": "Results for the percent of time that is above the upper threshold of useful daylight illuminance.",
          "from": {
            "type": "FolderReference",
            "annotations": {},
            "path": "metrics/udi_upper"
          },
          "alias": [
            {
              "type": "DAGGenericOutputAlias",
              "annotations": {},
              "name": "UDI_up",
              "description": "Values for the percent of time that is above the upper threshold of useful daylight illuminance. These can be plugged into the \"LB Spatial Heatmap\" component along with meshes of the sensor grids to visualize results.",
              "platform": [
                "grasshopper"
              ],
              "handler": [
                {
                  "type": "IOAliasHandler",
                  "annotations": {},
                  "language": "python",
                  "module": "pollination_handlers.outputs.daylight",
                  "function": "read_udi_from_folder",
                  "index": 0
                }
              ]
            },
            {
              "type": "DAGLinkedOutputAlias",
              "annotations": {},
              "name": "UDI up Results",
              "description": null,
              "platform": [
                "rhino"
              ],
              "handler": [
                {
                  "type": "IOAliasHandler",
                  "annotations": {},
                  "language": "python",
                  "module": "pollination_handlers.outputs.daylight",
                  "function": "read_udi_from_folder",
                  "index": 0
                },
                {
                  "type": "IOAliasHandler",
                  "annotations": {},
                  "language": "csharp",
                  "module": "Pollination.RhinoHandlers",
                  "function": "LoadMeshBasedResultsToRhino",
                  "index": 0
                }
              ]
            }
          ],
          "required": true
        },
        {
          "type": "DAGFileOutput",
          "annotations": {},
          "name": "visualization",
          "description": "Results visualization in 3D in vtkjs format.",
          "from": {
            "type": "FileReference",
            "annotations": {},
            "path": "visualization/annual_daylight.vtkjs"
          },
          "alias": [],
          "required": true
        }
      ],
      "name": "main",
      "fail_fast": true,
      "tasks": [
        {
          "type": "DAGTask",
          "annotations": {},
          "name": "annual-daylight-raytracing",
          "template": "annual-daylight-ray-tracing",
          "needs": [
            "create-sky-dome",
            "create-octree-with-suns",
            "create-octree",
            "generate-sunpath",
            "create-total-sky",
            "create-direct-sky",
            "create-rad-folder",
            "split-grid-folder"
          ],
          "arguments": [
            {
              "type": "TaskArgument",
              "annotations": {},
              "name": "radiance-parameters",
              "from": {
                "type": "InputReference",
                "annotations": {},
                "variable": "radiance-parameters"
              }
            },
            {
              "type": "TaskPathArgument",
              "annotations": {},
              "name": "octree-file-with-suns",
              "from": {
                "type": "TaskFileReference",
                "annotations": {},
                "name": "create-octree-with-suns",
                "variable": "scene-file"
              },
              "sub_path": null
            },
            {
              "type": "TaskPathArgument",
              "annotations": {},
              "name": "octree-file",
              "from": {
                "type": "TaskFileReference",
                "annotations": {},
                "name": "create-octree",
                "variable": "scene-file"
              },
              "sub_path": null
            },
            {
              "type": "TaskArgument",
              "annotations": {},
              "name": "grid-name",
              "from": {
                "type": "ValueReference",
                "annotations": {},
                "value": "{{item.full_id}}"
              }
            },
            {
              "type": "TaskPathArgument",
              "annotations": {},
              "name": "sensor-grid",
              "from": {
                "type": "TaskFolderReference",
                "annotations": {},
                "name": "split-grid-folder",
                "variable": "output-folder"
              },
              "sub_path": "{{item.full_id}}.pts"
            },
            {
              "type": "TaskArgument",
              "annotations": {},
              "name": "sensor-count",
              "from": {
                "type": "ValueReference",
                "annotations": {},
                "value": "{{item.count}}"
              }
            },
            {
              "type": "TaskPathArgument",
              "annotations": {},
              "name": "sky-matrix",
              "from": {
                "type": "TaskFileReference",
                "annotations": {},
                "name": "create-total-sky",
                "variable": "sky-matrix"
              },
              "sub_path": null
            },
            {
              "type": "TaskPathArgument",
              "annotations": {},
              "name": "sky-dome",
              "from": {
                "type": "TaskFileReference",
                "annotations": {},
                "name": "create-sky-dome",
                "variable": "sky-dome"
              },
              "sub_path": null
            },
            {
              "type": "TaskPathArgument",
              "annotations": {},
              "name": "sky-matrix-direct",
              "from": {
                "type": "TaskFileReference",
                "annotations": {},
                "name": "create-direct-sky",
                "variable": "sky-matrix"
              },
              "sub_path": null
            },
            {
              "type": "TaskPathArgument",
              "annotations": {},
              "name": "sunpath",
              "from": {
                "type": "TaskFileReference",
                "annotations": {},
                "name": "generate-sunpath",
                "variable": "sunpath"
              },
              "sub_path": null
            },
            {
              "type": "TaskPathArgument",
              "annotations": {},
              "name": "sun-modifiers",
              "from": {
                "type": "TaskFileReference",
                "annotations": {},
                "name": "generate-sunpath",
                "variable": "sun-modifiers"
              },
              "sub_path": null
            },
            {
              "type": "TaskPathArgument",
              "annotations": {},
              "name": "bsdfs",
              "from": {
                "type": "TaskFolderReference",
                "annotations": {},
                "name": "create-rad-folder",
                "variable": "bsdf-folder"
              },
              "sub_path": null
            }
          ],
          "loop": {
            "type": "DAGTaskLoop",
            "annotations": {},
            "from": {
              "type": "TaskReference",
              "annotations": {},
              "name": "split-grid-folder",
              "variable": "sensor-grids"
            }
          },
          "sub_folder": "initial_results/{{item.full_id}}",
          "returns": []
        },
        {
          "type": "DAGTask",
          "annotations": {},
          "name": "calculate-annual-metrics",
          "template": "honeybee-radiance/annual-daylight-metrics",
          "needs": [
            "parse-sun-up-hours",
            "annual-daylight-raytracing",
            "restructure-results"
          ],
          "arguments": [
            {
              "type": "TaskPathArgument",
              "annotations": {},
              "name": "folder",
              "from": {
                "type": "ValueFolderReference",
                "annotations": {},
                "path": "results"
              },
              "sub_path": null
            },
            {
              "type": "TaskPathArgument",
              "annotations": {},
              "name": "schedule",
              "from": {
                "type": "InputFileReference",
                "annotations": {},
                "variable": "schedule"
              },
              "sub_path": null
            },
            {
              "type": "TaskArgument",
              "annotations": {},
              "name": "thresholds",
              "from": {
                "type": "InputReference",
                "annotations": {},
                "variable": "thresholds"
              }
            }
          ],
          "loop": null,
          "sub_folder": null,
          "returns": [
            {
              "type": "TaskPathReturn",
              "annotations": {},
              "name": "annual-metrics",
              "description": null,
              "path": "metrics",
              "required": true
            }
          ]
        },
        {
          "type": "DAGTask",
          "annotations": {},
          "name": "convert-metrics-info",
          "template": "honeybee-vtk/config",
          "needs": [
            "calculate-annual-metrics"
          ],
          "arguments": [
            {
              "type": "TaskPathArgument",
              "annotations": {},
              "name": "input-file",
              "from": {
                "type": "TaskFolderReference",
                "annotations": {},
                "name": "calculate-annual-metrics",
                "variable": "annual-metrics"
              },
              "sub_path": "metrics_info.json"
            }
          ],
          "loop": null,
          "sub_folder": null,
          "returns": [
            {
              "type": "TaskPathReturn",
              "annotations": {},
              "name": "config",
              "description": null,
              "path": "metrics/config.json",
              "required": true
            }
          ]
        },
        {
          "type": "DAGTask",
          "annotations": {},
          "name": "create-direct-sky",
          "template": "honeybee-radiance/create-sky-matrix",
          "needs": [],
          "arguments": [
            {
              "type": "TaskArgument",
              "annotations": {},
              "name": "north",
              "from": {
                "type": "InputReference",
                "annotations": {},
                "variable": "north"
              }
            },
            {
              "type": "TaskPathArgument",
              "annotations": {},
              "name": "wea",
              "from": {
                "type": "InputFileReference",
                "annotations": {},
                "variable": "wea"
              },
              "sub_path": null
            },
            {
              "type": "TaskArgument",
              "annotations": {},
              "name": "sky-type",
              "from": {
                "type": "ValueReference",
                "annotations": {},
                "value": "sun-only"
              }
            },
            {
              "type": "TaskArgument",
              "annotations": {},
              "name": "sun-up-hours",
              "from": {
                "type": "ValueReference",
                "annotations": {},
                "value": "sun-up-hours"
              }
            }
          ],
          "loop": null,
          "sub_folder": null,
          "returns": [
            {
              "type": "TaskPathReturn",
              "annotations": {},
              "name": "sky-matrix",
              "description": null,
              "path": "resources/sky_direct.mtx",
              "required": true
            }
          ]
        },
        {
          "type": "DAGTask",
          "annotations": {},
          "name": "create-octree",
          "template": "honeybee-radiance/create-octree",
          "needs": [
            "create-rad-folder"
          ],
          "arguments": [
            {
              "type": "TaskPathArgument",
              "annotations": {},
              "name": "model",
              "from": {
                "type": "TaskFolderReference",
                "annotations": {},
                "name": "create-rad-folder",
                "variable": "model-folder"
              },
              "sub_path": null
            }
          ],
          "loop": null,
          "sub_folder": null,
          "returns": [
            {
              "type": "TaskPathReturn",
              "annotations": {},
              "name": "scene-file",
              "description": null,
              "path": "resources/scene.oct",
              "required": true
            }
          ]
        },
        {
          "type": "DAGTask",
          "annotations": {},
          "name": "create-octree-with-suns",
          "template": "honeybee-radiance/create-octree-with-sky",
          "needs": [
            "generate-sunpath",
            "create-rad-folder"
          ],
          "arguments": [
            {
              "type": "TaskPathArgument",
              "annotations": {},
              "name": "model",
              "from": {
                "type": "TaskFolderReference",
                "annotations": {},
                "name": "create-rad-folder",
                "variable": "model-folder"
              },
              "sub_path": null
            },
            {
              "type": "TaskPathArgument",
              "annotations": {},
              "name": "sky",
              "from": {
                "type": "TaskFileReference",
                "annotations": {},
                "name": "generate-sunpath",
                "variable": "sunpath"
              },
              "sub_path": null
            }
          ],
          "loop": null,
          "sub_folder": null,
          "returns": [
            {
              "type": "TaskPathReturn",
              "annotations": {},
              "name": "scene-file",
              "description": null,
              "path": "resources/scene_with_suns.oct",
              "required": true
            }
          ]
        },
        {
          "type": "DAGTask",
          "annotations": {},
          "name": "create-rad-folder",
          "template": "honeybee-radiance/create-radiance-folder-grid",
          "needs": [],
          "arguments": [
            {
              "type": "TaskPathArgument",
              "annotations": {},
              "name": "input-model",
              "from": {
                "type": "InputFileReference",
                "annotations": {},
                "variable": "model"
              },
              "sub_path": null
            },
            {
              "type": "TaskArgument",
              "annotations": {},
              "name": "grid-filter",
              "from": {
                "type": "InputReference",
                "annotations": {},
                "variable": "grid-filter"
              }
            }
          ],
          "loop": null,
          "sub_folder": null,
          "returns": [
            {
              "type": "TaskPathReturn",
              "annotations": {},
              "name": "model-folder",
              "description": null,
              "path": "model",
              "required": true
            },
            {
              "type": "TaskPathReturn",
              "annotations": {},
              "name": "bsdf-folder",
              "description": null,
              "path": "model/bsdf",
              "required": true
            },
            {
              "type": "TaskPathReturn",
              "annotations": {},
              "name": "sensor-grids-file",
              "description": null,
              "path": "results/grids_info.json",
              "required": true
            },
            {
              "type": "TaskReturn",
              "annotations": {},
              "name": "sensor-grids",
              "description": "Sensor grids information."
            }
          ]
        },
        {
          "type": "DAGTask",
          "annotations": {},
          "name": "create-sky-dome",
          "template": "honeybee-radiance/create-sky-dome",
          "needs": [],
          "arguments": [],
          "loop": null,
          "sub_folder": null,
          "returns": [
            {
              "type": "TaskPathReturn",
              "annotations": {},
              "name": "sky-dome",
              "description": null,
              "path": "resources/sky.dome",
              "required": true
            }
          ]
        },
        {
          "type": "DAGTask",
          "annotations": {},
          "name": "create-total-sky",
          "template": "honeybee-radiance/create-sky-matrix",
          "needs": [],
          "arguments": [
            {
              "type": "TaskArgument",
              "annotations": {},
              "name": "north",
              "from": {
                "type": "InputReference",
                "annotations": {},
                "variable": "north"
              }
            },
            {
              "type": "TaskPathArgument",
              "annotations": {},
              "name": "wea",
              "from": {
                "type": "InputFileReference",
                "annotations": {},
                "variable": "wea"
              },
              "sub_path": null
            },
            {
              "type": "TaskArgument",
              "annotations": {},
              "name": "sun-up-hours",
              "from": {
                "type": "ValueReference",
                "annotations": {},
                "value": "sun-up-hours"
              }
            }
          ],
          "loop": null,
          "sub_folder": null,
          "returns": [
            {
              "type": "TaskPathReturn",
              "annotations": {},
              "name": "sky-matrix",
              "description": null,
              "path": "resources/sky.mtx",
              "required": true
            }
          ]
        },
        {
          "type": "DAGTask",
          "annotations": {},
          "name": "create-vtkjs",
          "template": "honeybee-vtk/translate",
          "needs": [
            "convert-metrics-info"
          ],
          "arguments": [
            {
              "type": "TaskPathArgument",
              "annotations": {},
              "name": "hbjson-file",
              "from": {
                "type": "InputFileReference",
                "annotations": {},
                "variable": "model"
              },
              "sub_path": null
            },
            {
              "type": "TaskArgument",
              "annotations": {},
              "name": "file-type",
              "from": {
                "type": "ValueReference",
                "annotations": {},
                "value": "vtkjs"
              }
            },
            {
              "type": "TaskArgument",
              "annotations": {},
              "name": "grid-options",
              "from": {
                "type": "ValueReference",
                "annotations": {},
                "value": "points"
              }
            },
            {
              "type": "TaskPathArgument",
              "annotations": {},
              "name": "data",
              "from": {
                "type": "ValueFolderReference",
                "annotations": {},
                "path": "metrics"
              },
              "sub_path": null
            }
          ],
          "loop": null,
          "sub_folder": null,
          "returns": [
            {
              "type": "TaskPathReturn",
              "annotations": {},
              "name": "output-file",
              "description": null,
              "path": "visualization/annual_daylight.vtkjs",
              "required": true
            }
          ]
        },
        {
          "type": "DAGTask",
          "annotations": {},
          "name": "generate-sunpath",
          "template": "honeybee-radiance/create-sun-matrix",
          "needs": [],
          "arguments": [
            {
              "type": "TaskArgument",
              "annotations": {},
              "name": "north",
              "from": {
                "type": "InputReference",
                "annotations": {},
                "variable": "north"
              }
            },
            {
              "type": "TaskPathArgument",
              "annotations": {},
              "name": "wea",
              "from": {
                "type": "InputFileReference",
                "annotations": {},
                "variable": "wea"
              },
              "sub_path": null
            }
          ],
          "loop": null,
          "sub_folder": null,
          "returns": [
            {
              "type": "TaskPathReturn",
              "annotations": {},
              "name": "sunpath",
              "description": null,
              "path": "resources/sunpath.mtx",
              "required": true
            },
            {
              "type": "TaskPathReturn",
              "annotations": {},
              "name": "sun-modifiers",
              "description": null,
              "path": "resources/suns.mod",
              "required": true
            }
          ]
        },
        {
          "type": "DAGTask",
          "annotations": {},
          "name": "parse-sun-up-hours",
          "template": "honeybee-radiance/parse-sun-up-hours",
          "needs": [
            "generate-sunpath"
          ],
          "arguments": [
            {
              "type": "TaskPathArgument",
              "annotations": {},
              "name": "sun-modifiers",
              "from": {
                "type": "TaskFileReference",
                "annotations": {},
                "name": "generate-sunpath",
                "variable": "sun-modifiers"
              },
              "sub_path": null
            }
          ],
          "loop": null,
          "sub_folder": null,
          "returns": [
            {
              "type": "TaskPathReturn",
              "annotations": {},
              "name": "sun-up-hours",
              "description": null,
              "path": "results/sun-up-hours.txt",
              "required": true
            }
          ]
        },
        {
          "type": "DAGTask",
          "annotations": {},
          "name": "restructure-results",
          "template": "honeybee-radiance/merge-folder-data",
          "needs": [
            "annual-daylight-raytracing"
          ],
          "arguments": [
            {
              "type": "TaskPathArgument",
              "annotations": {},
              "name": "input-folder",
              "from": {
                "type": "ValueFolderReference",
                "annotations": {},
                "path": "initial_results/final"
              },
              "sub_path": null
            },
            {
              "type": "TaskArgument",
              "annotations": {},
              "name": "extension",
              "from": {
                "type": "ValueReference",
                "annotations": {},
                "value": "ill"
              }
            }
          ],
          "loop": null,
          "sub_folder": null,
          "returns": [
            {
              "type": "TaskPathReturn",
              "annotations": {},
              "name": "output-folder",
              "description": null,
              "path": "results",
              "required": true
            }
          ]
        },
        {
          "type": "DAGTask",
          "annotations": {},
          "name": "split-grid-folder",
          "template": "honeybee-radiance/split-grid-folder",
          "needs": [
            "create-rad-folder"
          ],
          "arguments": [
            {
              "type": "TaskPathArgument",
              "annotations": {},
              "name": "input-folder",
              "from": {
                "type": "TaskFolderReference",
                "annotations": {},
                "name": "create-rad-folder",
                "variable": "model-folder"
              },
              "sub_path": "grid"
            },
            {
              "type": "TaskArgument",
              "annotations": {},
              "name": "cpu-count",
              "from": {
                "type": "InputReference",
                "annotations": {},
                "variable": "cpu-count"
              }
            },
            {
              "type": "TaskArgument",
              "annotations": {},
              "name": "cpus-per-grid",
              "from": {
                "type": "ValueReference",
                "annotations": {},
                "value": 3
              }
            },
            {
              "type": "TaskArgument",
              "annotations": {},
              "name": "min-sensor-count",
              "from": {
                "type": "InputReference",
                "annotations": {},
                "variable": "min-sensor-count"
              }
            }
          ],
          "loop": null,
          "sub_folder": null,
          "returns": [
            {
              "type": "TaskPathReturn",
              "annotations": {},
              "name": "output-folder",
              "description": null,
              "path": "resources/grid",
              "required": true
            },
            {
              "type": "TaskPathReturn",
              "annotations": {},
              "name": "dist-info",
              "description": null,
              "path": "initial_results/final/_redist_info.json",
              "required": true
            },
            {
              "type": "TaskReturn",
              "annotations": {},
              "name": "sensor-grids",
              "description": "Sensor grids information."
            }
          ]
        }
      ]
    }
  ]
}
