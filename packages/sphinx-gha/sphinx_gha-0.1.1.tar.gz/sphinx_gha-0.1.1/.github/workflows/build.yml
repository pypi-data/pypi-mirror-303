# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

name: build
on: [ push, pull_request ]

jobs:
  build:
    name: Build Distribution
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5.1.1
        with:
          python-version: '3.12'

      - name: Install Doc Dependencies
        run: |
          python -m pip install -r docs/requirements.txt .

      - name: Build Test Docs
        run: |
          python -m sphinx docs/ docs/_build -E -W -v

      - name: Install pypa/build
        run: python -m pip install build --user

      - name: Build a binary wheel and source tarball
        run: python -m build --sdist --wheel --outdir dist/

      - uses: actions/upload-artifact@v4
        with:
          name: python-distribution
          path: dist/
          compression-level: 0 # already compressed

  publish-pypi:
    name: Deploy to PyPI
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    needs: [ build ]
    runs-on: ubuntu-22.04
    environment:
      name: Publish
      url: https://pypi.org/project/sphinx-gha/${{ github.ref_name }}
    permissions:
      id-token: write
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: python-distribution
          path: dist

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

  publish-github:
    name: Deploy to Github
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    needs: [ build ]
    runs-on: ubuntu-22.04
    environment:
      name: Publish
      url: https://github.com/${{ github.repository }}/releases/tag/${{ github.ref_name }}
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: python-distribution
          path: dist

      - name: Get Changelog Information
        id: yaclog-show
        uses: drewcassidy/yaclog@1.5.0

      - name: Publish to Github
        run: >
          gh release create ${{ github.ref_name }}
          --notes-file "${{ steps.yaclog-show.outputs.body-file }}"
          --title "${{ steps.yaclog-show.outputs.name }}"
          dist/*
        env:
          GH_TOKEN: ${{ github.token }}