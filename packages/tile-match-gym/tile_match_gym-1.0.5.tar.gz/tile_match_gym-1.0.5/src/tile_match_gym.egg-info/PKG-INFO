Metadata-Version: 2.1
Name: tile-match-gym
Version: 1.0.5
Summary: A set of reinforcement learning environments for tile matching games, consistent with the OpenAI Gymnasium API.
Author: James Elson
Author-email: Akshil Patel <akshilpatel11@gmail.com>
License: Copyright (c) 2023, Akshil Patel
        Copyright (c) 2023, James Elson
        
        All rights reserved.
        
        Redistribution and use in source and binary forms, with or without modification,
        are permitted provided that the following conditions are met:
        
            * Redistributions of source code must retain the above copyright notice,
              this list of conditions and the following disclaimer.
            * Redistributions in binary form must reproduce the above copyright notice,
              this list of conditions and the following disclaimer in the documentation
              and/or other materials provided with the distribution.
            * Neither the name of tile-match-gym nor the names of its contributors
              may be used to endorse or promote products derived from this software
              without specific prior written permission.
        
        THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
        "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
        LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
        A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
        CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
        EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
        PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
        PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
        LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
        NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
        SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
Project-URL: Homepage, https://github.com/akshilpatel/tile-match-gym
Project-URL: Issues, https://github.com/akshilpatel/tile-match-gym/issues
Keywords: reinforcement-learning,gym,tile-matching,games,rl,openai-gym,gymnasium,rl-environment
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: BSD License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Topic :: Scientific/Engineering :: Artificial Intelligence
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: numpy>=1.24.3
Requires-Dist: gymnasium>=1.0.0
Requires-Dist: numba==0.59.1
Requires-Dist: pygame==2.6.1
Provides-Extra: testing
Requires-Dist: pytest>=7.4.0; extra == "testing"

# Tile Matching Reinforcement Learning Environments

Welcome to the Reinforcement Learning Environments for Tile Matching Games repository! Here you can find a collection of tile matching game environments (like Bejeweled or Candy Crush), poised to push reinforcement learning research forwards.

This genre of games is characterised by the following features, which we find useful for reinforcement learning research:

- Large action spaces
- Intuitive action hierarchies
- Procedurally generated levels
- Structured complex stochasticity in transition dynamics

## Installation

You can install the package via pip:

```pip install tile-match-gym```

## Example Usage

We follow the the Farama Foundation Gymnasium API:

```
from tile_match_gym.tile_match_env import TileMatchEnv

env = TileMatchEnv(
  num_rows=10, 
  num_cols=10, 
  num_colours=4, 
  num_moves=30, 
  colourless_specials=["cookie"], 
  colour_specials=["vertical_laser", "horizontal_laser", "bomb"], 
  seed=2
  render_mode="human",
  )

obs, _ = env.reset()

while True:
    action = env.action_space.sample()
    next_obs, reward, done, truncated, info = env.step(action)
    env.render()
    if done:
        break
    else:
      obs = next_obs
```

## Citation

We'd love it if you use our package for your research! If you do use code from this repository please cite us as below:

```
@software{tile_match_gym,
  author = {Patel, Akshil and Elson, James},
  title = {{Tile Matching Game Reinforcement Learning Environments}},
  url = {https://github.com/akshilpatel/tile-match-gym},
  version = {1.0.5},
  year = {2023}
  }
```
