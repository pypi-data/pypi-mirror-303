function t(t){return function(){return t}}const i=Math.PI,s=2*i,h=1e-6,n=s-h;function e(t){this._+=t[0];for(let i=1,s=t.length;i<s;++i)this._+=arguments[i]+t[i]}class _{constructor(t){this._x0=this._y0=this._x1=this._y1=null,this._="",this._append=null==t?e:function(t){let i=Math.floor(t);if(!(i>=0))throw new Error(`invalid digits: ${t}`);if(i>15)return e;const s=10**i;return function(t){this._+=t[0];for(let i=1,h=t.length;i<h;++i)this._+=Math.round(arguments[i]*s)/s+t[i]}}(t)}moveTo(t,i){this._append`M${this._x0=this._x1=+t},${this._y0=this._y1=+i}`}closePath(){null!==this._x1&&(this._x1=this._x0,this._y1=this._y0,this._append`Z`)}lineTo(t,i){this._append`L${this._x1=+t},${this._y1=+i}`}quadraticCurveTo(t,i,s,h){this._append`Q${+t},${+i},${this._x1=+s},${this._y1=+h}`}bezierCurveTo(t,i,s,h,n,e){this._append`C${+t},${+i},${+s},${+h},${this._x1=+n},${this._y1=+e}`}arcTo(t,s,n,e,_){if(t=+t,s=+s,n=+n,e=+e,(_=+_)<0)throw new Error(`negative radius: ${_}`);let r=this._x1,$=this._y1,a=n-t,o=e-s,p=r-t,l=$-s,u=p*p+l*l;if(null===this._x1)this._append`M${this._x1=t},${this._y1=s}`;else if(u>h)if(Math.abs(l*a-o*p)>h&&_){let d=n-r,c=e-$,f=a*a+o*o,x=d*d+c*c,y=Math.sqrt(f),M=Math.sqrt(u),w=_*Math.tan((i-Math.acos((f+u-x)/(2*y*M)))/2),g=w/M,v=w/y;Math.abs(g-1)>h&&this._append`L${t+g*p},${s+g*l}`,this._append`A${_},${_},0,0,${+(l*d>p*c)},${this._x1=t+v*a},${this._y1=s+v*o}`}else this._append`L${this._x1=t},${this._y1=s}`;else;}arc(t,e,_,r,$,a){if(t=+t,e=+e,a=!!a,(_=+_)<0)throw new Error(`negative radius: ${_}`);let o=_*Math.cos(r),p=_*Math.sin(r),l=t+o,u=e+p,d=1^a,c=a?r-$:$-r;null===this._x1?this._append`M${l},${u}`:(Math.abs(this._x1-l)>h||Math.abs(this._y1-u)>h)&&this._append`L${l},${u}`,_&&(c<0&&(c=c%s+s),c>n?this._append`A${_},${_},0,1,${d},${t-o},${e-p}A${_},${_},0,1,${d},${this._x1=l},${this._y1=u}`:c>h&&this._append`A${_},${_},0,${+(c>=i)},${d},${this._x1=t+_*Math.cos($)},${this._y1=e+_*Math.sin($)}`)}rect(t,i,s,h){this._append`M${this._x0=this._x1=+t},${this._y0=this._y1=+i}h${s=+s}v${+h}h${-s}Z`}toString(){return this._}}function r(){return new _}function $(t){let i=3;return t.digits=function(s){if(!arguments.length)return i;if(null==s)i=null;else{const t=Math.floor(s);if(!(t>=0))throw new RangeError(`invalid digits: ${s}`);i=t}return t},()=>new _(i)}r.prototype=_.prototype;export{t as c,r as p,$ as w};
