import{o as t,c as e,d as a,N as r,l as n,x as i}from"./mermaid-2HP-yomv.js";import{s}from"./transform-DazP_m1g.js";import{c as l}from"./createText-ca0c5216-pz9VDc5-.js";import{l as o}from"./line-BfNOlI_-.js";import{c as d}from"./step-CPXY0cSE.js";const h={extension:(t,e,a)=>{n.trace("Making markers for ",a),t.append("defs").append("marker").attr("id",a+"_"+e+"-extensionStart").attr("class","marker extension "+e).attr("refX",18).attr("refY",7).attr("markerWidth",190).attr("markerHeight",240).attr("orient","auto").append("path").attr("d","M 1,7 L18,13 V 1 Z"),t.append("defs").append("marker").attr("id",a+"_"+e+"-extensionEnd").attr("class","marker extension "+e).attr("refX",1).attr("refY",7).attr("markerWidth",20).attr("markerHeight",28).attr("orient","auto").append("path").attr("d","M 1,1 V 13 L18,7 Z")},composition:(t,e,a)=>{t.append("defs").append("marker").attr("id",a+"_"+e+"-compositionStart").attr("class","marker composition "+e).attr("refX",18).attr("refY",7).attr("markerWidth",190).attr("markerHeight",240).attr("orient","auto").append("path").attr("d","M 18,7 L9,13 L1,7 L9,1 Z"),t.append("defs").append("marker").attr("id",a+"_"+e+"-compositionEnd").attr("class","marker composition "+e).attr("refX",1).attr("refY",7).attr("markerWidth",20).attr("markerHeight",28).attr("orient","auto").append("path").attr("d","M 18,7 L9,13 L1,7 L9,1 Z")},aggregation:(t,e,a)=>{t.append("defs").append("marker").attr("id",a+"_"+e+"-aggregationStart").attr("class","marker aggregation "+e).attr("refX",18).attr("refY",7).attr("markerWidth",190).attr("markerHeight",240).attr("orient","auto").append("path").attr("d","M 18,7 L9,13 L1,7 L9,1 Z"),t.append("defs").append("marker").attr("id",a+"_"+e+"-aggregationEnd").attr("class","marker aggregation "+e).attr("refX",1).attr("refY",7).attr("markerWidth",20).attr("markerHeight",28).attr("orient","auto").append("path").attr("d","M 18,7 L9,13 L1,7 L9,1 Z")},dependency:(t,e,a)=>{t.append("defs").append("marker").attr("id",a+"_"+e+"-dependencyStart").attr("class","marker dependency "+e).attr("refX",6).attr("refY",7).attr("markerWidth",190).attr("markerHeight",240).attr("orient","auto").append("path").attr("d","M 5,7 L9,13 L1,7 L9,1 Z"),t.append("defs").append("marker").attr("id",a+"_"+e+"-dependencyEnd").attr("class","marker dependency "+e).attr("refX",13).attr("refY",7).attr("markerWidth",20).attr("markerHeight",28).attr("orient","auto").append("path").attr("d","M 18,7 L9,13 L14,7 L9,1 Z")},lollipop:(t,e,a)=>{t.append("defs").append("marker").attr("id",a+"_"+e+"-lollipopStart").attr("class","marker lollipop "+e).attr("refX",13).attr("refY",7).attr("markerWidth",190).attr("markerHeight",240).attr("orient","auto").append("circle").attr("stroke","black").attr("fill","transparent").attr("cx",7).attr("cy",7).attr("r",6),t.append("defs").append("marker").attr("id",a+"_"+e+"-lollipopEnd").attr("class","marker lollipop "+e).attr("refX",1).attr("refY",7).attr("markerWidth",190).attr("markerHeight",240).attr("orient","auto").append("circle").attr("stroke","black").attr("fill","transparent").attr("cx",7).attr("cy",7).attr("r",6)},point:(t,e,a)=>{t.append("marker").attr("id",a+"_"+e+"-pointEnd").attr("class","marker "+e).attr("viewBox","0 0 10 10").attr("refX",6).attr("refY",5).attr("markerUnits","userSpaceOnUse").attr("markerWidth",12).attr("markerHeight",12).attr("orient","auto").append("path").attr("d","M 0 0 L 10 5 L 0 10 z").attr("class","arrowMarkerPath").style("stroke-width",1).style("stroke-dasharray","1,0"),t.append("marker").attr("id",a+"_"+e+"-pointStart").attr("class","marker "+e).attr("viewBox","0 0 10 10").attr("refX",4.5).attr("refY",5).attr("markerUnits","userSpaceOnUse").attr("markerWidth",12).attr("markerHeight",12).attr("orient","auto").append("path").attr("d","M 0 5 L 10 10 L 10 0 z").attr("class","arrowMarkerPath").style("stroke-width",1).style("stroke-dasharray","1,0")},circle:(t,e,a)=>{t.append("marker").attr("id",a+"_"+e+"-circleEnd").attr("class","marker "+e).attr("viewBox","0 0 10 10").attr("refX",11).attr("refY",5).attr("markerUnits","userSpaceOnUse").attr("markerWidth",11).attr("markerHeight",11).attr("orient","auto").append("circle").attr("cx","5").attr("cy","5").attr("r","5").attr("class","arrowMarkerPath").style("stroke-width",1).style("stroke-dasharray","1,0"),t.append("marker").attr("id",a+"_"+e+"-circleStart").attr("class","marker "+e).attr("viewBox","0 0 10 10").attr("refX",-1).attr("refY",5).attr("markerUnits","userSpaceOnUse").attr("markerWidth",11).attr("markerHeight",11).attr("orient","auto").append("circle").attr("cx","5").attr("cy","5").attr("r","5").attr("class","arrowMarkerPath").style("stroke-width",1).style("stroke-dasharray","1,0")},cross:(t,e,a)=>{t.append("marker").attr("id",a+"_"+e+"-crossEnd").attr("class","marker cross "+e).attr("viewBox","0 0 11 11").attr("refX",12).attr("refY",5.2).attr("markerUnits","userSpaceOnUse").attr("markerWidth",11).attr("markerHeight",11).attr("orient","auto").append("path").attr("d","M 1,1 l 9,9 M 10,1 l -9,9").attr("class","arrowMarkerPath").style("stroke-width",2).style("stroke-dasharray","1,0"),t.append("marker").attr("id",a+"_"+e+"-crossStart").attr("class","marker cross "+e).attr("viewBox","0 0 11 11").attr("refX",-1).attr("refY",5.2).attr("markerUnits","userSpaceOnUse").attr("markerWidth",11).attr("markerHeight",11).attr("orient","auto").append("path").attr("d","M 1,1 l 9,9 M 10,1 l -9,9").attr("class","arrowMarkerPath").style("stroke-width",2).style("stroke-dasharray","1,0")},barb:(t,e,a)=>{t.append("defs").append("marker").attr("id",a+"_"+e+"-barbEnd").attr("refX",19).attr("refY",7).attr("markerWidth",20).attr("markerHeight",14).attr("markerUnits","strokeWidth").attr("orient","auto").append("path").attr("d","M 19,7 L9,13 L14,7 L9,1 Z")}},c=(t,e,a,r)=>{e.forEach((e=>{h[e](t,a,r)}))};const y=(a,i,l,o)=>{let d=a||"";if("object"==typeof d&&(d=d[0]),t(e().flowchart.htmlLabels)){d=d.replace(/\\n|\n/g,"<br />"),n.debug("vertexText"+d);let t=function(t){const e=s(document.createElementNS("http://www.w3.org/2000/svg","foreignObject")),a=e.append("xhtml:div"),r=t.label,n=t.isNode?"nodeLabel":"edgeLabel";var i,l;return a.html('<span class="'+n+'" '+(t.labelStyle?'style="'+t.labelStyle+'"':"")+">"+r+"</span>"),i=a,(l=t.labelStyle)&&i.attr("style",l),a.style("display","inline-block"),a.style("white-space","nowrap"),a.attr("xmlns","http://www.w3.org/1999/xhtml"),e.node()}({isNode:o,label:r(d).replace(/fa[blrs]?:fa-[\w-]+/g,(t=>`<i class='${t.replace(":"," ")}'></i>`)),labelStyle:i.replace("fill:","color:")});return t}{const t=document.createElementNS("http://www.w3.org/2000/svg","text");t.setAttribute("style",i.replace("color:","fill:"));let e=[];e="string"==typeof d?d.split(/\\n|\n|<br\s*\/?>/gi):Array.isArray(d)?d:[];for(const a of e){const e=document.createElementNS("http://www.w3.org/2000/svg","tspan");e.setAttributeNS("http://www.w3.org/XML/1998/namespace","xml:space","preserve"),e.setAttribute("dy","1em"),e.setAttribute("x","0"),l?e.setAttribute("class","title-row"):e.setAttribute("class","row"),e.textContent=a.trim(),t.appendChild(e)}return t}},p=async(n,i,o,d)=>{let h;const c=i.useHtmlLabels||t(e().flowchart.htmlLabels);h=o||"node default";const p=n.insert("g").attr("class",h).attr("id",i.domId||i.id),g=p.insert("g").attr("class","label").attr("style",i.labelStyle);let x;x=void 0===i.labelText?"":"string"==typeof i.labelText?i.labelText:i.labelText[0];const f=g.node();let u;u="markdown"===i.labelType?l(g,a(r(x),e()),{useHtmlLabels:c,width:i.width||e().flowchart.wrappingWidth,classes:"markdown-node-label"}):f.appendChild(y(a(r(x),e()),i.labelStyle,!1,d));let w=u.getBBox();const b=i.padding/2;if(t(e().flowchart.htmlLabels)){const t=u.children[0],a=s(u),r=t.getElementsByTagName("img");if(r){const t=""===x.replace(/<img[^>]*>/g,"").trim();await Promise.all([...r].map((a=>new Promise((r=>{function n(){if(a.style.display="flex",a.style.flexDirection="column",t){const t=e().fontSize?e().fontSize:window.getComputedStyle(document.body).fontSize,r=5,n=parseInt(t,10)*r+"px";a.style.minWidth=n,a.style.maxWidth=n}else a.style.width="100%";r(a)}setTimeout((()=>{a.complete&&n()})),a.addEventListener("error",n),a.addEventListener("load",n)})))))}w=t.getBoundingClientRect(),a.attr("width",w.width),a.attr("height",w.height)}return c?g.attr("transform","translate("+-w.width/2+", "+-w.height/2+")"):g.attr("transform","translate(0, "+-w.height/2+")"),i.centerLabel&&g.attr("transform","translate("+-w.width/2+", "+-w.height/2+")"),g.insert("rect",":first-child"),{shapeSvg:p,bbox:w,halfPadding:b,label:g}},g=(t,e)=>{const a=e.node().getBBox();t.width=a.width,t.height=a.height};function x(t,e,a,r){return t.insert("polygon",":first-child").attr("points",r.map((function(t){return t.x+","+t.y})).join(" ")).attr("class","label-container").attr("transform","translate("+-e/2+","+a/2+")")}function f(t,e,a,r){var n=t.x,i=t.y,s=n-r.x,l=i-r.y,o=Math.sqrt(e*e*l*l+a*a*s*s),d=Math.abs(e*a*s/o);r.x<n&&(d=-d);var h=Math.abs(e*a*l/o);return r.y<i&&(h=-h),{x:n+d,y:i+h}}function u(t,e,a,r){var n,i,s,l,o,d,h,c,y,p,g,x,f;if(n=e.y-t.y,s=t.x-e.x,o=e.x*t.y-t.x*e.y,y=n*a.x+s*a.y+o,p=n*r.x+s*r.y+o,!(0!==y&&0!==p&&w(y,p)||(i=r.y-a.y,l=a.x-r.x,d=r.x*a.y-a.x*r.y,h=i*t.x+l*t.y+d,c=i*e.x+l*e.y+d,0!==h&&0!==c&&w(h,c)||0==(g=n*l-i*s))))return x=Math.abs(g/2),{x:(f=s*d-l*o)<0?(f-x)/g:(f+x)/g,y:(f=i*o-n*d)<0?(f-x)/g:(f+x)/g}}function w(t,e){return t*e>0}const b=(t,e)=>{var a,r,n=t.x,i=t.y,s=e.x-n,l=e.y-i,o=t.width/2,d=t.height/2;return Math.abs(l)*o>Math.abs(s)*d?(l<0&&(d=-d),a=0===l?0:d*s/l,r=d):(s<0&&(o=-o),a=o,r=0===s?0:o*l/s),{x:n+a,y:i+r}},m={node:function(t,e){return t.intersect(e)},circle:function(t,e,a){return f(t,e,e,a)},ellipse:f,polygon:function(t,e,a){var r=t.x,n=t.y,i=[],s=Number.POSITIVE_INFINITY,l=Number.POSITIVE_INFINITY;"function"==typeof e.forEach?e.forEach((function(t){s=Math.min(s,t.x),l=Math.min(l,t.y)})):(s=Math.min(s,e.x),l=Math.min(l,e.y));for(var o=r-t.width/2-s,d=n-t.height/2-l,h=0;h<e.length;h++){var c=e[h],y=e[h<e.length-1?h+1:0],p=u(t,a,{x:o+c.x,y:d+c.y},{x:o+y.x,y:d+y.y});p&&i.push(p)}return i.length?(i.length>1&&i.sort((function(t,e){var r=t.x-a.x,n=t.y-a.y,i=Math.sqrt(r*r+n*n),s=e.x-a.x,l=e.y-a.y,o=Math.sqrt(s*s+l*l);return i<o?-1:i===o?0:1})),i[0]):t},rect:b},k=(t,e,a)=>{const r=(t=>{const e=new Set;for(const a of t)switch(a){case"x":e.add("right"),e.add("left");break;case"y":e.add("up"),e.add("down");break;default:e.add(a)}return e})(t),n=e.height+2*a.padding,i=n/2,s=e.width+2*i+a.padding,l=a.padding/2;return r.has("right")&&r.has("left")&&r.has("up")&&r.has("down")?[{x:0,y:0},{x:i,y:0},{x:s/2,y:2*l},{x:s-i,y:0},{x:s,y:0},{x:s,y:-n/3},{x:s+2*l,y:-n/2},{x:s,y:-2*n/3},{x:s,y:-n},{x:s-i,y:-n},{x:s/2,y:-n-2*l},{x:i,y:-n},{x:0,y:-n},{x:0,y:-2*n/3},{x:-2*l,y:-n/2},{x:0,y:-n/3}]:r.has("right")&&r.has("left")&&r.has("up")?[{x:i,y:0},{x:s-i,y:0},{x:s,y:-n/2},{x:s-i,y:-n},{x:i,y:-n},{x:0,y:-n/2}]:r.has("right")&&r.has("left")&&r.has("down")?[{x:0,y:0},{x:i,y:-n},{x:s-i,y:-n},{x:s,y:0}]:r.has("right")&&r.has("up")&&r.has("down")?[{x:0,y:0},{x:s,y:-i},{x:s,y:-n+i},{x:0,y:-n}]:r.has("left")&&r.has("up")&&r.has("down")?[{x:s,y:0},{x:0,y:-i},{x:0,y:-n+i},{x:s,y:-n}]:r.has("right")&&r.has("left")?[{x:i,y:0},{x:i,y:-l},{x:s-i,y:-l},{x:s-i,y:0},{x:s,y:-n/2},{x:s-i,y:-n},{x:s-i,y:-n+l},{x:i,y:-n+l},{x:i,y:-n},{x:0,y:-n/2}]:r.has("up")&&r.has("down")?[{x:s/2,y:0},{x:0,y:-l},{x:i,y:-l},{x:i,y:-n+l},{x:0,y:-n+l},{x:s/2,y:-n},{x:s,y:-n+l},{x:s-i,y:-n+l},{x:s-i,y:-l},{x:s,y:-l}]:r.has("right")&&r.has("up")?[{x:0,y:0},{x:s,y:-i},{x:0,y:-n}]:r.has("right")&&r.has("down")?[{x:0,y:0},{x:s,y:0},{x:0,y:-n}]:r.has("left")&&r.has("up")?[{x:s,y:0},{x:0,y:-i},{x:s,y:-n}]:r.has("left")&&r.has("down")?[{x:s,y:0},{x:0,y:0},{x:s,y:-n}]:r.has("right")?[{x:i,y:-l},{x:i,y:-l},{x:s-i,y:-l},{x:s-i,y:0},{x:s,y:-n/2},{x:s-i,y:-n},{x:s-i,y:-n+l},{x:i,y:-n+l},{x:i,y:-n+l}]:r.has("left")?[{x:i,y:0},{x:i,y:-l},{x:s-i,y:-l},{x:s-i,y:-n+l},{x:i,y:-n+l},{x:i,y:-n},{x:0,y:-n/2}]:r.has("up")?[{x:i,y:-l},{x:i,y:-n+l},{x:0,y:-n+l},{x:s/2,y:-n},{x:s,y:-n+l},{x:s-i,y:-n+l},{x:s-i,y:-l}]:r.has("down")?[{x:s/2,y:0},{x:0,y:-l},{x:i,y:-l},{x:i,y:-n+l},{x:s-i,y:-n+l},{x:s-i,y:-l},{x:s,y:-l}]:[{x:0,y:0}]},L=t=>t?" "+t:"",S=(t,e)=>`node default${L(t.classes)} ${L(t.class)}`,v=async(t,e)=>{const{shapeSvg:a,bbox:r}=await p(t,e,S(e),!0),i=r.width+e.padding+(r.height+e.padding),s=[{x:i/2,y:0},{x:i,y:-i/2},{x:i/2,y:-i},{x:0,y:-i/2}];n.info("Question main (Circle)");const l=x(a,i,i,s);return l.attr("style",e.style),g(e,l),e.intersect=function(t){return n.warn("Intersect called"),m.polygon(e,s,t)},a};function M(t,e,a,r){const i=[],s=t=>{i.push(t,0)},l=t=>{i.push(0,t)};e.includes("t")?(n.debug("add top border"),s(a)):l(a),e.includes("r")?(n.debug("add right border"),s(r)):l(r),e.includes("b")?(n.debug("add bottom border"),s(a)):l(a),e.includes("l")?(n.debug("add left border"),s(r)):l(r),t.attr("stroke-dasharray",i.join(" "))}const T=(t,e,a)=>{const r=t.insert("g").attr("class","node default").attr("id",e.domId||e.id);let n=70,i=10;"LR"===a&&(n=10,i=70);const s=r.append("rect").attr("x",-1*n/2).attr("y",-1*i/2).attr("width",n).attr("height",i).attr("class","fork-join");return g(e,s),e.height=e.height+e.padding/2,e.width=e.width+e.padding/2,e.intersect=function(t){return m.rect(e,t)},r},B={rhombus:v,composite:async(t,e)=>{const{shapeSvg:a,bbox:r,halfPadding:i}=await p(t,e,"node "+e.classes,!0),s=a.insert("rect",":first-child"),l=e.positioned?e.width:r.width+e.padding,o=e.positioned?e.height:r.height+e.padding,d=e.positioned?-l/2:-r.width/2-i,h=e.positioned?-o/2:-r.height/2-i;if(s.attr("class","basic cluster composite label-container").attr("style",e.style).attr("rx",e.rx).attr("ry",e.ry).attr("x",d).attr("y",h).attr("width",l).attr("height",o),e.props){const t=new Set(Object.keys(e.props));e.props.borders&&(M(s,e.props.borders,l,o),t.delete("borders")),t.forEach((t=>{n.warn(`Unknown node property ${t}`)}))}return g(e,s),e.intersect=function(t){return m.rect(e,t)},a},question:v,rect:async(t,e)=>{const{shapeSvg:a,bbox:r,halfPadding:i}=await p(t,e,"node "+e.classes+" "+e.class,!0),s=a.insert("rect",":first-child"),l=e.positioned?e.width:r.width+e.padding,o=e.positioned?e.height:r.height+e.padding,d=e.positioned?-l/2:-r.width/2-i,h=e.positioned?-o/2:-r.height/2-i;if(s.attr("class","basic label-container").attr("style",e.style).attr("rx",e.rx).attr("ry",e.ry).attr("x",d).attr("y",h).attr("width",l).attr("height",o),e.props){const t=new Set(Object.keys(e.props));e.props.borders&&(M(s,e.props.borders,l,o),t.delete("borders")),t.forEach((t=>{n.warn(`Unknown node property ${t}`)}))}return g(e,s),e.intersect=function(t){return m.rect(e,t)},a},labelRect:async(t,e)=>{const{shapeSvg:a}=await p(t,e,"label",!0);n.trace("Classes = ",e.class);const r=a.insert("rect",":first-child");if(r.attr("width",0).attr("height",0),a.attr("class","label edgeLabel"),e.props){const t=new Set(Object.keys(e.props));e.props.borders&&(M(r,e.props.borders,0,0),t.delete("borders")),t.forEach((t=>{n.warn(`Unknown node property ${t}`)}))}return g(e,r),e.intersect=function(t){return m.rect(e,t)},a},rectWithTitle:(a,r)=>{let i;i=r.classes?"node "+r.classes:"node default";const l=a.insert("g").attr("class",i).attr("id",r.domId||r.id),o=l.insert("rect",":first-child"),d=l.insert("line"),h=l.insert("g").attr("class","label"),c=r.labelText.flat?r.labelText.flat():r.labelText;let p="";p="object"==typeof c?c[0]:c,n.info("Label text abc79",p,c,"object"==typeof c);const x=h.node().appendChild(y(p,r.labelStyle,!0,!0));let f={width:0,height:0};if(t(e().flowchart.htmlLabels)){const t=x.children[0],e=s(x);f=t.getBoundingClientRect(),e.attr("width",f.width),e.attr("height",f.height)}n.info("Text 2",c);const u=c.slice(1,c.length);let w=x.getBBox();const b=h.node().appendChild(y(u.join?u.join("<br/>"):u,r.labelStyle,!0,!0));if(t(e().flowchart.htmlLabels)){const t=b.children[0],e=s(b);f=t.getBoundingClientRect(),e.attr("width",f.width),e.attr("height",f.height)}const k=r.padding/2;return s(b).attr("transform","translate( "+(f.width>w.width?0:(w.width-f.width)/2)+", "+(w.height+k+5)+")"),s(x).attr("transform","translate( "+(f.width<w.width?0:-(w.width-f.width)/2)+", 0)"),f=h.node().getBBox(),h.attr("transform","translate("+-f.width/2+", "+(-f.height/2-k+3)+")"),o.attr("class","outer title-state").attr("x",-f.width/2-k).attr("y",-f.height/2-k).attr("width",f.width+r.padding).attr("height",f.height+r.padding),d.attr("class","divider").attr("x1",-f.width/2-k).attr("x2",f.width/2+k).attr("y1",-f.height/2-k+w.height+k).attr("y2",-f.height/2-k+w.height+k),g(r,o),r.intersect=function(t){return m.rect(r,t)},l},choice:(t,e)=>{const a=t.insert("g").attr("class","node default").attr("id",e.domId||e.id),r=[{x:0,y:14},{x:14,y:0},{x:0,y:-14},{x:-14,y:0}];return a.insert("polygon",":first-child").attr("points",r.map((function(t){return t.x+","+t.y})).join(" ")).attr("class","state-start").attr("r",7).attr("width",28).attr("height",28),e.width=28,e.height=28,e.intersect=function(t){return m.circle(e,14,t)},a},circle:async(t,e)=>{const{shapeSvg:a,bbox:r,halfPadding:i}=await p(t,e,S(e),!0),s=a.insert("circle",":first-child");return s.attr("style",e.style).attr("rx",e.rx).attr("ry",e.ry).attr("r",r.width/2+i).attr("width",r.width+e.padding).attr("height",r.height+e.padding),n.info("Circle main"),g(e,s),e.intersect=function(t){return n.info("Circle intersect",e,r.width/2+i,t),m.circle(e,r.width/2+i,t)},a},doublecircle:async(t,e)=>{const{shapeSvg:a,bbox:r,halfPadding:i}=await p(t,e,S(e),!0),s=a.insert("g",":first-child"),l=s.insert("circle"),o=s.insert("circle");return s.attr("class",e.class),l.attr("style",e.style).attr("rx",e.rx).attr("ry",e.ry).attr("r",r.width/2+i+5).attr("width",r.width+e.padding+10).attr("height",r.height+e.padding+10),o.attr("style",e.style).attr("rx",e.rx).attr("ry",e.ry).attr("r",r.width/2+i).attr("width",r.width+e.padding).attr("height",r.height+e.padding),n.info("DoubleCircle main"),g(e,l),e.intersect=function(t){return n.info("DoubleCircle intersect",e,r.width/2+i+5,t),m.circle(e,r.width/2+i+5,t)},a},stadium:async(t,e)=>{const{shapeSvg:a,bbox:r}=await p(t,e,S(e),!0),n=r.height+e.padding,i=r.width+n/4+e.padding,s=a.insert("rect",":first-child").attr("style",e.style).attr("rx",n/2).attr("ry",n/2).attr("x",-i/2).attr("y",-n/2).attr("width",i).attr("height",n);return g(e,s),e.intersect=function(t){return m.rect(e,t)},a},hexagon:async(t,e)=>{const{shapeSvg:a,bbox:r}=await p(t,e,S(e),!0),n=r.height+e.padding,i=n/4,s=r.width+2*i+e.padding,l=[{x:i,y:0},{x:s-i,y:0},{x:s,y:-n/2},{x:s-i,y:-n},{x:i,y:-n},{x:0,y:-n/2}],o=x(a,s,n,l);return o.attr("style",e.style),g(e,o),e.intersect=function(t){return m.polygon(e,l,t)},a},block_arrow:async(t,e)=>{const{shapeSvg:a,bbox:r}=await p(t,e,void 0,!0),n=r.height+2*e.padding,i=n/2,s=r.width+2*i+e.padding,l=k(e.directions,r,e),o=x(a,s,n,l);return o.attr("style",e.style),g(e,o),e.intersect=function(t){return m.polygon(e,l,t)},a},rect_left_inv_arrow:async(t,e)=>{const{shapeSvg:a,bbox:r}=await p(t,e,S(e),!0),n=r.width+e.padding,i=r.height+e.padding,s=[{x:-i/2,y:0},{x:n,y:0},{x:n,y:-i},{x:-i/2,y:-i},{x:0,y:-i/2}];return x(a,n,i,s).attr("style",e.style),e.width=n+i,e.height=i,e.intersect=function(t){return m.polygon(e,s,t)},a},lean_right:async(t,e)=>{const{shapeSvg:a,bbox:r}=await p(t,e,S(e),!0),n=r.width+e.padding,i=r.height+e.padding,s=[{x:-2*i/6,y:0},{x:n-i/6,y:0},{x:n+2*i/6,y:-i},{x:i/6,y:-i}],l=x(a,n,i,s);return l.attr("style",e.style),g(e,l),e.intersect=function(t){return m.polygon(e,s,t)},a},lean_left:async(t,e)=>{const{shapeSvg:a,bbox:r}=await p(t,e,S(e),!0),n=r.width+e.padding,i=r.height+e.padding,s=[{x:2*i/6,y:0},{x:n+i/6,y:0},{x:n-2*i/6,y:-i},{x:-i/6,y:-i}],l=x(a,n,i,s);return l.attr("style",e.style),g(e,l),e.intersect=function(t){return m.polygon(e,s,t)},a},trapezoid:async(t,e)=>{const{shapeSvg:a,bbox:r}=await p(t,e,S(e),!0),n=r.width+e.padding,i=r.height+e.padding,s=[{x:-2*i/6,y:0},{x:n+2*i/6,y:0},{x:n-i/6,y:-i},{x:i/6,y:-i}],l=x(a,n,i,s);return l.attr("style",e.style),g(e,l),e.intersect=function(t){return m.polygon(e,s,t)},a},inv_trapezoid:async(t,e)=>{const{shapeSvg:a,bbox:r}=await p(t,e,S(e),!0),n=r.width+e.padding,i=r.height+e.padding,s=[{x:i/6,y:0},{x:n-i/6,y:0},{x:n+2*i/6,y:-i},{x:-2*i/6,y:-i}],l=x(a,n,i,s);return l.attr("style",e.style),g(e,l),e.intersect=function(t){return m.polygon(e,s,t)},a},rect_right_inv_arrow:async(t,e)=>{const{shapeSvg:a,bbox:r}=await p(t,e,S(e),!0),n=r.width+e.padding,i=r.height+e.padding,s=[{x:0,y:0},{x:n+i/2,y:0},{x:n,y:-i/2},{x:n+i/2,y:-i},{x:0,y:-i}],l=x(a,n,i,s);return l.attr("style",e.style),g(e,l),e.intersect=function(t){return m.polygon(e,s,t)},a},cylinder:async(t,e)=>{const{shapeSvg:a,bbox:r}=await p(t,e,S(e),!0),n=r.width+e.padding,i=n/2,s=i/(2.5+n/50),l=r.height+s+e.padding,o="M 0,"+s+" a "+i+","+s+" 0,0,0 "+n+" 0 a "+i+","+s+" 0,0,0 "+-n+" 0 l 0,"+l+" a "+i+","+s+" 0,0,0 "+n+" 0 l 0,"+-l,d=a.attr("label-offset-y",s).insert("path",":first-child").attr("style",e.style).attr("d",o).attr("transform","translate("+-n/2+","+-(l/2+s)+")");return g(e,d),e.intersect=function(t){const a=m.rect(e,t),r=a.x-e.x;if(0!=i&&(Math.abs(r)<e.width/2||Math.abs(r)==e.width/2&&Math.abs(a.y-e.y)>e.height/2-s)){let n=s*s*(1-r*r/(i*i));0!=n&&(n=Math.sqrt(n)),n=s-n,t.y-e.y>0&&(n=-n),a.y+=n}return a},a},start:(t,e)=>{const a=t.insert("g").attr("class","node default").attr("id",e.domId||e.id),r=a.insert("circle",":first-child");return r.attr("class","state-start").attr("r",7).attr("width",14).attr("height",14),g(e,r),e.intersect=function(t){return m.circle(e,7,t)},a},end:(t,e)=>{const a=t.insert("g").attr("class","node default").attr("id",e.domId||e.id),r=a.insert("circle",":first-child"),n=a.insert("circle",":first-child");return n.attr("class","state-start").attr("r",7).attr("width",14).attr("height",14),r.attr("class","state-end").attr("r",5).attr("width",10).attr("height",10),g(e,n),e.intersect=function(t){return m.circle(e,7,t)},a},note:async(t,a)=>{a.useHtmlLabels||e().flowchart.htmlLabels||(a.centerLabel=!0);const{shapeSvg:r,bbox:i,halfPadding:s}=await p(t,a,"node "+a.classes,!0);n.info("Classes = ",a.classes);const l=r.insert("rect",":first-child");return l.attr("rx",a.rx).attr("ry",a.ry).attr("x",-i.width/2-s).attr("y",-i.height/2-s).attr("width",i.width+a.padding).attr("height",i.height+a.padding),g(a,l),a.intersect=function(t){return m.rect(a,t)},r},subroutine:async(t,e)=>{const{shapeSvg:a,bbox:r}=await p(t,e,S(e),!0),n=r.width+e.padding,i=r.height+e.padding,s=[{x:0,y:0},{x:n,y:0},{x:n,y:-i},{x:0,y:-i},{x:0,y:0},{x:-8,y:0},{x:n+8,y:0},{x:n+8,y:-i},{x:-8,y:-i},{x:-8,y:0}],l=x(a,n,i,s);return l.attr("style",e.style),g(e,l),e.intersect=function(t){return m.polygon(e,s,t)},a},fork:T,join:T,class_box:(a,r)=>{const n=r.padding/2;let i;i=r.classes?"node "+r.classes:"node default";const l=a.insert("g").attr("class",i).attr("id",r.domId||r.id),o=l.insert("rect",":first-child"),d=l.insert("line"),h=l.insert("line");let c=0,p=4;const x=l.insert("g").attr("class","label");let f=0;const u=r.classData.annotations&&r.classData.annotations[0],w=r.classData.annotations[0]?"«"+r.classData.annotations[0]+"»":"",b=x.node().appendChild(y(w,r.labelStyle,!0,!0));let k=b.getBBox();if(t(e().flowchart.htmlLabels)){const t=b.children[0],e=s(b);k=t.getBoundingClientRect(),e.attr("width",k.width),e.attr("height",k.height)}r.classData.annotations[0]&&(p+=k.height+4,c+=k.width);let L=r.classData.label;void 0!==r.classData.type&&""!==r.classData.type&&(e().flowchart.htmlLabels?L+="&lt;"+r.classData.type+"&gt;":L+="<"+r.classData.type+">");const S=x.node().appendChild(y(L,r.labelStyle,!0,!0));s(S).attr("class","classTitle");let v=S.getBBox();if(t(e().flowchart.htmlLabels)){const t=S.children[0],e=s(S);v=t.getBoundingClientRect(),e.attr("width",v.width),e.attr("height",v.height)}p+=v.height+4,v.width>c&&(c=v.width);const M=[];r.classData.members.forEach((a=>{const n=a.getDisplayDetails();let i=n.displayText;e().flowchart.htmlLabels&&(i=i.replace(/</g,"&lt;").replace(/>/g,"&gt;"));const l=x.node().appendChild(y(i,n.cssStyle?n.cssStyle:r.labelStyle,!0,!0));let o=l.getBBox();if(t(e().flowchart.htmlLabels)){const t=l.children[0],e=s(l);o=t.getBoundingClientRect(),e.attr("width",o.width),e.attr("height",o.height)}o.width>c&&(c=o.width),p+=o.height+4,M.push(l)})),p+=8;const T=[];if(r.classData.methods.forEach((a=>{const n=a.getDisplayDetails();let i=n.displayText;e().flowchart.htmlLabels&&(i=i.replace(/</g,"&lt;").replace(/>/g,"&gt;"));const l=x.node().appendChild(y(i,n.cssStyle?n.cssStyle:r.labelStyle,!0,!0));let o=l.getBBox();if(t(e().flowchart.htmlLabels)){const t=l.children[0],e=s(l);o=t.getBoundingClientRect(),e.attr("width",o.width),e.attr("height",o.height)}o.width>c&&(c=o.width),p+=o.height+4,T.push(l)})),p+=8,u){let t=(c-k.width)/2;s(b).attr("transform","translate( "+(-1*c/2+t)+", "+-1*p/2+")"),f=k.height+4}let B=(c-v.width)/2;return s(S).attr("transform","translate( "+(-1*c/2+B)+", "+(-1*p/2+f)+")"),f+=v.height+4,d.attr("class","divider").attr("x1",-c/2-n).attr("x2",c/2+n).attr("y1",-p/2-n+8+f).attr("y2",-p/2-n+8+f),f+=8,M.forEach((t=>{s(t).attr("transform","translate( "+-c/2+", "+(-1*p/2+f+4)+")");const e=null==t?void 0:t.getBBox();f+=((null==e?void 0:e.height)??0)+4})),f+=8,h.attr("class","divider").attr("x1",-c/2-n).attr("x2",c/2+n).attr("y1",-p/2-n+8+f).attr("y2",-p/2-n+8+f),f+=8,T.forEach((t=>{s(t).attr("transform","translate( "+-c/2+", "+(-1*p/2+f)+")");const e=null==t?void 0:t.getBBox();f+=((null==e?void 0:e.height)??0)+4})),o.attr("style",r.style).attr("class","outer title-state").attr("x",-c/2-n).attr("y",-p/2-n).attr("width",c+r.padding).attr("height",p+r.padding),g(r,o),r.intersect=function(t){return m.rect(r,t)},l}};let _={};const C=async(t,a,r)=>{let n,i;if(a.link){let s;"sandbox"===e().securityLevel?s="_top":a.linkTarget&&(s=a.linkTarget||"_blank"),n=t.insert("svg:a").attr("xlink:href",a.link).attr("target",s),i=await B[a.shape](n,a,r)}else i=await B[a.shape](t,a,r),n=i;return a.tooltip&&i.attr("title",a.tooltip),a.class&&i.attr("class","node default "+a.class),n.attr("data-node","true"),n.attr("data-id",a.id),_[a.id]=n,a.haveCallback&&_[a.id].attr("class",_[a.id].attr("class")+" clickable"),n},E=(t,e)=>{_[e.id]=t},$=()=>{_={}},P=t=>{const e=_[t.id];n.trace("Transforming node",t.diff,t,"translate("+(t.x-t.width/2-5)+", "+t.width/2+")");const a=t.diff||0;return t.clusterNode?e.attr("transform","translate("+(t.x+a-t.width/2)+", "+(t.y-t.height/2-8)+")"):e.attr("transform","translate("+t.x+", "+t.y+")"),a},j=({flowchart:t})=>{var e,a;const r=(null==(e=null==t?void 0:t.subGraphTitleMargin)?void 0:e.top)??0,n=(null==(a=null==t?void 0:t.subGraphTitleMargin)?void 0:a.bottom)??0;return{subGraphTitleTopMargin:r,subGraphTitleBottomMargin:n,subGraphTitleTotalMargin:r+n}},R={aggregation:18,extension:18,composition:18,dependency:6,lollipop:13.5,arrow_point:5.3};function W(t,e){if(void 0===t||void 0===e)return{angle:0,deltaX:0,deltaY:0};t=Y(t),e=Y(e);const[a,r]=[t.x,t.y],[n,i]=[e.x,e.y],s=n-a,l=i-r;return{angle:Math.atan(l/s),deltaX:s,deltaY:l}}const Y=t=>Array.isArray(t)?{x:t[0],y:t[1]}:t,O=t=>({x:function(e,a,r){let n=0;if(0===a&&Object.hasOwn(R,t.arrowTypeStart)){const{angle:e,deltaX:a}=W(r[0],r[1]);n=R[t.arrowTypeStart]*Math.cos(e)*(a>=0?1:-1)}else if(a===r.length-1&&Object.hasOwn(R,t.arrowTypeEnd)){const{angle:e,deltaX:a}=W(r[r.length-1],r[r.length-2]);n=R[t.arrowTypeEnd]*Math.cos(e)*(a>=0?1:-1)}return Y(e).x+n},y:function(e,a,r){let n=0;if(0===a&&Object.hasOwn(R,t.arrowTypeStart)){const{angle:e,deltaY:a}=W(r[0],r[1]);n=R[t.arrowTypeStart]*Math.abs(Math.sin(e))*(a>=0?1:-1)}else if(a===r.length-1&&Object.hasOwn(R,t.arrowTypeEnd)){const{angle:e,deltaY:a}=W(r[r.length-1],r[r.length-2]);n=R[t.arrowTypeEnd]*Math.abs(Math.sin(e))*(a>=0?1:-1)}return Y(e).y+n}}),X=(t,e,a,r,n)=>{e.arrowTypeStart&&I(t,"start",e.arrowTypeStart,a,r,n),e.arrowTypeEnd&&I(t,"end",e.arrowTypeEnd,a,r,n)},H={arrow_cross:"cross",arrow_point:"point",arrow_barb:"barb",arrow_circle:"circle",aggregation:"aggregation",extension:"extension",composition:"composition",dependency:"dependency",lollipop:"lollipop"},I=(t,e,a,r,i,s)=>{const l=H[a];if(!l)return void n.warn(`Unknown arrow type: ${a}`);const o="start"===e?"Start":"End";t.attr(`marker-${e}`,`url(${r}#${i}_${s}-${l}${o})`)};let N={},D={};const U=()=>{N={},D={}},A=(a,r)=>{const n=t(e().flowchart.htmlLabels),i="markdown"===r.labelType?l(a,r.label,{style:r.labelStyle,useHtmlLabels:n,addSvgBackground:!0}):y(r.label,r.labelStyle),o=a.insert("g").attr("class","edgeLabel"),d=o.insert("g").attr("class","label");d.node().appendChild(i);let h,c=i.getBBox();if(n){const t=i.children[0],e=s(i);c=t.getBoundingClientRect(),e.attr("width",c.width),e.attr("height",c.height)}if(d.attr("transform","translate("+-c.width/2+", "+-c.height/2+")"),N[r.id]=o,r.width=c.width,r.height=c.height,r.startLabelLeft){const t=y(r.startLabelLeft,r.labelStyle),e=a.insert("g").attr("class","edgeTerminals"),n=e.insert("g").attr("class","inner");h=n.node().appendChild(t);const i=t.getBBox();n.attr("transform","translate("+-i.width/2+", "+-i.height/2+")"),D[r.id]||(D[r.id]={}),D[r.id].startLeft=e,Z(h,r.startLabelLeft)}if(r.startLabelRight){const t=y(r.startLabelRight,r.labelStyle),e=a.insert("g").attr("class","edgeTerminals"),n=e.insert("g").attr("class","inner");h=e.node().appendChild(t),n.node().appendChild(t);const i=t.getBBox();n.attr("transform","translate("+-i.width/2+", "+-i.height/2+")"),D[r.id]||(D[r.id]={}),D[r.id].startRight=e,Z(h,r.startLabelRight)}if(r.endLabelLeft){const t=y(r.endLabelLeft,r.labelStyle),e=a.insert("g").attr("class","edgeTerminals"),n=e.insert("g").attr("class","inner");h=n.node().appendChild(t);const i=t.getBBox();n.attr("transform","translate("+-i.width/2+", "+-i.height/2+")"),e.node().appendChild(t),D[r.id]||(D[r.id]={}),D[r.id].endLeft=e,Z(h,r.endLabelLeft)}if(r.endLabelRight){const t=y(r.endLabelRight,r.labelStyle),e=a.insert("g").attr("class","edgeTerminals"),n=e.insert("g").attr("class","inner");h=n.node().appendChild(t);const i=t.getBBox();n.attr("transform","translate("+-i.width/2+", "+-i.height/2+")"),e.node().appendChild(t),D[r.id]||(D[r.id]={}),D[r.id].endRight=e,Z(h,r.endLabelRight)}return i};function Z(t,a){e().flowchart.htmlLabels&&t&&(t.style.width=9*a.length+"px",t.style.height="12px")}const q=(t,a)=>{n.debug("Moving label abc88 ",t.id,t.label,N[t.id],a);let r=a.updatedPath?a.updatedPath:a.originalPath;const s=e(),{subGraphTitleTotalMargin:l}=j(s);if(t.label){const e=N[t.id];let s=t.x,o=t.y;if(r){const e=i.calcLabelPosition(r);n.debug("Moving label "+t.label+" from (",s,",",o,") to (",e.x,",",e.y,") abc88"),a.updatedPath&&(s=e.x,o=e.y)}e.attr("transform",`translate(${s}, ${o+l/2})`)}if(t.startLabelLeft){const e=D[t.id].startLeft;let a=t.x,n=t.y;if(r){const e=i.calcTerminalLabelPosition(t.arrowTypeStart?10:0,"start_left",r);a=e.x,n=e.y}e.attr("transform",`translate(${a}, ${n})`)}if(t.startLabelRight){const e=D[t.id].startRight;let a=t.x,n=t.y;if(r){const e=i.calcTerminalLabelPosition(t.arrowTypeStart?10:0,"start_right",r);a=e.x,n=e.y}e.attr("transform",`translate(${a}, ${n})`)}if(t.endLabelLeft){const e=D[t.id].endLeft;let a=t.x,n=t.y;if(r){const e=i.calcTerminalLabelPosition(t.arrowTypeEnd?10:0,"end_left",r);a=e.x,n=e.y}e.attr("transform",`translate(${a}, ${n})`)}if(t.endLabelRight){const e=D[t.id].endRight;let a=t.x,n=t.y;if(r){const e=i.calcTerminalLabelPosition(t.arrowTypeEnd?10:0,"end_right",r);a=e.x,n=e.y}e.attr("transform",`translate(${a}, ${n})`)}},z=(t,e)=>{n.debug("abc88 cutPathAtIntersect",t,e);let a=[],r=t[0],i=!1;return t.forEach((t=>{if(((t,e)=>{const a=t.x,r=t.y,n=Math.abs(e.x-a),i=Math.abs(e.y-r),s=t.width/2,l=t.height/2;return n>=s||i>=l})(e,t)||i)r=t,i||a.push(t);else{const s=((t,e,a)=>{n.debug(`intersection calc abc89:\n  outsidePoint: ${JSON.stringify(e)}\n  insidePoint : ${JSON.stringify(a)}\n  node        : x:${t.x} y:${t.y} w:${t.width} h:${t.height}`);const r=t.x,i=t.y,s=Math.abs(r-a.x),l=t.width/2;let o=a.x<e.x?l-s:l+s;const d=t.height/2,h=Math.abs(e.y-a.y),c=Math.abs(e.x-a.x);if(Math.abs(i-e.y)*l>Math.abs(r-e.x)*d){let t=a.y<e.y?e.y-d-i:i-d-e.y;o=c*t/h;const r={x:a.x<e.x?a.x+o:a.x-c+o,y:a.y<e.y?a.y+h-t:a.y-h+t};return 0===o&&(r.x=e.x,r.y=e.y),0===c&&(r.x=e.x),0===h&&(r.y=e.y),n.debug(`abc89 topp/bott calc, Q ${h}, q ${t}, R ${c}, r ${o}`,r),r}{o=a.x<e.x?e.x-l-r:r-l-e.x;let t=h*o/c,i=a.x<e.x?a.x+c-o:a.x-c+o,s=a.y<e.y?a.y+t:a.y-t;return n.debug(`sides calc abc89, Q ${h}, q ${t}, R ${c}, r ${o}`,{_x:i,_y:s}),0===o&&(i=e.x,s=e.y),0===c&&(i=e.x),0===h&&(s=e.y),{x:i,y:s}}})(e,r,t);let l=!1;a.forEach((t=>{l=l||t.x===s.x&&t.y===s.y})),a.some((t=>t.x===s.x&&t.y===s.y))||a.push(s),i=!0}})),a},G=function(t,a,r,i,s,l,h){let c=r.points;n.debug("abc88 InsertEdge: edge=",r,"e=",a);let y=!1;const p=l.node(a.v);var g=l.node(a.w);(null==g?void 0:g.intersect)&&(null==p?void 0:p.intersect)&&(c=c.slice(1,r.points.length-1),c.unshift(p.intersect(c[0])),c.push(g.intersect(c[c.length-1]))),r.toCluster&&(n.debug("to cluster abc88",i[r.toCluster]),c=z(r.points,i[r.toCluster].node),y=!0),r.fromCluster&&(n.debug("from cluster abc88",i[r.fromCluster]),c=z(c.reverse(),i[r.fromCluster].node).reverse(),y=!0);const x=c.filter((t=>!Number.isNaN(t.y)));let f=d;!r.curve||"graph"!==s&&"flowchart"!==s||(f=r.curve);const{x:u,y:w}=O(r),b=o().x(u).y(w).curve(f);let m;switch(r.thickness){case"normal":m="edge-thickness-normal";break;case"thick":case"invisible":m="edge-thickness-thick";break;default:m=""}switch(r.pattern){case"solid":m+=" edge-pattern-solid";break;case"dotted":m+=" edge-pattern-dotted";break;case"dashed":m+=" edge-pattern-dashed"}const k=t.append("path").attr("d",b(x)).attr("id",r.id).attr("class"," "+m+(r.classes?" "+r.classes:"")).attr("style",r.style);let L="";(e().flowchart.arrowMarkerAbsolute||e().state.arrowMarkerAbsolute)&&(L=window.location.protocol+"//"+window.location.host+window.location.pathname+window.location.search,L=L.replace(/\(/g,"\\("),L=L.replace(/\)/g,"\\)")),X(k,r,L,h,s);let S={};return y&&(S.updatedPath=c),S.originalPath=r.points,S};export{C as a,A as b,G as c,q as d,$ as e,U as f,j as g,y as h,c as i,b as j,O as k,p as l,X as m,P as p,E as s,g as u};
