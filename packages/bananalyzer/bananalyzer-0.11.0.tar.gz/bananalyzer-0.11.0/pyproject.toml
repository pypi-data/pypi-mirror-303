[tool.poetry]
name = "bananalyzer"
version = "0.11.0"


description = "Open source AI Agent evaluation framework for web tasks üêíüçå"
authors = ["asim-shrestha <asim.shrestha@hotmail.com>", "awtkns <hello@awtkns.com>"]
readme = "README.md"

[tool.poetry.scripts]
bananalyze = "bananalyzer.__main__:main"

[tool.poetry.dependencies]
python = ">=3.11,<4.0"
playwright = ">=1.47.0"
pydantic = "^2.8.2"
pytest-asyncio = "^0.24.0"
deepdiff = "^8.0.0"
pytest = "^8.3.2"
pytest-html = "^4.1.1"
pytest-xdist = "^3.6.1"
tabulate = "^0.9.0"
requests = "^2.32.3"
boto3 = "^1.35.8"
psutil = "^6.0.0"
numpy = "^2.1.0"

[tool.poetry.group.test.dependencies]
pytest-mock = "^3.14.0"
pytest-cov = "^5.0.0"

[tool.poetry.group.dev.dependencies]
mypy = "^1.11.2"
types-requests = "^2.32.0.20240712"
types-tabulate = "^0.9.0.20240106"
ruff = "^0.6.2"

[tool.mypy]
plugins = [
    "pydantic.mypy"
]
strict = true
ignore_missing_imports = true
allow_subclassing_any = true
allow_untyped_calls = true
pretty = true
show_error_codes = true
implicit_reexport = true
allow_untyped_decorators = true
warn_unused_ignores = false
warn_return_any = false
namespace_packages = true
files = "bananalyzer"
exclude = ["tests", "venv", "static", "bananalytics"]

[tool.pytest.ini_options]
asyncio_default_fixture_loop_scope = "session"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
