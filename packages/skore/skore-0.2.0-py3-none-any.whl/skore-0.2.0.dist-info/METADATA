Metadata-Version: 2.3
Name: skore
Version: 0.2.0
Summary: Tooling and assistance for data scientists to "Own Your Data Science"
Project-URL: Homepage, https://probabl.ai
Project-URL: Repository, https://github.com/probabl-ai/skore
Project-URL: Download, https://pypi.org/project/skore/#files
Project-URL: Issues, https://github.com/probabl-ai/skore/issues
Project-URL: Release notes, https://github.com/probabl-ai/skore/releases
Maintainer-email: skore developers <skore@signal.probabl.ai>
License: MIT License
                
                Copyright (c) 2024 Probabl
                
                Permission is hereby granted, free of charge, to any person obtaining a copy
                of this software and associated documentation files (the "Software"), to deal
                in the Software without restriction, including without limitation the rights
                to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
                copies of the Software, and to permit persons to whom the Software is
                furnished to do so, subject to the following conditions:
                
                The above copyright notice and this permission notice shall be included in all
                copies or substantial portions of the Software.
                
                THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
                IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
                FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
                AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
                LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
                OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
                SOFTWARE.
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: BSD License
Classifier: Operating System :: MacOS
Classifier: Operating System :: Microsoft :: Windows
Classifier: Operating System :: POSIX
Classifier: Operating System :: Unix
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Topic :: Scientific/Engineering
Classifier: Topic :: Software Development
Requires-Python: <3.13,>=3.9
Requires-Dist: diskcache
Requires-Dist: fastapi
Requires-Dist: plotly<6,>=5
Requires-Dist: rich
Requires-Dist: skops
Requires-Dist: uvicorn
Provides-Extra: test
Requires-Dist: altair<6,>=5; extra == 'test'
Requires-Dist: httpx; extra == 'test'
Requires-Dist: matplotlib; extra == 'test'
Requires-Dist: pandas; extra == 'test'
Requires-Dist: pillow; extra == 'test'
Requires-Dist: plotly; extra == 'test'
Requires-Dist: pre-commit; extra == 'test'
Requires-Dist: pytest; extra == 'test'
Requires-Dist: pytest-cov; extra == 'test'
Requires-Dist: pytest-order; extra == 'test'
Requires-Dist: pytest-randomly; extra == 'test'
Requires-Dist: ruff; extra == 'test'
Requires-Dist: scikit-learn; extra == 'test'
Description-Content-Type: text/markdown

# üëã Welcome to skore

![ci](https://github.com/probabl-ai/skore/actions/workflows/ci.yml/badge.svg?event=push)
![python](https://img.shields.io/badge/python-3.9%20%7C%203.10%20%7C%203.11%20%7C%203.12-blue?style=flat&logo=python)
[![pypi](https://img.shields.io/pypi/v/skore)](https://pypi.org/project/skore/)
![license](https://img.shields.io/pypi/l/skore)
[![Discord](https://img.shields.io/badge/Discord-%235865F2.svg?logo=discord&logoColor=white)](https://discord.probabl.ai/)

With `skore`, data scientists can:
1. Store objects of different types from their Python code: python lists, `scikit-learn` fitted pipelines, `plotly` figures, and more.
2. **Track** and  **visualize** these stored objects on a user-friendly dashboard.
3. Export the dashboard to a HTML file.

These are only the first features: `skore` is a work in progress and aims to be an end-to-end library for data scientists.
Stay tuned, and join [our Discord](https://discord.probabl.ai) if you want to give us feedback!

![GIF: short demo of `skore`](https://raw.githubusercontent.com/sylvaincom/sylvaincom.github.io/master/files/probabl/skore/2024_10_14_skore_demo.gif)

## ‚öôÔ∏è Installation

First of all, we recommend using a [virtual environment (venv)](https://docs.python.org/3/tutorial/venv.html). You need `python>=3.9`.

Then, you can install `skore` by using `pip`:
```bash
pip install -U skore
```

üö® For Windows users, the encoding must be set to [UTF-8](https://docs.python.org/3/using/windows.html#utf-8-mode): see [PYTHONUTF8](https://docs.python.org/3/using/cmdline.html#envvar-PYTHONUTF8).

## üöÄ Quick start

1. From your shell, initialize a `skore` project, here named `project.skore`, that will be in your current working directory:
```bash
python -m skore create "project.skore"
```
2. Then, from your Python code (in the same directory), load the project and store an integer for example:
```python
from skore import load
project = load("project.skore")
project.put("my_int", 3)
```
3. Finally, from your shell (in the same directory), start the UI locally:
```bash
python -m skore launch "project.skore"
```
This will automatically open a browser at the UI's location:
1. On the top left, create a new `View`.
2. From the `Items` section on the bottom left, you can add stored items to this view, either by double-cliking on them or by doing drag-and-drop.

## üë®‚Äçüíª More examples

üí° Note that after launching the dashboard, you can keep modifying the current items or store new ones from your python code, and the dashboard will automatically be refreshed.

Storing a `pandas` dataframe:
```python
import numpy as np
import pandas as pd

my_df = pd.DataFrame(np.random.randn(3, 3))
project.put("my_df", my_df)
```

Storing a `matplotlib` figure:
```python
import matplotlib.pyplot as plt

x = [0, 1, 2, 3, 4, 5]
fig, ax = plt.subplots(figsize=(5, 3), layout="constrained")
ax.plot(x)
project.put("my_figure", fig)
```

Storing a `scikit-learn` fitted pipeline:
```python
from sklearn.datasets import load_diabetes
from sklearn.linear_model import Lasso
from sklearn.pipeline import Pipeline
from sklearn.preprocessing import StandardScaler

diabetes = load_diabetes()
X = diabetes.data[:150]
y = diabetes.target[:150]
my_pipeline = Pipeline(
    [("standard_scaler", StandardScaler()), ("lasso", Lasso(alpha=2))]
)
my_pipeline.fit(X, y)
project.put("my_fitted_pipeline", my_pipeline)
```

üë®‚Äçüè´ For a complete introductory example, see our [basic usage notebook](https://github.com/probabl-ai/skore/blob/main/examples/01_basic_usage.ipynb).
It shows you how to store all types of items: python lists and dictionaries, `numpy` arrays, `pandas` dataframes, `scikit-learn` fitted models, figures (`matplotlib`, `altair`, and `plotly`), etc.
The resulting `skore` report has been exported to [this HTML file](https://sylvaincom.github.io/files/probabl/skore/01_basic_usage.html).

## üî® Contributing

Thank you for your interest!
See [CONTRIBUTING.md](https://github.com/probabl-ai/skore/blob/main/CONTRIBUTING.md).

## üí¨ Where to ask questions

| Type                                | Platforms                        |
|-------------------------------------|----------------------------------|
| üêõ Bug reports                  | [GitHub Issue Tracker]           |
| ‚ú® Feature requests and ideas      | [GitHub Issue Tracker] & [Discord] |
| üí¨ Usage questions, discussions, contributions, etc              | [Discord]   |

[GitHub Issue Tracker]: https://github.com/probabl-ai/skore/issues
[Discord]: https://discord.gg/scBZerAGwW

---

Brought to you by

<a href="https://probabl.ai" target="_blank">
    <img width="120" src="https://sylvaincom.github.io/files/probabl/Logo-orange.png" alt="Probabl logo">
</a>
