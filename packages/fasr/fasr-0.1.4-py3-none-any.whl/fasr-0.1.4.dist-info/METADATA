Metadata-Version: 2.1
Name: fasr
Version: 0.1.4
Summary: FASR: Fast Automatic Speech Recognition
Author: wangmengdi06
Author-email: wangmengdi06@58.com
Requires-Python: >=3.10,<4.0
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Requires-Dist: aiofiles (>=24.1.0,<25.0.0)
Requires-Dist: aiohttp (>=3.10.5,<4.0.0)
Requires-Dist: confection (>=0.1.5,<0.2.0)
Requires-Dist: docarray (>=0.40.0,<0.41.0)
Requires-Dist: funasr (>=1.1.11,<2.0.0)
Requires-Dist: hydra-core (==1.3.2)
Requires-Dist: joblib (>=1.4.2,<2.0.0)
Requires-Dist: jsonargparse[signatures,urls] (>=4.29.0,<5.0.0)
Requires-Dist: librosa (>=0.10.2,<0.11.0)
Requires-Dist: lightning_utilities (>=0.11.2,<0.12.0)
Requires-Dist: loguru (>=0.7.2,<0.8.0)
Requires-Dist: modelscope (>=1.14.0,<2.0.0)
Requires-Dist: numpy (>=1.26.4,<2.0.0)
Requires-Dist: onnxruntime (>=1.17.1,<2.0.0)
Requires-Dist: protobuf (==3.20.2)
Requires-Dist: pydantic (>=2.8.2,<3.0.0)
Requires-Dist: torch (>=2.1.0,<3.0.0)
Requires-Dist: torch_complex (==0.4.3)
Requires-Dist: torchaudio (>=2.1.0,<3.0.0)
Description-Content-Type: text/markdown

# 🪐 项目: fasr

Fast Auto Speech Recognition

## 📋 简介

    fasr是一款快速且易于使用的python库，它源于FunASR，专注于推理性能，目标是成为一个工业级别的python语音识别推理库。

[`文档地址`](https://docs.58corp.com/#/space/1830509042628354051?goindex=true)

## 📋 安装

### wpai
- 在wpai平台选择pytorch镜像后，执行以下命令安装所有依赖
```bash
bash install.sh
```

### 本地
- 安装pytorch： 通过[官网](https://pytorch.org/get-started/locally/)安装对应cuda版本
- 安装onnxruntime-gpu: 通过[官网](https://onnxruntime.ai/docs/install/)安装对应cuda版本
- 安装fasr
```bash
pip install poetry
poetry build
pip install dist/fasr-xxx-tar.gz
```



## 📋 使用

- 下载模型
```bash
fasr prepare
```
- 构建pipeline
```python
from fasr import ASR

# 语音识别pipeline
asr = ASR().add_pipe('loader').add_pipe('detector').add_pipe('recognizer').add_pipe('sentencizer')

# 准备音频地址
urls = get_urls()

# 运行
audios = asr(urls)

# 打印结果
for audio in audios:
    for channel in audio.channels:
        print(channel.text)

```

- benchmark
```bash
# 准备音频地址urls.txt
fasr benchmark pipeline ./urls.txt 
fasr benchmark vad ./urls.txt
```
